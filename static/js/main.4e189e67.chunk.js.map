{"version":3,"sources":["components/CustomChk.js","js/customConsole.js","components/CustomRadio.js","components/WeatherMaps.js","js/threeStuff.js","js/smoothScroll.js","components/Card.js","components/Prediction.js","components/Notification.js","components/ToTopBtn.js","js/getFromAPIs.js","ThisWeather.js","index.js","components/Icon.js"],"names":["CustomChk","props","iconClasses","customChkClasses","undefined","iconWordB","push","apply","Object","c_Users_Leo_Google_Drive_Proyectos_Proyectos_Visual_Studio_Code_Website_this_weather_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","join","id","idWord","type","defaultChecked","defaultChk","title","titleWord","htmlFor","_Icon__WEBPACK_IMPORTED_MODULE_2__","name","iconWordA","classes","concat","RAD","DD","suc","console","msg","log","alt","err","dbg","not","fcy","CustomRadio","toConsumableArray","react_default","groupWord","Icon","iconWord","initDone","setInitDoneTrue","camera","THREE","RES","NEAR","FAR","layers","enable","DEFAULT_OPTION","renderer","antialias","alpha","powerPreference","stencil","setSize","setPixelRatio","window","devicePixelRatio","gammaFactor","gammaOutput","domElement","controls","OrbitControls","rotateSpeed","autoRotate","autoRotateSpeed","enablePan","enableZoom","enableKeys","minPolarAngle","Math","PI","maxPolarAngle","Z_OFF","VEC","RAY_CASTER","MAPS","label","ref","icon","CITY_LABELS","SMALL_MEDIA","matchMedia","WeatherMaps","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","option","showContent","showGlobe","showMap","setGlobe","bind","assertThisInitialized","setMap","setWeatherOption","animateRaf","labelsRaf","animate","setCameraPosition","toggleLights","toggleRotation","resetRedererSize","resetRendererPixelRatio","updateLabels","mapCanvas","init","i","N_MAPS_TO_LOAD","createWeatherMap","document","getElementById","appendChild","style","overflowX","addEventListener","_this2","_loop","e","W","matches","OFFSET","SCROLLABLE","SCROLLED","target","scrollLeft","width","addListener","dragscroll","reset","cancelAnimationFrame","setState","showMAp","disable","getContext","clearRect","putImageData","WEATHER_CTX_MAT","getImageData","requestAnimationFrame","update","render","SCENE","theta","matrix","makeRotationFromEuler","position","set","applyMatrix4","lookAt","DPR","checked","AMB","intensity","LIGHT_ON","SUN","LIGHT_OFF","currentSize","getSize","x","_this3","clientWidth","H","clientHeight","forEach","item","dot","y","updateWorldMatrix","getWorldPosition","project","setFromCamera","VEC_X","VEC_Y","transform","round","z","display","key","height","map","Component","merToEqrWorker","Worker","TEXTURE","load","SPECULAR","BUMP","encoding","URL","base","last1","last2","MAP","SPH_RAD","SPH_SCALE","T","T_SIZE","BASE_SPH_GEO","rotateY","degToRad","_init","arguments","_callee7","PHYS","AUX","WEATHER","ATMO","regenerator_default","wrap","_context7","prev","next","fog","setSunPosition","geometry","material","specularMap","specular","shininess","bumpMap","bumpScale","matrixAutoUpdate","canvas","transparent","scale","multiplyScalar","add","color","side","opacity","setInterval","updateSunPosition","stop","sun","rotY","HH","Date","getUTCHours","MM","getUTCMonth","MATRIX","rotX","MERCATOR_CANVAS","MERCATOR_CTX","cont","X00","Image","X10","X01","X11","drawMapTiles","_x","_x2","_x3","_drawMapTiles","asyncToGenerator","mark","_callee5","img","T_DATA","L","_i","A","_i2","_i3","_i4","R","G","_i5","_y","LINE","_context5","drawImage","data","length","postMessage","crossOrigin","src","onload","_callee","_context","abrupt","sent","_callee2","_context2","_callee3","_context3","_callee4","_context4","messageCount","onmessage","I","_ref5","_callee6","merY","_context6","content","newY","_x4","needsUpdate","intervalHandler","currentScroll","step","initSS","newTarget","clearInterval","documentElement","scrollTop","runSS","diff","scrollTo","DOT_GEO","DOT_MAT","precision","LINE_MAT","Card","time","timeTimer","updateTimer","iconId","weatherId","remove","createTag","getTime","classList","line","filter","timezone","OFFSET_F","floor","mm_off","hh","mm","getUTCMinutes","_this4","lbl","textContent","cityName","onclick","offsetTop","MTX","_this$props$data$coor","coord","lat","lon","DOT","LINE_GEO","vertices","X","Y","fullName","rotated","extras","countryNameNative","countryCode","countryName","temp","tempMax","tempMin","desc","onClick","Prediction","predictionClicked","clickHandler","_this$props$data","start","match","finish","country","value","Notification","waitAndRemove","setTimeout","ToTopBtn","API","API_CITY_NAME_PREFIX","API_CITY_ID_PREFIX","API_OPTIONS","getPredictions","_getPredictions","inputName","city","newList","replace","TEST","RegExp","RE_A","RE_B","RE_C","CITY_LIST","test","unshift","exec","getExtras","_getExtras","ITEM","ALL_LIST","alpha2Code","translations","es","nativeName","getUserLocation","_getUserLocation","RES_JSON","fetch","status","json","country_code2","getWeather","_getWeather","PREFIX","sys","weather","description","main","temp_max","temp_min","LoadingMsg","About","lazy","__webpack_require__","then","ThisWeather","input","cardList","predictionList","notificationList","inputBox","predictionListBox","toTopBtn","currentFocus","inputKeyDown","inputChanged","fireSearch","stopSearchingLoop","addCard","updateCard","removeCard","removeNotification","fireSearchFromPrediction","res","focusID","resetPredictionList","predListDOM","getElementsByClassName","keyCode","preventDefault","addActivePrediction","PREDS","querySelector","VAL","isOnLine","navigator","onLine","MSG","addNotification","focus","catch","DATA","FULL_NAME","exist","card","EXTRAS","stopUpdatingLoop","indexOf","newCardList","prevState","newNotList","shift","removeActivePrediction","react_router_dom","predvisible","viewbox","placeholder","onKeyDown","onChange","onFocus","autoComplete","Prediction_Prediction","to","react_router","exact","path","Card_Card","WeatherMaps_WeatherMaps","Notification_Notification","react","fallback","component","href","ReactDOM","ThisWeather_ThisWeather","size","viewBox","xlinkHref"],"mappings":"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","file":"static/js/main.4e189e67.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default function CustomChk(props) {\r\n  let iconClasses = [];\r\n  let customChkClasses = ['custom_chk_container', 'btn'];\r\n  if (props.iconWordB !== undefined) {\r\n    customChkClasses.push('dual_icon');\r\n    iconClasses.push('perma_active');\r\n  } else customChkClasses.push('single_icon');\r\n  if (props.iconClasses !== undefined) iconClasses.push(...props.iconClasses);\r\n\r\n  return (\r\n    <div className={customChkClasses.join(' ')}>\r\n      <input id={'custom_chk_' + props.idWord}\r\n        className=\"custom_chk\"\r\n        type=\"checkbox\"\r\n        defaultChecked={props.defaultChk} />\r\n      <label className=\"custom_chk_lbl\"\r\n        title={props.titleWord}\r\n        htmlFor={'custom_chk_' + props.idWord} />\r\n      <Icon name={props.iconWordA} classes={[...iconClasses]} />\r\n      {(props.iconWordB !== undefined) ?\r\n        (<Icon name={props.iconWordB} classes={[...iconClasses]} />) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomChk.propTypes = {\r\n  idWord: PropTypes.string.isRequired,\r\n  iconWordA: PropTypes.string.isRequired,\r\n  iconWordB: PropTypes.string,\r\n  iconClasses: PropTypes.arrayOf(PropTypes.string),\r\n  titleWord: PropTypes.string.isRequired,\r\n  defaultChk: PropTypes.bool.isRequired\r\n}\r\n","const FORMAT = '%c%s';\r\nconst RAD = 'border-radius: 99px;';\r\nconst DD = ' » ';\r\n\r\n// SUCCESS\r\nexport const suc = console.suc = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: GreenYellow; background-color: DarkGreen; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ALERT\r\nexport const alt = console.alt = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: Black; background-color: Gold; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ERROR\r\nexport const err = console.err = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: MistyRose; background-color: DarkRed; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// NOTIFICATION\r\nexport const not = console.not = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: LightCyan; background-color: DarkSlateGray; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// DEBUG\r\nexport const dbg = console.dbg = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: SkyBlue; background-color: MidnightBlue; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// FANCY\r\nexport const fcy = console.fcy = function (msg) {\r\n  console.log('%c%s',\r\n    'color: #33cfff;' +\r\n    'background-color: rgba(51, 207, 255, .1);' +\r\n    'border: 1px solid #33cfff;' +\r\n    'border-radius: 2px; padding: 6px 9px;' +\r\n    'text-shadow: 0 0 2px rgba(255, 255, 255, .8);' +\r\n    '',\r\n    msg);\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default function CustomRadio(props) {\r\n  let iconClasses = [];\r\n  if (props.iconClasses !== undefined) {\r\n    iconClasses.push(...props.iconClasses);\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom_radio_container\">\r\n      <input id={'custom_radio_' + props.idWord}\r\n        className=\"custom_radio\"\r\n        name={props.groupWord + '_radio_group'}\r\n        type=\"radio\"\r\n        defaultChecked={props.defaultChk} />\r\n      <label className=\"custom_radio_lbl icon_small\"\r\n        title={props.titleWord}\r\n        htmlFor={'custom_radio_' + props.idWord} />\r\n      <Icon name={props.iconWord} classes={[...iconClasses]} />\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomRadio.propTypes = {\r\n  idWord: PropTypes.string.isRequired,\r\n  iconWord: PropTypes.string.isRequired,\r\n  groupWord: PropTypes.string.isRequired,\r\n  iconClasses: PropTypes.arrayOf(PropTypes.string),\r\n  titleWord: PropTypes.string.isRequired,\r\n  defaultChk: PropTypes.bool.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'orbit-controls-es6';\r\nimport dragscroll from 'dragscroll';\r\nimport { AMB, createWeatherMap, init, SCENE, SUN, WEATHER_CTX_MAT, RES, LIGHT_ON, LIGHT_OFF } from '../js/threeStuff';\r\nimport CustomRadio from './CustomRadio';\r\nimport CustomChk from './CustomChk';\r\n\r\nlet initDone = false;\r\nexport function setInitDoneTrue() {\r\n  initDone = true;\r\n  initWeatherMapsObj();\r\n}\r\nexport const NEAR = 1, FAR = 5, Z_OFF = 3;\r\nconst VEC = new THREE.Vector3();\r\nconst RAY_CASTER = new THREE.Raycaster();\r\nconst MAPS = [\r\n  { id: 0, label: 'Terreno', ref: [''], icon: 'terrain' },\r\n  { id: 1, label: 'Nubosidad', ref: ['0%', '100%'], icon: 'cloud' },\r\n  { id: 2, label: 'Precipitación', ref: ['0mm', '200mm'], icon: 'precipitation' },\r\n  { id: 3, label: 'Presión', ref: ['950hPa', '1070hPa'], icon: 'tachometer' },\r\n  { id: 4, label: 'Viento', ref: ['0m/s', '200m/s'], icon: 'wind' },\r\n  { id: 5, label: 'Temperatura', ref: ['-40°C', '0°C', '40°C'], icon: 'thermometer' }\r\n];\r\nexport const CITY_LABELS = []; // id, label, dot, line, x, y\r\nconst N_MAPS_TO_LOAD = 1; // 1 to 6\r\nconst DEFAULT_OPTION = 1;\r\nconst SMALL_MEDIA = window.matchMedia('(max-width: 679px)');\r\n\r\nexport let camera;\r\nlet renderer, controls\r\n\r\nfunction initWeatherMapsObj() {\r\n  camera = new THREE.PerspectiveCamera(45, RES / RES, NEAR, FAR);\r\n  camera.layers.enable(DEFAULT_OPTION);\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    alpha: true,\r\n    powerPreference: 'high-performance',\r\n    stencil: false,\r\n  });\r\n  renderer.setSize(RES, RES);\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.gammaFactor = 2.2;\r\n  renderer.gammaOutput = true;\r\n  renderer.domElement.id = 'globe_canvas';\r\n  controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.rotateSpeed = 0.3;\r\n  controls.autoRotate = false;\r\n  controls.autoRotateSpeed = 2.0;\r\n  controls.enablePan = false;\r\n  controls.enableZoom = false;\r\n  controls.enableKeys = false;\r\n  controls.minPolarAngle = Math.PI - Math.PI * .90;\r\n  controls.maxPolarAngle = Math.PI * .90;\r\n}\r\n\r\nexport default class WeatherMaps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option: DEFAULT_OPTION,\r\n      label: MAPS[DEFAULT_OPTION].label,\r\n      ref: MAPS[DEFAULT_OPTION].ref,\r\n      showContent: 'inline-block',\r\n      showGlobe: 'flex',\r\n      showMap: 'none'\r\n    }\r\n    this.setGlobe = this.setGlobe.bind(this);\r\n    this.setMap = this.setMap.bind(this);\r\n    this.setWeatherOption = this.setWeatherOption.bind(this);\r\n    this.animateRaf = 0;\r\n    this.labelsRaf = 0;\r\n\r\n    // Globe stuff\r\n    this.animate = this.animate.bind(this);\r\n    this.setCameraPosition = this.setCameraPosition.bind(this);\r\n    this.toggleLights = this.toggleLights.bind(this);\r\n    this.toggleRotation = this.toggleRotation.bind(this);\r\n    this.resetRedererSize = this.resetRedererSize.bind(this);\r\n    this.resetRendererPixelRatio = this.resetRendererPixelRatio.bind(this);\r\n    this.updateLabels = this.updateLabels.bind(this);\r\n\r\n    // Map stuff\r\n    this.mapCanvas = undefined;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // most be done only one time\r\n    if (!initDone) {\r\n      await init(); // wait for three stuff\r\n      for (let i = 0; i < N_MAPS_TO_LOAD - 1; i++) createWeatherMap(i); // launch weather maps requests\r\n    }\r\n    // every time it mounts...\r\n    document.getElementById('globe_box').appendChild(renderer.domElement); // add renderer canvas to dom\r\n    document.getElementById('weather_maps_body').style.overflowX = 'visible';\r\n    this.mapCanvas = document.getElementById('map_canvas'); // identify map canvas\r\n    this.setCameraPosition(0, 0);\r\n    this.resetRedererSize(); // resize renderer based on media queries\r\n    this.animate(); // init three stuff animation loop\r\n    this.updateLabels(); // init labels updating loop\r\n    window.addEventListener('resize', this.resetRendererPixelRatio, false); // listen for window resize\r\n    for (let i = 0; i < 6; i++)  // listen to each weather map option\r\n      document.getElementById('custom_radio_' + i).addEventListener('change', () => { this.setWeatherOption(i); });\r\n    // listen to 'toggle buttons' (actually checkbox and radio)\r\n    document.getElementById('custom_radio_globe_radio').addEventListener('change', () => { this.setGlobe(); });\r\n    document.getElementById('custom_radio_map_radio').addEventListener('change', () => { this.setMap(); });\r\n    document.getElementById('custom_chk_rotation_chk').addEventListener('change', e => { this.toggleRotation(e); });\r\n    document.getElementById('custom_chk_day_night_day_chk').addEventListener('change', e => { this.toggleLights(e); });\r\n    // listen for scroll on map to resize 'progress marks'\r\n    document.getElementById('weather_maps_body').addEventListener('scroll', e => {\r\n      const W = SMALL_MEDIA.matches ? 512 : 1024;\r\n      const OFFSET = (SMALL_MEDIA.matches ? 7 : 14) + 1; // margin + border\r\n      const SCROLLABLE = ((W + OFFSET * 2) * .5) + OFFSET; // expected 272 or 542\r\n      const SCROLLED = e.target.scrollLeft / SCROLLABLE;\r\n      document.getElementById('mark_left').style.width = (32 * SCROLLED) + 'px';\r\n      document.getElementById('mark_right').style.width = 32 - (32 * SCROLLED) + 'px';\r\n    });\r\n    SMALL_MEDIA.addListener(this.resetRedererSize);\r\n    dragscroll.reset(); // update dragscroll listeners\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // stop all lops\r\n    cancelAnimationFrame(this.animateRaf);\r\n    cancelAnimationFrame(this.labelsRaf);\r\n  }\r\n\r\n  /**\r\n   * Basic\r\n   */\r\n\r\n  setGlobe() {\r\n    document.getElementById('weather_maps_body').style.overflowX = 'visible';\r\n    if (this.state.showGlobe !== 'flex') this.setState({ showMap: 'none', showGlobe: 'flex' });\r\n  }\r\n\r\n  setMap() {\r\n    document.getElementById('weather_maps_body').style.overflowX = 'hidden';\r\n    if (this.state.showMAp !== 'flex') this.setState({ showGlobe: 'none', showMap: 'flex' });\r\n  }\r\n\r\n  setWeatherOption(option) {\r\n    this.setState({\r\n      option: option,\r\n      label: MAPS[option].label,\r\n      ref: MAPS[option].ref\r\n    });\r\n    let i = 1; // layer 0 = globe\r\n    do {\r\n      if (option === MAPS[i].id) camera.layers.enable(i);\r\n      else camera.layers.disable(i);\r\n      i++;\r\n    } while (i < 6);\r\n    if (option === 0) this.mapCanvas.getContext('2d').clearRect(0, 0, RES, RES * .5);\r\n    else this.mapCanvas.getContext('2d').putImageData(\r\n      WEATHER_CTX_MAT[option - 1][0].getImageData(0, 0, RES, RES * .5), 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Globe functionality\r\n   */\r\n\r\n  animate() {\r\n    this.animateRaf = requestAnimationFrame(this.animate);\r\n    controls.update();\r\n    renderer.render(SCENE, camera);\r\n  }\r\n\r\n  setCameraPosition(alpha, theta) {\r\n    let matrix = new THREE.Matrix4();\r\n    matrix.makeRotationFromEuler(new THREE.Euler(alpha, theta, 0, 'YXZ'));\r\n    camera.position.set(0, 0, Z_OFF).applyMatrix4(matrix);\r\n    camera.lookAt(0, 0, 0);\r\n  }\r\n\r\n  resetRendererPixelRatio() {\r\n    const DPR = window.devicePixelRatio || 1;\r\n    if (DPR < 0.5) { renderer.setPixelRatio(0.5); return; }\r\n    if (DPR > 3) { renderer.setPixelRatio(3); return; }\r\n  }\r\n\r\n  toggleLights(e) {\r\n    if (e.target.checked === true) {\r\n      AMB.intensity = LIGHT_ON;\r\n      SUN.intensity = 0.0;\r\n      //scene.fog.color = new THREE.Color(0x686868);\r\n    } else {\r\n      AMB.intensity = LIGHT_OFF;\r\n      SUN.intensity = LIGHT_ON;\r\n      //scene.fog.color = new THREE.Color(0x80bfff);\r\n    }\r\n  }\r\n\r\n  toggleRotation(e) {\r\n    controls.autoRotate = e.target.checked;\r\n  }\r\n\r\n  resetRedererSize() {\r\n    const currentSize = renderer.getSize.x;\r\n    if (SMALL_MEDIA.matches && currentSize !== RES * .5) renderer.setSize(RES * .5, RES * .5);\r\n    else if (!SMALL_MEDIA.matches && currentSize !== RES) renderer.setSize(RES, RES);\r\n  }\r\n\r\n  updateLabels() {\r\n    this.labelsRaf = requestAnimationFrame(this.updateLabels);\r\n    const W = renderer.domElement.clientWidth;\r\n    const H = renderer.domElement.clientHeight;\r\n    // iterate on each label object (THREE & DOM stuff)\r\n    CITY_LABELS.forEach(item => {\r\n      let { label, dot, x, y } = item;\r\n      if (this.state.showGlobe === 'flex') { // Move & show/hide label over the globe canvas\r\n        dot.updateWorldMatrix(true, false);\r\n        dot.getWorldPosition(VEC);\r\n        VEC.project(camera);\r\n        RAY_CASTER.setFromCamera(VEC, camera);\r\n        const VEC_X = (VEC.x * .5 + .5) * W;\r\n        const VEC_Y = (VEC.y * -.5 + .5) * H;\r\n        label.style.transform = 'translate(-50%, -50%) translate(' + Math.round(VEC_X) + 'px, ' + Math.round(VEC_Y) + 'px)';\r\n        if (VEC.z > .8) label.style.display = 'none';\r\n        else label.style.display = '';\r\n      } else { // Print labels on map\r\n        label.style.display = '';\r\n        if (!SMALL_MEDIA.matches) { x *= 2; y *= 2; }\r\n        label.style.transform = 'translate(-50%, -50%) translate(' + Math.round(x) + 'px, ' + Math.round(y) + 'px)';\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article id=\"weather_maps\">\r\n        <div id=\"weather_maps_header\">\r\n          <h3>\r\n            <em>{this.state.label}</em>\r\n          </h3>\r\n          <CustomRadio\r\n            idWord=\"globe_radio\"\r\n            iconWord=\"globe\"\r\n            groupWord=\"weather_maps\"\r\n            titleWord=\"Globo\"\r\n            defaultChk={true}\r\n            key=\"custom_radio_key_globe_radio\" />\r\n          <CustomRadio\r\n            idWord=\"map_radio\"\r\n            iconWord=\"map\"\r\n            groupWord=\"weather_maps\"\r\n            titleWord=\"Mapa\"\r\n            defaultChk={false}\r\n            key=\"custom_radio_key_map_radio\" />\r\n        </div>\r\n        <hr />\r\n        <div id=\"weather_maps_body\" className=\"dragscroll\">\r\n          <div id=\"globe_box\" style={{ display: this.state.showGlobe }} >\r\n            <div id=\"globe_shadow\"><span></span></div>\r\n            {/* renderer canvas here */}\r\n          </div>\r\n          <div id=\"map_box\" style={{ display: this.state.showMap }} >\r\n            <div id=\"map_canvas_container\">\r\n              <canvas id=\"map_canvas\" width={RES} height={RES * .5} />\r\n            </div>\r\n          </div>\r\n          <div id=\"labels\">\r\n            {/* city_labels here */}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div id=\"ref\">\r\n          <div id=\"ref_data\">\r\n            {MAPS[this.state.option].ref.map(item => (\r\n              <p key={'ref_data_' + item}>{item}</p>\r\n            ))}\r\n          </div>\r\n          <hr />\r\n          <div id=\"ref_gradient_bg\"></div>\r\n          <div className={'ref_gradient ref_gradient_' + MAPS[this.state.option].id} >\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div id=\"weather_maps_control\">\r\n          <div id=\"globe_controls\" style={{ display: this.state.showGlobe }} >\r\n            <CustomChk\r\n              idWord=\"rotation_chk\"\r\n              iconWordA=\"rotation_360\"\r\n              titleWord=\"Alternar rotación\"\r\n              defaultChk={false} />\r\n            <CustomChk\r\n              idWord=\"day_night_day_chk\"\r\n              iconWordA=\"day_night\"\r\n              iconWordB=\"day\"\r\n              titleWord=\"Alternar iluminación\"\r\n              defaultChk={false} />\r\n          </div>\r\n          <div id=\"generic_controls\">\r\n            {MAPS.map(option => (\r\n              <CustomRadio\r\n                idWord={option.id}\r\n                iconWord={option.icon}\r\n                groupWord={'map_option'}\r\n                titleWord={option.label}\r\n                defaultChk={option.id === 1 ? true : false}\r\n                key={'custom_radio_key_' + option.id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div id=\"mark_box\" style={{ display: this.state.showMap }} >\r\n          <div id=\"mark_content\">\r\n            <div id=\"mark_left\"></div>\r\n            <div id=\"mark_right\"></div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { suc, dbg } from './customConsole';\r\nimport { Z_OFF, setInitDoneTrue } from '../components/WeatherMaps';\r\n\r\nconst merToEqrWorker = new Worker('mercatorToEquirectangular.js');\r\nconst TEXTURE = new THREE.TextureLoader().load('https://res.cloudinary.com/wikarot/image/upload/v1560488304/globe_src/texture.png');\r\nconst SPECULAR = new THREE.TextureLoader().load('https://res.cloudinary.com/wikarot/image/upload/v1560339154/globe_src/spec.png');\r\nconst BUMP = new THREE.TextureLoader().load('https://res.cloudinary.com/wikarot/image/upload/v1560339155/globe_src/bump.jpg');\r\nTEXTURE.encoding = THREE.sRGBEncoding;\r\nSPECULAR.encoding = THREE.sRGBEncoding;\r\nBUMP.encoding = THREE.sRGBEncoding;\r\nconst URL = {\r\n  base: 'https://tile.openweathermap.org/map/',\r\n  last1: '.png?appid=b280c897878592322aafe56701248929',\r\n  last2: '.png?appid=cdd659df7dc048884575b9451ddf1330'\r\n};\r\nconst MAP = ['clouds_new', 'precipitation_new', 'pressure_new', 'wind_new', 'temp_new'];\r\nconst SPH_SUB_DIV = 64; // sphere sub divisions\r\nexport const SPH_RAD = 0.825; // sphere radius\r\nconst SPH_SCALE = 1.006; // for atmosphere and weather\r\nexport const RES = 512; // weather map resolution\r\nconst T = 2; // tiles by side (total tiles = T * T)\r\nconst T_SIZE = RES / T;\r\nexport const LIGHT_ON = 0.78;\r\nexport const LIGHT_OFF = 0.015;\r\nconst BASE_SPH_GEO = new THREE.SphereBufferGeometry(SPH_RAD, SPH_SUB_DIV, SPH_SUB_DIV);\r\nBASE_SPH_GEO.rotateY(THREE.Math.degToRad(-90)); // horizontal rotation offset correction\r\n\r\nexport const SCENE = new THREE.Scene();\r\nexport const AMB = new THREE.AmbientLight(0xffffff, LIGHT_OFF);\r\nexport const SUN = new THREE.DirectionalLight(0xffffff, LIGHT_ON);\r\nexport const WEATHER_CTX_MAT = [ // context, material\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined]\r\n];\r\n\r\nexport async function init() {\r\n  SCENE.fog = new THREE.Fog(0x74c0ff, Z_OFF - SPH_RAD * 0.82, Z_OFF);\r\n  setSunPosition(SUN);\r\n\r\n  ////////////////////////////////\r\n  // MODELS\r\n  ////////////////////////////////\r\n  const PHYS = new THREE.Mesh(); // physic earth globe\r\n  PHYS.geometry = BASE_SPH_GEO;\r\n  PHYS.material = new THREE.MeshPhongMaterial({\r\n    map: TEXTURE,\r\n    specularMap: SPECULAR,\r\n    specular: new THREE.Color(0x1a1a1a),\r\n    shininess: 55.0,\r\n    bumpMap: BUMP,\r\n    bumpScale: 0.008,\r\n  });\r\n  PHYS.matrixAutoUpdate = false;\r\n  //\r\n  for (let i = 0; i < 5; i++) {\r\n    WEATHER_CTX_MAT[i][0] = document.getElementById('weather_map_' + i).getContext('2d');\r\n    WEATHER_CTX_MAT[i][1] = new THREE.MeshPhongMaterial();\r\n    const AUX = new THREE.CanvasTexture(WEATHER_CTX_MAT[i][0].canvas);\r\n    AUX.encoding = THREE.sRGBEncoding;\r\n    WEATHER_CTX_MAT[i][1].map = AUX;\r\n    WEATHER_CTX_MAT[i][1].shininess = 0.0;\r\n    WEATHER_CTX_MAT[i][1].transparent = true;\r\n    const WEATHER = new THREE.Mesh(BASE_SPH_GEO, WEATHER_CTX_MAT[i][1]);\r\n    WEATHER.layers.set(i + 1);\r\n    WEATHER.scale.multiplyScalar(SPH_SCALE);\r\n    WEATHER.matrixAutoUpdate = false;\r\n    AMB.layers.enable(i + 1);\r\n    SUN.layers.enable(i + 1);\r\n    SCENE.add(WEATHER);\r\n  }\r\n  //\r\n  const ATMO = new THREE.Mesh(); // atmosphere\r\n  ATMO.geometry = BASE_SPH_GEO;\r\n  ATMO.material = new THREE.MeshPhongMaterial({\r\n    color: 0xffffff,\r\n    side: THREE.DoubleSide,\r\n    transparent: true,\r\n    opacity: 0.05,\r\n    shininess: 0.0,\r\n  });\r\n  ATMO.scale.multiplyScalar(SPH_SCALE * .9);\r\n  ATMO.matrixAutoUpdate = false;\r\n\r\n  ////////////////////////////////\r\n  // ALL TOGHETHER\r\n  ////////////////////////////////\r\n  SCENE.add(PHYS, ATMO, AMB, SUN);\r\n\r\n  setInterval(updateSunPosition, 180000); // 3m\r\n  setInitDoneTrue();\r\n}\r\n\r\nfunction updateSunPosition() {\r\n  setSunPosition(SUN);\r\n}\r\n\r\nfunction setSunPosition(sun) {\r\n  const HH = new Date().getUTCHours();\r\n  const MM = new Date().getUTCMonth();\r\n  const MATRIX = new THREE.Matrix4();\r\n  let rotY = 0;\r\n  let rotX = 0;\r\n  // X axis 'inclination' (for months)\r\n  if (MM <= 6) rotX = -(8 * MM) + 24; // y = -8x+24\r\n  else rotX = 8 * MM - 72; // y = 8x-72\r\n  // Y axis rotation (for hours)\r\n  rotY = 180 - (HH / 24) * 360;\r\n  MATRIX.makeRotationFromEuler(new THREE.Euler(\r\n    THREE.Math.degToRad(rotX),\r\n    THREE.Math.degToRad(rotY),\r\n    0, 'YXZ'));\r\n  sun.position.set(0, 0, Z_OFF * 10); // reset the position with just a Z axis displacement\r\n  sun.position.applyMatrix4(MATRIX); // Rotation\r\n  sun.lookAt(0, 0, 0);\r\n}\r\n\r\n/**\r\n * Launch the process of downloading mercator projection (tiles)\r\n * and convert them into a single equirectangular projection (map)\r\n * @param {Number} i Weather map option (index)\r\n */\r\nexport function createWeatherMap(i) {\r\n  const MERCATOR_CANVAS = document.createElement('canvas');\r\n  // 512x512\r\n  MERCATOR_CANVAS.width = RES;\r\n  MERCATOR_CANVAS.height = RES;\r\n  const MERCATOR_CTX = MERCATOR_CANVAS.getContext('2d');\r\n  let cont = 0;\r\n  // merc. proj. images (2x2) to generate a single eqr. proj.\r\n  let X00 = new Image(T_SIZE, T_SIZE);\r\n  let X10 = new Image(T_SIZE, T_SIZE);\r\n  let X01 = new Image(T_SIZE, T_SIZE);\r\n  let X11 = new Image(T_SIZE, T_SIZE);\r\n  X00.crossOrigin = 'Anonymous';\r\n  X10.crossOrigin = 'Anonymous';\r\n  X01.crossOrigin = 'Anonymous';\r\n  X11.crossOrigin = 'Anonymous';\r\n  X00.src = URL.base + MAP[i] + '/1/0/0' + URL.last1;\r\n  X10.src = URL.base + MAP[i] + '/1/1/0' + URL.last1;\r\n  X01.src = URL.base + MAP[i] + '/1/0/1' + URL.last2;\r\n  X11.src = URL.base + MAP[i] + '/1/1/1' + URL.last2;\r\n  X00.onload = async () => await drawMapTiles(X00, T_SIZE * 0, T_SIZE * 0);\r\n  X10.onload = async () => await drawMapTiles(X10, T_SIZE * 1, T_SIZE * 0);\r\n  X01.onload = async () => await drawMapTiles(X01, T_SIZE * 0, T_SIZE * 1);\r\n  X11.onload = async () => await drawMapTiles(X11, T_SIZE * 1, T_SIZE * 1);\r\n  async function drawMapTiles(img, x, y) {\r\n    MERCATOR_CTX.drawImage(img, x, y);\r\n    const T_DATA = MERCATOR_CTX.getImageData(x, y, T_SIZE, T_SIZE);\r\n    const L = T_DATA.data.length;\r\n    // Alpha and color adjust\r\n    if (i === 0) { // Clouds\r\n      for (let i = 0; i < L; i += 4) {\r\n        let A = T_DATA.data[i + 3];\r\n        A = (A - (255 * 0.6)) / 0.4; // range displacement and scale\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] = A * 1.8;\r\n      }\r\n    } else if (i === 1) { // Precipitation\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    } else if (i === 2) { // Pressure\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 3) { // Wind\r\n      for (let i = 0; i < L; i += 4) {\r\n        const R = T_DATA.data[i + 0];\r\n        const G = T_DATA.data[i + 1];\r\n        //const B = TILE.data[i + 2];\r\n        T_DATA.data[i + 0] = 255 - G * 0.75; // R\r\n        T_DATA.data[i + 1] = 255 - R * 0.75; // G\r\n        T_DATA.data[i + 2] = 255 - 255; // B\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 4) { // Temp\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    }\r\n    MERCATOR_CTX.putImageData(T_DATA, x, y);\r\n    cont++;\r\n    if (cont === T * T) { // When all tiles are done: convert Mer. to Eqr.\r\n      for (let y = 0; y < RES; y++) { // Take each line to get his new position\r\n        const LINE = MERCATOR_CTX.getImageData(0, y, RES, 1);\r\n        merToEqrWorker.postMessage([LINE, y, RES, RES / 2, i]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* function createWeatherMap16x16(i) {\r\n  // const RES nedds to be 1024\r\n  let canvasMer = document.createElement('canvas');\r\n  // 1024x1024\r\n  canvasMer.width = RES;\r\n  canvasMer.height = RES;\r\n  let ctxMer = canvasMer.getContext('2d');\r\n  let cont = 0;\r\n  // The Block Of Code\r\n  let X0000 = new Image(T_SIZE, T_SIZE); X0000.crossOrigin = 'Anonymous'; X0000.src = URL.base + MAP[i] + '/2/0/0' + URL.last1; X0000.onload = async () => { await drawMapTiles(X0000, T_SIZE * 0, T_SIZE * 0); };\r\n  let X0001 = new Image(T_SIZE, T_SIZE); X0001.crossOrigin = 'Anonymous'; X0001.src = URL.base + MAP[i] + '/2/1/0' + URL.last1; X0001.onload = async () => { await drawMapTiles(X0001, T_SIZE * 1, T_SIZE * 0); };\r\n  let X0010 = new Image(T_SIZE, T_SIZE); X0010.crossOrigin = 'Anonymous'; X0010.src = URL.base + MAP[i] + '/2/2/0' + URL.last1; X0010.onload = async () => { await drawMapTiles(X0010, T_SIZE * 2, T_SIZE * 0); };\r\n  let X0011 = new Image(T_SIZE, T_SIZE); X0011.crossOrigin = 'Anonymous'; X0011.src = URL.base + MAP[i] + '/2/3/0' + URL.last1; X0011.onload = async () => { await drawMapTiles(X0011, T_SIZE * 3, T_SIZE * 0); };\r\n  let X0100 = new Image(T_SIZE, T_SIZE); X0100.crossOrigin = 'Anonymous'; X0100.src = URL.base + MAP[i] + '/2/0/1' + URL.last1; X0100.onload = async () => { await drawMapTiles(X0100, T_SIZE * 0, T_SIZE * 1); };\r\n  let X0101 = new Image(T_SIZE, T_SIZE); X0101.crossOrigin = 'Anonymous'; X0101.src = URL.base + MAP[i] + '/2/1/1' + URL.last1; X0101.onload = async () => { await drawMapTiles(X0101, T_SIZE * 1, T_SIZE * 1); };\r\n  let X0110 = new Image(T_SIZE, T_SIZE); X0110.crossOrigin = 'Anonymous'; X0110.src = URL.base + MAP[i] + '/2/2/1' + URL.last1; X0110.onload = async () => { await drawMapTiles(X0110, T_SIZE * 2, T_SIZE * 1); };\r\n  let X0111 = new Image(T_SIZE, T_SIZE); X0111.crossOrigin = 'Anonymous'; X0111.src = URL.base + MAP[i] + '/2/3/1' + URL.last1; X0111.onload = async () => { await drawMapTiles(X0111, T_SIZE * 3, T_SIZE * 1); };\r\n  let X1000 = new Image(T_SIZE, T_SIZE); X1000.crossOrigin = 'Anonymous'; X1000.src = URL.base + MAP[i] + '/2/0/2' + URL.last2; X1000.onload = async () => { await drawMapTiles(X1000, T_SIZE * 0, T_SIZE * 2); };\r\n  let X1001 = new Image(T_SIZE, T_SIZE); X1001.crossOrigin = 'Anonymous'; X1001.src = URL.base + MAP[i] + '/2/1/2' + URL.last2; X1001.onload = async () => { await drawMapTiles(X1001, T_SIZE * 1, T_SIZE * 2); };\r\n  let X1010 = new Image(T_SIZE, T_SIZE); X1010.crossOrigin = 'Anonymous'; X1010.src = URL.base + MAP[i] + '/2/2/2' + URL.last2; X1010.onload = async () => { await drawMapTiles(X1010, T_SIZE * 2, T_SIZE * 2); };\r\n  let X1011 = new Image(T_SIZE, T_SIZE); X1011.crossOrigin = 'Anonymous'; X1011.src = URL.base + MAP[i] + '/2/3/2' + URL.last2; X1011.onload = async () => { await drawMapTiles(X1011, T_SIZE * 3, T_SIZE * 2); };\r\n  let X1100 = new Image(T_SIZE, T_SIZE); X1100.crossOrigin = 'Anonymous'; X1100.src = URL.base + MAP[i] + '/2/0/3' + URL.last2; X1100.onload = async () => { await drawMapTiles(X1100, T_SIZE * 0, T_SIZE * 3); };\r\n  let X1101 = new Image(T_SIZE, T_SIZE); X1101.crossOrigin = 'Anonymous'; X1101.src = URL.base + MAP[i] + '/2/1/3' + URL.last2; X1101.onload = async () => { await drawMapTiles(X1101, T_SIZE * 1, T_SIZE * 3); };\r\n  let X1110 = new Image(T_SIZE, T_SIZE); X1110.crossOrigin = 'Anonymous'; X1110.src = URL.base + MAP[i] + '/2/2/3' + URL.last2; X1110.onload = async () => { await drawMapTiles(X1110, T_SIZE * 2, T_SIZE * 3); };\r\n  let X1111 = new Image(T_SIZE, T_SIZE); X1111.crossOrigin = 'Anonymous'; X1111.src = URL.base + MAP[i] + '/2/3/3' + URL.last2; X1111.onload = async () => { await drawMapTiles(X1111, T_SIZE * 3, T_SIZE * 3); };\r\n  async function drawMapTiles(img, x, y) {\r\n    ctxMer.drawImage(img, x, y);\r\n    cont++;\r\n    const T_DATA = ctxMer.getImageData(x, y, T_SIZE, T_SIZE);\r\n    const L = T_DATA.data.length;\r\n    // Alpha and color adjust\r\n    if (i === 0) { // Clouds\r\n      for (let i = 0; i < L; i += 4) {\r\n        let A = T_DATA.data[i + 3];\r\n        A = (A - (255 * 0.6)) / 0.4; // range displacement and scale\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] = A * 1.8;\r\n      }\r\n    } else if (i === 1) { // Precipitation\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    } else if (i === 2) { // Pressure\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 3) { // Wind\r\n      for (let i = 0; i < L; i += 4) {\r\n        const R = T_DATA.data[i + 0];\r\n        const G = T_DATA.data[i + 1];\r\n        //const B = TILE.data[i + 2];\r\n        T_DATA.data[i + 0] = 255 - G * 0.75; // R\r\n        T_DATA.data[i + 1] = 255 - R * 0.75; // G\r\n        T_DATA.data[i + 2] = 255 - 255; // B\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 4) { // Temp\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    }\r\n    ctxMer.putImageData(T_DATA, x, y);\r\n    if (cont === 16) { // When all tiles are done: convert Mer. to Eqr.\r\n      for (let y = 0; y < RES; y++) { // Take each line to get his new position (Y axis)\r\n        const LINE = ctxMer.getImageData(0, y, RES, 1);\r\n        merToEqrWorker.postMessage([LINE, y, RES, RES / 2, i]);\r\n      }\r\n    }\r\n  }\r\n} */\r\n\r\nlet messageCount = 0;\r\nmerToEqrWorker.onmessage = (e) => {\r\n  const I = e.data[0];\r\n  e.data[1].forEach(async merY => {\r\n    await WEATHER_CTX_MAT[I][0].putImageData(merY.content, 0, merY.newY);\r\n  });\r\n  /* for (let i = 0; i < 512; i++) {\r\n    weatherPack[I][0].putImageData(e.data[1][i].content, 0, e.data[1][i].newY);\r\n  } */\r\n  dbg('Mapa equirectangular \"' + MAP[I] + '\": Creado...');\r\n  WEATHER_CTX_MAT[I][1].map.needsUpdate = true;\r\n  // Put data on map master canvas (from first/default map)\r\n  if (I === 0)\r\n    document.getElementById('map_canvas')\r\n      .getContext('2d')\r\n      .putImageData(WEATHER_CTX_MAT[0][0].getImageData(0, 0, RES, RES * .5), 0, 0);\r\n  messageCount++;\r\n  if (messageCount === 5) suc('Mapas equirectangulares: Finalizados (5 de 5)');\r\n}\r\n\r\n/*\r\n\r\nLAYERS | NAME\r\n---\r\n0 phisic globe\r\n1 clouds\r\n2 pressipitation\r\n3 pressure\r\n4 wind\r\n5 temperature\r\n\r\n*/\r\n","let intervalHandler = 0;\r\nlet target = 0;\r\nlet currentScroll = 0;\r\nlet step = 0;\r\nlet cont = 0;\r\n\r\n/**\r\n * Init Smooth Scroll\r\n */\r\nexport function initSS(newTarget) {\r\n  clearInterval(intervalHandler);\r\n  cont = 0;\r\n  target = newTarget;\r\n  currentScroll = document.documentElement.scrollTop;\r\n  step = (currentScroll - target) / 60;\r\n  intervalHandler = setInterval(runSS, 0);\r\n}\r\n\r\n/**\r\n * Cancel Smooth Scroll\r\n */\r\nexport function cancelSS() {\r\n  clearInterval(intervalHandler);\r\n}\r\n\r\nfunction runSS() {\r\n  let diff = step * cont;\r\n  window.scrollTo(0, currentScroll - diff);\r\n  if (cont === 60) clearInterval(intervalHandler);\r\n  cont++;\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\nimport * as THREE from 'three';\r\nimport { SCENE, SPH_RAD, RES } from '../js/threeStuff';\r\nimport { CITY_LABELS } from './WeatherMaps';\r\nimport { initSS } from '../js/smoothScroll';\r\nimport { not } from '../js/customConsole';\r\n\r\nconst TIME_TO_UPDATE = 20 * 60000; // ms\r\nconst H = RES / 2;\r\nconst DOT_GEO = new THREE.SphereBufferGeometry(0.001, 3, 2);\r\nconst DOT_MAT = new THREE.MeshBasicMaterial({ transparent: true, opacity: 0, precision: \"lowp\" });\r\nconst LINE_MAT = new THREE.LineBasicMaterial({ fog: false, color: '#b4b4b4' });\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: '',\r\n      timeTimer: undefined,\r\n      updateTimer: undefined,\r\n    };\r\n    this.id = this.props.data.id; // city id\r\n    this.iconId = this.props.data.icon; // icon code\r\n    this.weatherId = this.props.data.weatherId; // weather code (more speciffic than icon code)\r\n    /* if (\r\n      (this.props.data.weatherId > 701 &&\r\n        this.props.data.weatherId < 741) ||\r\n      (this.props.data.weatherId > 741 &&\r\n        this.props.data.weatherId < 781)\r\n    ) {\r\n      this.iconId = '50'; // neither sun nor moon\r\n    } else */\r\n    if (this.props.data.weatherId === 781) this.iconId = '50tornado'; //tornado\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.createTag = this.createTag.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTime();\r\n    this.createTag();\r\n    this.setState({\r\n      timeTimer: setInterval(() => {\r\n        this.getTime()\r\n      }, 60000),\r\n      /* updateTimer: setInterval(() => {\r\n        not(this.props.fullName + ': Actualización automática...');\r\n        this.update();\r\n      }, TIME_TO_UPDATE) */\r\n    });\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let dot, line;\r\n    CITY_LABELS.forEach(item => {\r\n      if (item.id === this.id) { dot = item.dot; line = item.line; }\r\n    });\r\n    SCENE.remove(dot, line); // remove it from the scene\r\n    CITY_LABELS.filter(item => item.id !== this.id); // remove it from the \"list\"\r\n    document.getElementById('city_label_' + this.id).remove(); // remove it from the DOM\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  getTime() {\r\n    const OFFSET = ((this.props.data.timezone / 60) / 60); // timezone = seconds --> OFFSET hours\r\n    const OFFSET_F = Math.floor(OFFSET); // Integer from OFFSET (the offset can be XX hours AND 30 minutes in some cases)\r\n    let mm_off = 0;\r\n    if (OFFSET_F !== OFFSET) mm_off = Math.floor((OFFSET - OFFSET_F) * 60);\r\n    let hh = new Date().getUTCHours() + OFFSET_F;\r\n    let mm = new Date().getUTCMinutes() + mm_off;\r\n    if (mm > 59) { hh++; mm -= 60; }\r\n    if (hh > 23) hh -= 24;\r\n    if (hh < 0) hh = 24 + hh;\r\n    if (hh < 10 && hh >= 0) hh = '0' + hh;\r\n    if (mm < 10) mm = '0' + mm;\r\n    this.setState({ time: (hh + ':' + mm) });\r\n  }\r\n\r\n  createTag() {\r\n    let lbl = document.createElement('div');\r\n    lbl.textContent = this.props.data.cityName;\r\n    lbl.className = 'city_label';\r\n    lbl.id = 'city_label_' + this.id;\r\n    document.getElementById('labels').appendChild(lbl);\r\n    lbl.onclick = () => {\r\n      const offsetTop = document.getElementById('card_' + this.id).offsetTop;\r\n      initSS(100 + offsetTop - 16); // 100 header and 16 card margin\r\n    };\r\n\r\n    // Rotation matrix\r\n    const MTX = new THREE.Matrix4();\r\n    const { lat, lon } = this.props.data.coord;\r\n    MTX.makeRotationFromEuler(new THREE.Euler(\r\n      THREE.Math.degToRad(-lat), // X axe, horizontal rotation\r\n      THREE.Math.degToRad(+lon), // Y axe, Vectical rotation\r\n      0, 'YXZ'));\r\n    // Invisible dot to hold the label position\r\n    const DOT = new THREE.Mesh(DOT_GEO, DOT_MAT);\r\n    DOT.name = this.id;\r\n    DOT.position.set(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX);\r\n    const LINE_GEO = new THREE.Geometry();\r\n    LINE_GEO.vertices.push(\r\n      new THREE.Vector3(0, 0, 0),\r\n      new THREE.Vector3(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX));\r\n    const LINE = new THREE.Line(LINE_GEO, LINE_MAT);\r\n\r\n    // Add line and dot to global scene\r\n    SCENE.add(DOT, LINE);\r\n    // Coordinates to print the label on \"flat\" map\r\n    const X = (180 + lon) / 360 * RES;\r\n    const Y = -(lat * (H / 180)) + H * 0.5;\r\n    // Add a city name label to labels public container\r\n    CITY_LABELS.push({ id: this.id, label: lbl, dot: DOT, line: LINE, x: X, y: Y });\r\n  }\r\n\r\n  update() {\r\n    this.props.update(this.id, this.props.fullName);\r\n  }\r\n\r\n  remove() {\r\n    this.props.remove(this.id, this.props.fullName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id={'card_' + this.id}\r\n        className=\"card\"\r\n        rotated={this.state.rotated} >\r\n        <div className=\"card_header\"\r\n          title={\r\n            this.props.fullName + ' (' +\r\n            this.props.extras.countryNameNative + ')'}>\r\n          <h2 className=\"name\"><em>{this.props.fullName}</em></h2>\r\n          <div className=\"icon_small\">\r\n            <span>\r\n              <img\r\n                src={'https://www.countryflags.io/' + this.props.data.countryCode + '/shiny/16.png'}\r\n                alt={'Bandera de ' + this.props.extras.countryName}\r\n                title={'Bandera de ' + this.props.extras.countryName} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"temp\">\r\n          <p className=\"temp_current\">{this.props.data.temp}°</p>\r\n          <p className=\"temp_max\"><span>Máx</span>{this.props.data.tempMax}°</p>\r\n          <p className=\"temp_min\"><span>Mín</span>{this.props.data.tempMin}°</p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"desc\">\r\n          <p className=\"desc\">{this.props.data.desc}</p>\r\n          <Icon name={this.iconId} classes={['perma_active']} />\r\n        </div>\r\n        <hr />\r\n        <div className=\"card_control\">\r\n          <button className=\"loading_box\" onClick={this.update} title=\"Actualizar\">\r\n            <Icon name=\"refresh\" classes={['btn']} />\r\n            <Icon name=\"loading_loop\" />\r\n          </button>\r\n          <span className=\"time\">\r\n            {this.state.time}\r\n          </span>\r\n          <button onClick={this.remove} title=\"Cerrar\" >\r\n            <Icon name=\"close\" classes={['btn']} />\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  fullName: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    //cloud: PropTypes.number.isRequired, // unused\r\n    coord: PropTypes.shape({\r\n      lat: PropTypes.number.isRequired,\r\n      lon: PropTypes.number.isRequired\r\n    }).isRequired,\r\n    countryCode: PropTypes.string.isRequired,\r\n    weatherId: PropTypes.number.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n    //hum: PropTypes.number.isRequired, // unused\r\n    icon: PropTypes.string.isRequired,\r\n    cityName: PropTypes.string.isRequired,\r\n    temp: PropTypes.number.isRequired,\r\n    tempMax: PropTypes.number.isRequired,\r\n    tempMin: PropTypes.number.isRequired,\r\n    timezone: PropTypes.string.isRequired,\r\n    //wind: PropTypes.number.isRequired // m/s to km/h // unused\r\n  }).isRequired,\r\n  extras: PropTypes.shape({\r\n    countryName: PropTypes.string.isRequired,\r\n    countryNameNative: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Prediction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.predictionClicked = this.predictionClicked.bind(this);\r\n  }\r\n\r\n  predictionClicked() {\r\n    this.props.clickHandler(this.props.data.id);\r\n  }\r\n\r\n  render() {\r\n    const { start, match, finish, country, id } = this.props.data;\r\n    return (\r\n      <div className=\"prediction\" onClick={this.predictionClicked}>\r\n        <span>\r\n          <p><strong>{start}</strong>{match}<strong>{finish}</strong><em> ({country})</em></p>\r\n        </span>\r\n        <input type=\"hidden\"\r\n          value={id}\r\n          style={{ display: 'none' }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPrediction.propTypes = {\r\n  data: PropTypes.shape({\r\n    start: PropTypes.string.isRequired,\r\n    match: PropTypes.string.isRequired,\r\n    finish: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  clickHandler: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.iconWord = 'not_' + this.props.data.type;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitAndRemove();\r\n  }\r\n\r\n  waitAndRemove() {\r\n    setTimeout(() => {\r\n      this.props.remove(this.props.data.id);\r\n    }, 4000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'notification ' + this.props.data.type}>\r\n        <Icon name={this.iconWord} />\r\n        <p>{this.props.data.msg}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  data: PropTypes.shape({\r\n    msg: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport Icon from './Icon';\r\nimport { initSS } from '../js/smoothScroll';\r\n\r\nexport default function ToTopBtn() {\r\n  return (\r\n    <button id=\"to_top_btn\" onClick={() => initSS(0)} title=\"Volver arriba\">\r\n      <Icon name=\"top_arrow\" classes={['btn']} />\r\n    </button>\r\n  )\r\n}\r\n","import CITY_LIST from '../apis/city.list.min.json';\r\nimport ALL_LIST from '../apis/all.json';\r\n\r\nconst API = 'https://api.openweathermap.org/data/2.5/weather?';\r\nconst API_CITY_NAME_PREFIX = 'q=';\r\nconst API_CITY_ID_PREFIX = 'id=';\r\nconst API_OPTIONS = '&appid=b280c897878592322aafe56701248929&units=metric&lang=es';\r\n\r\nexport async function getPredictions(inputName) {\r\n  return await (() => {\r\n    let city = undefined;\r\n    let newList = [];\r\n    // Create prediction list (minimum of 3 characters typed)\r\n    if (inputName.length > 2) {\r\n      inputName = inputName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n      const TEST = new RegExp(' ' + inputName, 'i');\r\n      const RE_A = new RegExp('(.*)' + inputName, 'i');\r\n      const RE_B = new RegExp(inputName, 'i');\r\n      const RE_C = new RegExp(inputName + '(.*)', 'i');\r\n      // Search on city list (local API) & Maximum of 6 predictions\r\n      for (let i = 0; (i < 209579) && (newList.length < 6); i++) {\r\n        city = CITY_LIST[i];\r\n        if (TEST.test(' ' + city.name)) {\r\n          if (inputName.length === city.name.length) // 100% match at the top\r\n            newList.unshift({\r\n              start: RE_A.exec(city.name)[1],\r\n              match: RE_B.exec(city.name)[0],\r\n              finish: RE_C.exec(city.name)[1],\r\n              country: city.country, id: city.id\r\n            });\r\n          else // partial match\r\n            newList.push({\r\n              start: RE_A.exec(city.name)[1],\r\n              match: RE_B.exec(city.name)[0],\r\n              finish: RE_C.exec(city.name)[1],\r\n              country: city.country, id: city.id\r\n            });\r\n        }\r\n      }\r\n      return newList;\r\n    } // else\r\n    return [];\r\n  })();\r\n}\r\n\r\nexport async function getExtras(countryCode) {\r\n  for (let i = 0; i < 250; i++) {\r\n    if (ALL_LIST[i].alpha2Code === countryCode) {\r\n      const ITEM = ALL_LIST[i];\r\n      return {\r\n        countryName: ITEM.translations.es,\r\n        countryNameNative: ITEM.nativeName\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getUserLocation() {\r\n  const RES = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=15d8e57eb4aa4015bb32a04d73b67b19');\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return `${RES_JSON.city}, ${RES_JSON.country_code2}`;\r\n  }\r\n}\r\n\r\nexport async function getWeather(inputName, option) {\r\n  let PREFIX = '';\r\n  if (option === 'name') PREFIX = API_CITY_NAME_PREFIX;\r\n  else if (option === 'id') PREFIX = API_CITY_ID_PREFIX;\r\n  const RES = await fetch(API + PREFIX + inputName + API_OPTIONS);\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return {\r\n      id: RES_JSON.id,\r\n      //cloud: RES_JSON.clouds.all,\r\n      coord: { lat: RES_JSON.coord.lat, lon: RES_JSON.coord.lon },\r\n      countryCode: RES_JSON.sys.country,\r\n      weatherId: RES_JSON.weather[0].id,\r\n      desc: RES_JSON.weather[0].description,\r\n      //hum: RES_JSON.main.humidity,\r\n      icon: RES_JSON.weather[0].icon,\r\n      cityName: RES_JSON.name,\r\n      temp: Math.round(RES_JSON.main.temp),\r\n      tempMax: Math.round(RES_JSON.main.temp_max),\r\n      tempMin: Math.round(RES_JSON.main.temp_min),\r\n      timezone: RES_JSON.timezone,\r\n      //wind: Math.round(RES_JSON.wind.speed * 3.6) // m/s to km/h\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\nkey: '&appid=b280c897878592322aafe56701248929',\r\nunits: '&units=metric',\r\nlang: '&lang=es'\r\n */\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Card from './components/Card';\r\nimport WeatherMaps from './components/WeatherMaps';\r\nimport Icon from './components/Icon';\r\nimport Prediction from './components/Prediction';\r\nimport Notification from './components/Notification';\r\nimport ToTopBtn from './components/ToTopBtn';\r\n//import About from './components/About';\r\nimport { getPredictions, getUserLocation, getExtras, getWeather } from './js/getFromAPIs';\r\nimport { initSS, cancelSS } from './js/smoothScroll';\r\nimport { suc, alt, err, dbg } from './js/customConsole';\r\n\r\n/* const PRELOAD_CITIES = [\r\n  'Cairo,EG',             // africa\r\n  'Kingston,JM',          // america c\r\n  'Alaska,US',            // america n\r\n  'Amazonas,BR',          // america s\r\n  'McMurdo Station,AQ',   // antartida\r\n  'Tokyo,JP',             // asia\r\n  'Berlin,DE',            // europa\r\n  'Sydney,AU',            // oceania\r\n  'Cape Town,ZA',         // -africa\r\n  'Panama,PA',            // -america c\r\n  'Ottawa,CA',            // -america n\r\n  'Montevideo,UY',        // -america s\r\n  'Busan,KR',             // -asia\r\n  'Moscow,RU',            // -europa\r\n  'Wellington,NZ',        //- oceania\r\n]; */\r\n\r\nconst LoadingMsg = () => ('');\r\n\r\nconst About = (lazy(() => (import(/* webpackChunkName: \"About\" */ './components/About'))));\r\n\r\nexport default class ThisWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      cardList: [],\r\n      predictionList: [],\r\n      notificationList: [],\r\n    };\r\n    this.inputBox = undefined;\r\n    this.predictionListBox = undefined;\r\n    this.toTopBtn = undefined;\r\n    this.currentFocus = -1;\r\n    this.inputKeyDown = this.inputKeyDown.bind(this);\r\n    this.inputChanged = this.inputChanged.bind(this);\r\n    this.fireSearch = this.fireSearch.bind(this);\r\n    this.stopSearchingLoop = this.stopSearchingLoop.bind(this);\r\n    this.addCard = this.addCard.bind(this);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.removeCard = this.removeCard.bind(this);\r\n    this.removeNotification = this.removeNotification.bind(this);\r\n    this.fireSearchFromPrediction = this.fireSearchFromPrediction.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    getUserLocation().then(res => {\r\n      if (res > 200)\r\n        err('Error al localizar el dispositivo (error ' + res + ')');\r\n      else {\r\n        dbg(`Dispositivo localizado...`);\r\n        this.addCard(res, 'name');\r\n      }\r\n    });\r\n    this.focusID('input_query');\r\n    this.inputBox = document.getElementById('input_query');\r\n    this.predictionListBox = document.getElementById('prediction_box');\r\n    this.toTopBtn = document.getElementById('to_top_btn');\r\n    document.addEventListener('click', e => {\r\n      if ((e.target !== this.inputBox) && (this.state.predictionList.length > 0))\r\n        this.resetPredictionList(e.target);\r\n    });\r\n    window.addEventListener('scroll', () => {\r\n      if (document.documentElement.scrollTop > 100) this.toTopBtn.style.transform = 'scale(1)';\r\n      else this.toTopBtn.style.transform = '';\r\n    });\r\n    window.addEventListener('wheel', () => cancelSS());\r\n  }\r\n\r\n  /**\r\n   * App functionality & utils\r\n   */\r\n\r\n  async inputKeyDown(e) {\r\n    // Current predictions displayed\r\n    let predListDOM = this.predictionListBox.getElementsByClassName('prediction');\r\n    if (e.keyCode === 40) { // key down\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction\r\n        this.currentFocus++;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 38) { // key up\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction        \r\n        this.currentFocus--;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 27) { // escape\r\n      // Clean the input\r\n      this.setState({ input: '', predictionList: [] });\r\n    } else if (e.keyCode === 13) { // enter\r\n      e.preventDefault();\r\n      this.resetPredictionList(e.target); // hide predlist while searching\r\n      if ((this.state.predictionList.length > 0) &&\r\n        (document.querySelector('.active_prediction') !== null)) {\r\n        // if there are predictions AND there is an active one, search that\r\n        const VAL = document.querySelector('.active_prediction input').value;\r\n        this.fireSearchFromPrediction(VAL);\r\n      } else {\r\n        // else, try to search based on input value\r\n        this.setState({ input: e.target.value });\r\n        this.fireSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  async inputChanged(e) {\r\n    this.resetPredictionList();\r\n    this.setState({\r\n      input: e.target.value,\r\n      predictionList: [],\r\n    });\r\n    const PREDS = await getPredictions(e.target.value);\r\n    this.setState({ predictionList: PREDS });\r\n  }\r\n\r\n  fireSearch(inputName, option) {\r\n    if (!this.isOnLine()) return; // if it's online, continue\r\n    if (inputName) // if there is an specific input (parameter)\r\n      this.addCard(inputName, option);\r\n    else if (this.state.input.length > 0) // else, if there is text in the input box\r\n      this.addCard(this.state.input, 'name');\r\n    this.focusID('input_query'); // if not, return focus to the input box\r\n  }\r\n\r\n  isOnLine() {\r\n    if (window.navigator.onLine) return true;\r\n    const MSG = 'Equipo offline';\r\n    this.addNotification(MSG, 'error');\r\n    err(MSG);\r\n    return false;\r\n  }\r\n\r\n  focusID(id) {\r\n    document.getElementById(id).focus();\r\n  }\r\n\r\n  stopSearchingLoop() {\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  stopUpdatingLoop(id) {\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.remove('loading');\r\n  }\r\n\r\n  /**\r\n   * Weather Card functionality\r\n   */\r\n\r\n  async addCard(inputName, option) {\r\n    document.getElementById('search_btn').classList.add('loading');\r\n    dbg(inputName + ': Consultando API...');\r\n    const DATA = await getWeather(inputName, option).catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = 'No se encontraron resulados';\r\n      this.addNotification(MSG, 'alert');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n    const FULL_NAME = DATA.cityName + ', ' + DATA.countryCode; // Complete name used for the card title\r\n\r\n    // Check if it already exists\r\n    if (this.state.cardList.length > 0) {\r\n      let exist = false;\r\n      this.state.cardList.forEach(card => {\r\n        // id correspondant to 'weather station id',\r\n        // city and country name can be the same\r\n        if (DATA.id === card.data.id) return exist = true;\r\n      });\r\n      if (exist) {\r\n        const MSG = 'Resultado ya incluido';\r\n        this.addNotification(MSG, 'info');\r\n        alt(FULL_NAME + ': ' + MSG);\r\n        this.stopSearchingLoop();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add the card\r\n    const EXTRAS = await getExtras(DATA.countryCode); // get extra data\r\n    this.setState({\r\n      cardList: [...this.state.cardList, { fullName: FULL_NAME, data: DATA, extras: EXTRAS }],\r\n      input: '', // Clean input box\r\n      predictionList: [] // Clean predictions\r\n    });\r\n    this.stopSearchingLoop();\r\n    dbg(inputName + ' --> ' + FULL_NAME + '...');\r\n    suc(FULL_NAME + ': Agregado');\r\n  }\r\n\r\n  async updateCard(id, fullName) {\r\n    if (!this.isOnLine()) return;\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.add('loading');\r\n    dbg(fullName + ': Actualizando...');\r\n    const DATA = await getWeather(fullName, 'name').catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = fullName + ': Error al actualizar';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(fullName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n\r\n    // Find card index in list\r\n    let i = undefined;\r\n    this.state.cardList.forEach(card => {\r\n      if (card.data.id === id) i = this.state.cardList.indexOf(card);\r\n    });\r\n\r\n    // Update card\r\n    let newCardList = this.state.cardList;\r\n    newCardList[i].data = DATA;\r\n    this.setState({ cardList: newCardList });\r\n    const MSG = fullName + ': Actualizado';\r\n    this.addNotification(MSG, 'success');\r\n    this.stopUpdatingLoop(id);\r\n    suc(MSG);\r\n  }\r\n\r\n  removeCard(id, fullName) {\r\n    this.setState(prevState => ({\r\n      cardList: prevState.cardList.filter(item => item.data.id !== id)\r\n    }));\r\n    suc(fullName + ': Eliminado');\r\n  }\r\n\r\n  /**\r\n   * Notification functionality\r\n   */\r\n\r\n  addNotification(msg, type) {\r\n    let newNotList = this.state.notificationList;\r\n    if (newNotList.length >= 6) newNotList.shift();\r\n    this.setState({\r\n      notificationList: [...newNotList, { msg: msg, type: type, id: new Date().getTime() }]\r\n    });\r\n  }\r\n\r\n  removeNotification(id) {\r\n    this.setState(prevState => ({\r\n      notificationList: prevState.notificationList.filter(item => item.id !== id)\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Prediction functionality\r\n   */\r\n\r\n  fireSearchFromPrediction(value) {\r\n    this.resetPredictionList();\r\n    this.fireSearch(value, 'id');\r\n  }\r\n\r\n  addActivePrediction(predListDOM) {\r\n    // Actually add/set\r\n    this.removeActivePrediction(predListDOM);\r\n    if (this.currentFocus >= predListDOM.length) this.currentFocus = 0;\r\n    if (this.currentFocus < 0) this.currentFocus = (predListDOM.length - 1);\r\n    if (predListDOM.length) predListDOM[this.currentFocus].classList.add('active_prediction');\r\n  }\r\n\r\n  removeActivePrediction(predListDOM) {\r\n    for (var i = 0; i < predListDOM.length; i++)\r\n      predListDOM[i].classList.remove('active_prediction');\r\n  }\r\n\r\n  resetPredictionList() {\r\n    this.currentFocus = -1;\r\n    this.setState({ predictionList: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <header>\r\n          <div id=\"search_box\" predvisible={this.state.predictionList.length > 0 ? 'true' : 'false'}>\r\n            <button id=\"search_btn\"\r\n              className=\"loading_box loading\"\r\n              title=\"Buscar\"\r\n              onClick={this.fireSearch} >\r\n              <Icon name=\"search\" classes={['btn', 'perma_active']} viewbox=\"0 0 48 48\" />\r\n              <Icon name=\"loading_loop\" />\r\n            </button>\r\n            <input id=\"input_query\"\r\n              type=\"text\"\r\n              value={this.state.input}\r\n              placeholder=\"Buscar una cuidad\"\r\n              onKeyDown={e => this.inputKeyDown(e)}\r\n              onChange={e => this.inputChanged(e)}\r\n              onFocus={e => this.inputChanged(e)}\r\n              autoComplete=\"off\"\r\n              alt=\"Buscar una cuidad\" />\r\n            <div id=\"prediction_box\" >\r\n              {this.state.predictionList.map(item => (\r\n                <Prediction\r\n                  data={item}\r\n                  clickHandler={this.fireSearchFromPrediction}\r\n                  key={item.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/this.weather/\">Inicio</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/about\">Acerca de</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <Route exact path=\"/this.weather/\" render={props => (\r\n            <div id=\"main_content\">\r\n              <div id=\"card_box\">\r\n                {this.state.cardList.map(item => (\r\n                  <Card\r\n                    fullName={item.fullName}\r\n                    data={item.data}\r\n                    extras={item.extras}\r\n                    update={this.updateCard}\r\n                    remove={this.removeCard}\r\n                    key={item.data.id} />\r\n                ))}\r\n              </div>\r\n              <hr />\r\n              <button id=\"to_maps_btn\"\r\n                onClick={() => initSS(64 + document.getElementById('weather_maps').offsetTop - 16)} >\r\n                <Icon name=\"chevron\" classes={['chevron_down', 'btn']} />\r\n              </button>\r\n              <div id=\"weather_maps_box\">\r\n                <WeatherMaps />\r\n              </div>\r\n              <div id=\"notification_box\">\r\n                <div id=\"notification_content\">\r\n                  {this.state.notificationList.map(item => (\r\n                    <Notification\r\n                      data={item}\r\n                      remove={this.removeNotification}\r\n                      key={item.id} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )} />\r\n          <Suspense fallback={<LoadingMsg />}>\r\n            <Route path=\"/this.weather/about\" component={About} />\r\n          </Suspense>\r\n          <div id=\"to_top_btn_box\">\r\n            <ToTopBtn />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div id=\"footer_content\">\r\n            <div id=\"brand_box\">\r\n              <a id=\"imagotipo\" href=\"http://wikarot.github.io/this.weather\" title=\"this.weather\">\r\n                <div className=\"isotipo icon_small\">\r\n                  <span>\r\n                    <img src=\"favicon-16x16.png\" alt=\"Icono de this.weather\" />\r\n                  </span>\r\n                </div>\r\n                <h1 id=\"logotipo\"><em>this</em>.weather</h1>\r\n              </a>\r\n            </div>\r\n            <div id=\"cc\">\r\n              <span>\r\n                <p>Copyright 2019 <a href=\"https://github.com/Wikarot\">Leo de S.L.F</a></p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n        <div id=\"weather_maps_container\" style={{ display: 'none' }} >\r\n          <canvas id=\"weather_map_0\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_1\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_2\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_3\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_4\" width=\"512\" height=\"256\" />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// MS_ACC b280c897878592322aafe56701248929\r\n// GG_Acc cdd659df7dc048884575b9451ddf1330\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ThisWeather from './ThisWeather';\nimport './sass/main.css';\nimport { fcy } from './js/customConsole';\n\nfcy('Welcome to this.weather!');\n\nReactDOM.render(<ThisWeather />, document.getElementById('root'));\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Icon(props) {\r\n  let classes = ['icon'];\r\n  let viewbox = '0 0 24 24';\r\n\r\n  if (props.size !== undefined) classes.push('icon_' + props.size);\r\n  else classes.push('icon_small');\r\n  if (props.classes !== undefined) classes.push(...props.classes);\r\n  if (props.viewbox !== undefined) viewbox = props.viewbox;\r\n\r\n  // Special case for \"loading loop\"\r\n  if (props.name === 'loading_loop') classes.push('icon_loading');\r\n\r\n\r\n  return (\r\n    <div className={classes.join(' ')} >\r\n      <span>\r\n        <svg viewBox={viewbox} >\r\n          <use xlinkHref={'#' + props.name}></use>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  classes: PropTypes.arrayOf(PropTypes.string),\r\n  viewbox: PropTypes.string,\r\n  size: PropTypes.string,\r\n}\r\n"],"sourceRoot":""}