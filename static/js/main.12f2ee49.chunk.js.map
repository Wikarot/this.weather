{"version":3,"sources":["components/Icon.js","components/Card.js","components/Prediction.js","components/Notification.js","js/smoothScroll.js","components/ToTopBtn.js","js/getFromAPIs.js","ThisWeather.js","index.js","js/customConsole.js","js/threeStuffUtils.js"],"names":["Icon","props","classes","viewbox","undefined","size","push","name","className","join","viewBox","xlinkHref","H","RES","DOT_GEO","SphereBufferGeometry","DOT_MAT","MeshBasicMaterial","transparent","opacity","precision","LINE_MAT","LineBasicMaterial","fog","color","Card","state","time","timeTimer","updateTimer","id","data","iconId","icon","weatherId","update","bind","remove","createTag","this","getTime","city_labels","map","item","indexOf","setState","setInterval","document","getElementById","classList","clearInterval","OFFSET","timezone","OFFSET_F","Math","floor","mm_off","hh","Date","getUTCHours","mm","getUTCMinutes","MTX","Matrix4","coord","lat","lon","makeRotationFromEuler","Euler","THREE_MATH","degToRad","DOT","Mesh","position","set","SPH_RAD","applyMatrix4","LINE_GEO","Geometry","vertices","Vector3","LINE","Line","SCENE","add","X","Y","cityName","label","dot","line","x","y","fullName","I","removeFromCityLabels","rotated","title","extras","countryNameNative","src","countryCode","alt","countryName","temp","tempMax","tempMin","desc","onClick","Component","Prediction","predictionClicked","clickHandler","start","match","finish","country","type","value","style","display","Notification","iconWord","waitAndRemove","setTimeout","msg","intervalHandler","target","currentScroll","step","cont","runSS","diff","window","scrollTo","ToTopBtn","newTarget","documentElement","scrollTop","CITIES","a","COUNTRIES","API","API_OPTIONS","getPredictions","inputName","city","newList","length","replace","TEST","RegExp","RE_A","RE_B","RE_C","i","test","b","unshift","exec","c","getExtras","d","ITEM","e","f","es","getUserLocation","fetch","status","json","RES_JSON","country_code2","getWeather","option","PREFIX","sys","weather","description","round","main","temp_max","temp_min","About","lazy","WeatherMaps","ThisWeather","input","cardList","predictionList","notificationList","inputBox","predictionListBox","toTopBtn","currentFocus","inputKeyDown","inputChanged","fireSearch","stopSearchingLoop","addCard","updateCard","removeCard","removeNotification","fireSearchFromPrediction","then","res","err","dbg","focusID","addEventListener","resetPredictionList","transform","predListDOM","getElementsByClassName","keyCode","preventDefault","addActivePrediction","PREDS","querySelector","VAL","isOnLine","navigator","onLine","MSG","addNotification","focus","catch","DATA","FULL_NAME","exist","forEach","card","EXTRAS","suc","stopUpdatingLoop","newCardList","prevState","filter","newNotList","shift","removeActivePrediction","predvisible","placeholder","onKeyDown","onChange","onFocus","autoComplete","key","to","exact","path","render","fallback","component","href","width","height","module","fcy","RAD","DD","console","log","not","NEAR","FAR","Z_OFF","initDone","setInitDone","Scene"],"mappings":"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","file":"static/js/main.12f2ee49.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Icon(props) {\r\n  let classes = ['icon'];\r\n  let viewbox = '0 0 24 24';\r\n\r\n  if (props.size !== undefined) classes.push('icon_' + props.size);\r\n  else classes.push('icon_small');\r\n  if (props.classes !== undefined) classes.push(...props.classes);\r\n  if (props.viewbox !== undefined) viewbox = props.viewbox;\r\n\r\n  // Special case for \"loading loop\"\r\n  if (props.name === 'loading_loop') classes.push('icon_loading');\r\n\r\n\r\n  return (\r\n    <div className={classes.join(' ')} >\r\n      <span>\r\n        <svg viewBox={viewbox} >\r\n          <use xlinkHref={'#' + props.name}></use>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  classes: PropTypes.arrayOf(PropTypes.string),\r\n  viewbox: PropTypes.string,\r\n  size: PropTypes.string,\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  SphereBufferGeometry, MeshBasicMaterial, LineBasicMaterial, Matrix4,\r\n  Euler, Math as THREE_MATH, Vector3, Geometry, Line, Mesh\r\n} from 'three';\r\nimport Icon from './Icon';\r\nimport SCENE, { city_labels, removeFromCityLabels, SPH_RAD, RES } from '../js/threeStuffUtils';\r\n//import { not } from '../js/customConsole';\r\n\r\n//const TIME_TO_UPDATE = 20 * 60000; // ms\r\nconst H = RES / 2;\r\nconst DOT_GEO = new SphereBufferGeometry(0.001, 3, 2);\r\nconst DOT_MAT = new MeshBasicMaterial({ transparent: true, opacity: 0, precision: \"lowp\" });\r\nconst LINE_MAT = new LineBasicMaterial({ fog: false, color: '#b4b4b4' });\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: '',\r\n      timeTimer: undefined,\r\n      updateTimer: undefined,\r\n    };\r\n    this.id = this.props.data.id; // city id\r\n    this.iconId = this.props.data.icon; // icon code\r\n    this.weatherId = this.props.data.weatherId; // weather code (more speciffic than icon code)\r\n    /* if (\r\n      (this.props.data.weatherId > 701 &&\r\n        this.props.data.weatherId < 741) ||\r\n      (this.props.data.weatherId > 741 &&\r\n        this.props.data.weatherId < 781)\r\n    ) {\r\n      this.iconId = '50'; // neither sun nor moon\r\n    } else */\r\n    if (this.props.data.weatherId === 781) this.iconId = '50tornado'; //tornado\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.createTag = this.createTag.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTime();\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    if (I < 0) this.createTag();\r\n    this.setState({\r\n      timeTimer: setInterval(() => {\r\n        this.getTime()\r\n      }, 60000),\r\n      /* updateTimer: setInterval(() => {\r\n        not(this.props.fullName + ': Actualización automática...');\r\n        this.update();\r\n      }, TIME_TO_UPDATE) */\r\n    });\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  getTime() {\r\n    const OFFSET = ((this.props.data.timezone / 60) / 60); // timezone = seconds --> OFFSET hours\r\n    const OFFSET_F = Math.floor(OFFSET); // Integer from OFFSET (the offset can be XX hours AND 30 minutes in some cases)\r\n    let mm_off = 0;\r\n    if (OFFSET_F !== OFFSET) mm_off = Math.floor((OFFSET - OFFSET_F) * 60);\r\n    let hh = new Date().getUTCHours() + OFFSET_F;\r\n    let mm = new Date().getUTCMinutes() + mm_off;\r\n    if (mm > 59) { hh++; mm -= 60; }\r\n    if (hh > 23) hh -= 24;\r\n    if (hh < 0) hh = 24 + hh;\r\n    if (hh < 10 && hh >= 0) hh = '0' + hh;\r\n    if (mm < 10) mm = '0' + mm;\r\n    this.setState({ time: (hh + ':' + mm) });\r\n  }\r\n\r\n  createTag() {\r\n    // Rotation matrix\r\n    const MTX = new Matrix4();\r\n    const { lat, lon } = this.props.data.coord;\r\n    MTX.makeRotationFromEuler(new Euler(\r\n      THREE_MATH.degToRad(-lat), // X axe, horizontal rotation\r\n      THREE_MATH.degToRad(+lon), // Y axe, Vectical rotation\r\n      0, 'YXZ'));\r\n    // Invisible dot to hold the label position\r\n    const DOT = new Mesh(DOT_GEO, DOT_MAT);\r\n    DOT.name = this.id;\r\n    DOT.position.set(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX);\r\n    const LINE_GEO = new Geometry();\r\n    LINE_GEO.vertices.push(\r\n      new Vector3(0, 0, 0),\r\n      new Vector3(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX));\r\n    const LINE = new Line(LINE_GEO, LINE_MAT);\r\n\r\n    // Add line and dot to global scene\r\n    SCENE.add(DOT, LINE);\r\n    // Coordinates to print the label on \"flat\" map\r\n    const X = (180 + lon) / 360 * RES;\r\n    const Y = -(lat * (H / 180)) + H * 0.5;\r\n    // Add a city name label to labels public container\r\n    city_labels.push({\r\n      id: this.id, // 'city_label_' + card id\r\n      cityName: this.props.data.cityName, // label text content\r\n      label: undefined,\r\n      dot: DOT,  // the 3D position holder object\r\n      line: LINE, // a line from the center of the earth to the dot\r\n      x: X, // 2D map X coordinate\r\n      y: Y // 2D map Y coordinate\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.props.update(this.id, this.props.fullName);\r\n  }\r\n\r\n  remove() {\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    const DOT = city_labels[I].dot;\r\n    const LINE = city_labels[I].line;\r\n    SCENE.remove(DOT, LINE); // remove it from the scene\r\n    removeFromCityLabels(this.id);\r\n    //document.getElementById('city_label_' + this.id).remove(); // remove it from the DOM\r\n    this.props.remove(this.id, this.props.fullName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id={'card_' + this.id}\r\n        className=\"card\"\r\n        rotated={this.state.rotated} >\r\n        <div className=\"card_header\"\r\n          title={\r\n            this.props.fullName + ' (' +\r\n            this.props.extras.countryNameNative + ')'}>\r\n          <h2 className=\"name\"><em>{this.props.fullName}</em></h2>\r\n          <div className=\"icon_small\">\r\n            <span>\r\n              <img\r\n                src={'https://www.countryflags.io/' + this.props.data.countryCode + '/shiny/16.png'}\r\n                alt={'Bandera de ' + this.props.extras.countryName}\r\n                title={'Bandera de ' + this.props.extras.countryName} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"temp\">\r\n          <p className=\"temp_current\">{this.props.data.temp}°</p>\r\n          <p className=\"temp_max\"><span>Máx</span>{this.props.data.tempMax}°</p>\r\n          <p className=\"temp_min\"><span>Mín</span>{this.props.data.tempMin}°</p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"desc\">\r\n          <p className=\"desc\">{this.props.data.desc}</p>\r\n          <Icon name={this.iconId} classes={['perma_active']} />\r\n        </div>\r\n        <hr />\r\n        <div className=\"card_control\">\r\n          <button className=\"loading_box\" onClick={this.update} title=\"Actualizar\">\r\n            <Icon name=\"refresh\" classes={['btn']} />\r\n            <Icon name=\"loading_loop\" />\r\n          </button>\r\n          <span className=\"time\">\r\n            {this.state.time}\r\n          </span>\r\n          <button onClick={this.remove} title=\"Cerrar\" >\r\n            <Icon name=\"close\" classes={['btn']} />\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  fullName: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    //cloud: PropTypes.number.isRequired, // unused\r\n    coord: PropTypes.shape({\r\n      lat: PropTypes.number.isRequired,\r\n      lon: PropTypes.number.isRequired\r\n    }).isRequired,\r\n    countryCode: PropTypes.string.isRequired,\r\n    weatherId: PropTypes.number.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n    //hum: PropTypes.number.isRequired, // unused\r\n    icon: PropTypes.string.isRequired,\r\n    cityName: PropTypes.string.isRequired,\r\n    temp: PropTypes.number.isRequired,\r\n    tempMax: PropTypes.number.isRequired,\r\n    tempMin: PropTypes.number.isRequired,\r\n    timezone: PropTypes.number.isRequired,\r\n    //wind: PropTypes.number.isRequired // m/s to km/h // unused\r\n  }).isRequired,\r\n  extras: PropTypes.shape({\r\n    countryName: PropTypes.string.isRequired,\r\n    countryNameNative: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Prediction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.predictionClicked = this.predictionClicked.bind(this);\r\n  }\r\n\r\n  predictionClicked() {\r\n    this.props.clickHandler(this.props.data.id);\r\n  }\r\n\r\n  render() {\r\n    const { start, match, finish, country, id } = this.props.data;\r\n    return (\r\n      <div className=\"prediction\" onClick={this.predictionClicked}>\r\n        <span>\r\n          <p><strong>{start}</strong>{match}<strong>{finish}</strong><em> ({country})</em></p>\r\n        </span>\r\n        <input type=\"hidden\"\r\n          value={id}\r\n          style={{ display: 'none' }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPrediction.propTypes = {\r\n  data: PropTypes.shape({\r\n    start: PropTypes.string.isRequired,\r\n    match: PropTypes.string.isRequired,\r\n    finish: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  clickHandler: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.iconWord = 'not_' + this.props.data.type;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitAndRemove();\r\n  }\r\n\r\n  waitAndRemove() {\r\n    setTimeout(() => {\r\n      this.props.remove(this.props.data.id);\r\n    }, 4000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'notification ' + this.props.data.type}>\r\n        <Icon name={this.iconWord} />\r\n        <p>{this.props.data.msg}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  data: PropTypes.shape({\r\n    msg: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","let intervalHandler = 0;\r\nlet target = 0;\r\nlet currentScroll = 0;\r\nlet step = 0;\r\nlet cont = 0;\r\n\r\n/**\r\n * Init Smooth Scroll\r\n */\r\nexport function initSS(newTarget) {\r\n  clearInterval(intervalHandler);\r\n  cont = 0;\r\n  target = newTarget;\r\n  currentScroll = document.documentElement.scrollTop;\r\n  step = (currentScroll - target) / 60;\r\n  intervalHandler = setInterval(runSS, 0);\r\n}\r\n\r\n/**\r\n * Cancel Smooth Scroll\r\n */\r\nexport function cancelSS() {\r\n  clearInterval(intervalHandler);\r\n}\r\n\r\nfunction runSS() {\r\n  let diff = step * cont;\r\n  window.scrollTo(0, currentScroll - diff);\r\n  if (cont === 60) clearInterval(intervalHandler);\r\n  cont++;\r\n}","import React from 'react'\r\nimport Icon from './Icon';\r\nimport { initSS } from '../js/smoothScroll';\r\n\r\nexport default function ToTopBtn() {\r\n  return (\r\n    <button id=\"to_top_btn\" onClick={() => initSS(0)} title=\"Volver arriba\">\r\n      <Icon name=\"top_arrow\" classes={['btn']} />\r\n    </button>\r\n  )\r\n}\r\n","let CITIES = undefined; // OpenWeatherMaps city (weather stations) list\r\n(async () => {\r\n  CITIES = await import(/* webpackChunkName: \"city_list\" */ '../apis/city.json');\r\n})();\r\n\r\n/* CITIES shape: \r\n[{\r\n    a: (number) // city id\r\n    b: (string) // city name\r\n    c: (string) // city country code (ISO 3166-2)\r\n  }, ...] */\r\n\r\nlet COUNTRIES = undefined;  // REST Countries country list\r\n(async () => {\r\n  COUNTRIES = await import(/* webpackChunkName: \"all_list\" */ '../apis/country.json');\r\n})();\r\n\r\n/* COUNTRIES shape:\r\n[{\r\n    d: (string) // city country code (ISO 3166-2)\r\n    e: (string) // country native name\r\n    f: (string) // country name translations\r\n  }, ...] */\r\n\r\nconst API = 'https://api.openweathermap.org/data/2.5/weather?';\r\nconst API_CITY_NAME_PREFIX = 'q=';\r\nconst API_CITY_ID_PREFIX = 'id=';\r\nconst API_OPTIONS = '&appid=b280c897878592322aafe56701248929&units=metric&lang=es';\r\n\r\nexport async function getPredictions(inputName) {\r\n  return await (() => {\r\n    let city = undefined;\r\n    let newList = [];\r\n    // Create prediction list (minimum of 3 characters typed)\r\n    if (inputName.length > 2) {\r\n      inputName = inputName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n      const TEST = new RegExp(' ' + inputName, 'i');\r\n      const RE_A = new RegExp('(.*)' + inputName, 'i');\r\n      const RE_B = new RegExp(inputName, 'i');\r\n      const RE_C = new RegExp(inputName + '(.*)', 'i');\r\n      // Maximum of 6 predictions\r\n      for (let i = 0; (i < 209579) && (newList.length < 6); i++) {\r\n        city = CITIES[i];\r\n        if (TEST.test(' ' + city.b)) {\r\n          if (inputName.length === city.b.length) // 100% match at the top of the list\r\n            newList.unshift({\r\n              start: RE_A.exec(city.b)[1],\r\n              match: RE_B.exec(city.b)[0],\r\n              finish: RE_C.exec(city.b)[1],\r\n              country: city.c, id: city.a\r\n            });\r\n          else // partial match\r\n            newList.push({\r\n              start: RE_A.exec(city.b)[1],\r\n              match: RE_B.exec(city.b)[0],\r\n              finish: RE_C.exec(city.b)[1],\r\n              country: city.c, id: city.a\r\n            });\r\n        }\r\n      }\r\n      return newList;\r\n    } // else\r\n    return [];\r\n  })();\r\n}\r\n\r\nexport async function getExtras(countryCode) {\r\n  for (let i = 0; i < 250; i++) {\r\n    if (COUNTRIES[i].d === countryCode) {\r\n      const ITEM = COUNTRIES[i];\r\n      return {\r\n        countryNameNative: ITEM.e,\r\n        countryName: ITEM.f.es\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getUserLocation() {\r\n  const RES = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=15d8e57eb4aa4015bb32a04d73b67b19');\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return `${RES_JSON.city}, ${RES_JSON.country_code2}`;\r\n  }\r\n}\r\n\r\nexport async function getWeather(inputName, option) {\r\n  let PREFIX = '';\r\n  if (option === 'name') PREFIX = API_CITY_NAME_PREFIX;\r\n  else if (option === 'id') PREFIX = API_CITY_ID_PREFIX;\r\n  const RES = await fetch(API + PREFIX + inputName + API_OPTIONS);\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return {\r\n      id: RES_JSON.id,\r\n      coord: { lat: RES_JSON.coord.lat, lon: RES_JSON.coord.lon },\r\n      countryCode: RES_JSON.sys.country,\r\n      weatherId: RES_JSON.weather[0].id,\r\n      desc: RES_JSON.weather[0].description,\r\n      icon: RES_JSON.weather[0].icon,\r\n      cityName: RES_JSON.name,\r\n      temp: Math.round(RES_JSON.main.temp),\r\n      tempMax: Math.round(RES_JSON.main.temp_max),\r\n      tempMin: Math.round(RES_JSON.main.temp_min),\r\n      timezone: RES_JSON.timezone,\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\nkey: '&appid=b280c897878592322aafe56701248929',\r\nunits: '&units=metric',\r\nlang: '&lang=es'\r\n */\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Card from './components/Card';\r\nimport Icon from './components/Icon';\r\nimport Prediction from './components/Prediction';\r\nimport Notification from './components/Notification';\r\nimport ToTopBtn from './components/ToTopBtn';\r\nimport { getPredictions, getUserLocation, getExtras, getWeather } from './js/getFromAPIs';\r\nimport { cancelSS } from './js/smoothScroll';\r\nimport { suc, alt, err, dbg } from './js/customConsole';\r\n\r\n/* const PRELOAD_CITIES = [\r\n  'Cairo,EG',             // africa\r\n  'Kingston,JM',          // america c\r\n  'Alaska,US',            // america n\r\n  'Amazonas,BR',          // america s\r\n  'McMurdo Station,AQ',   // antartida\r\n  'Tokyo,JP',             // asia\r\n  'Berlin,DE',            // europa\r\n  'Sydney,AU',            // oceania\r\n  'Cape Town,ZA',         // -africa\r\n  'Panama,PA',            // -america c\r\n  'Ottawa,CA',            // -america n\r\n  'Montevideo,UY',        // -america s\r\n  'Busan,KR',             // -asia\r\n  'Moscow,RU',            // -europa\r\n  'Wellington,NZ',        //- oceania\r\n]; */\r\n\r\n/* webpackChunkName: \"WeatherMaps\" */\r\n/* webpackPreload: true */\r\n\r\nconst About = (lazy(() => (import(/* webpackChunkName: \"About\" */ './components/About'))));\r\nconst WeatherMaps = (lazy(() => (import(/* webpackChunkName: \"WeatherMaps\" */ './components/WeatherMaps'))));\r\n\r\nexport default class ThisWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      cardList: [],\r\n      predictionList: [],\r\n      notificationList: [],\r\n    };\r\n    this.inputBox = undefined;\r\n    this.predictionListBox = undefined;\r\n    this.toTopBtn = undefined;\r\n    this.currentFocus = -1;\r\n    this.inputKeyDown = this.inputKeyDown.bind(this);\r\n    this.inputChanged = this.inputChanged.bind(this);\r\n    this.fireSearch = this.fireSearch.bind(this);\r\n    this.stopSearchingLoop = this.stopSearchingLoop.bind(this);\r\n    this.addCard = this.addCard.bind(this);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.removeCard = this.removeCard.bind(this);\r\n    this.removeNotification = this.removeNotification.bind(this);\r\n    this.fireSearchFromPrediction = this.fireSearchFromPrediction.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    getUserLocation().then(res => {\r\n      if (res > 200)\r\n        err('Error al localizar el dispositivo (error ' + res + ')');\r\n      else {\r\n        dbg(`Dispositivo localizado...`);\r\n        this.addCard(res, 'name');\r\n      }\r\n    });\r\n    this.focusID('input_query');\r\n    this.inputBox = document.getElementById('input_query');\r\n    this.predictionListBox = document.getElementById('prediction_box');\r\n    this.toTopBtn = document.getElementById('to_top_btn');\r\n    document.addEventListener('click', e => {\r\n      if ((e.target !== this.inputBox) && (this.state.predictionList.length > 0))\r\n        this.resetPredictionList(e.target);\r\n    });\r\n    window.addEventListener('scroll', () => {\r\n      if (document.documentElement.scrollTop > 100) this.toTopBtn.style.transform = 'scale(1)';\r\n      else this.toTopBtn.style.transform = '';\r\n    });\r\n    window.addEventListener('wheel', () => cancelSS());\r\n  }\r\n\r\n  /**\r\n   * App functionality & utils\r\n   */\r\n\r\n  async inputKeyDown(e) {\r\n    // Current predictions displayed\r\n    let predListDOM = this.predictionListBox.getElementsByClassName('prediction');\r\n    if (e.keyCode === 40) { // key down\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction\r\n        this.currentFocus++;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 38) { // key up\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction        \r\n        this.currentFocus--;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 27) { // escape\r\n      // Clean the input\r\n      this.setState({ input: '', predictionList: [] });\r\n    } else if (e.keyCode === 13) { // enter\r\n      e.preventDefault();\r\n      this.resetPredictionList(e.target); // hide predlist while searching\r\n      if ((this.state.predictionList.length > 0) &&\r\n        (document.querySelector('.active_prediction') !== null)) {\r\n        // if there are predictions AND there is an active one, search that\r\n        const VAL = document.querySelector('.active_prediction input').value;\r\n        this.fireSearchFromPrediction(VAL);\r\n      } else {\r\n        // else, try to search based on input value\r\n        this.setState({ input: e.target.value });\r\n        this.fireSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  async inputChanged(e) {\r\n    this.resetPredictionList();\r\n    this.setState({\r\n      input: e.target.value,\r\n      predictionList: [],\r\n    });\r\n    const PREDS = await getPredictions(e.target.value);\r\n    this.setState({ predictionList: PREDS });\r\n  }\r\n\r\n  fireSearch(inputName, option) {\r\n    if (!this.isOnLine()) return; // if it's online, continue\r\n    if (inputName) // if there is an specific input (parameter)\r\n      this.addCard(inputName, option);\r\n    else if (this.state.input.length > 0) // else, if there is text in the input box\r\n      this.addCard(this.state.input, 'name');\r\n    this.focusID('input_query'); // if not, return focus to the input box\r\n  }\r\n\r\n  isOnLine() {\r\n    if (window.navigator.onLine) return true;\r\n    const MSG = 'Equipo offline';\r\n    this.addNotification(MSG, 'error');\r\n    err(MSG);\r\n    return false;\r\n  }\r\n\r\n  focusID(id) {\r\n    document.getElementById(id).focus();\r\n  }\r\n\r\n  stopSearchingLoop() {\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  stopUpdatingLoop(id) {\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.remove('loading');\r\n  }\r\n\r\n  /**\r\n   * Weather Card functionality\r\n   */\r\n\r\n  async addCard(inputName, option) {\r\n    document.getElementById('search_btn').classList.add('loading');\r\n    dbg(inputName + ': Consultando API...');\r\n    const DATA = await getWeather(inputName, option).catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = 'No se encontraron resulados';\r\n      this.addNotification(MSG, 'alert');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n    const FULL_NAME = DATA.cityName + ', ' + DATA.countryCode; // Complete name used for the card title\r\n\r\n    // Check if it already exists\r\n    if (this.state.cardList.length > 0) {\r\n      let exist = false;\r\n      this.state.cardList.forEach(card => {\r\n        // id correspondant to 'weather station id',\r\n        // city and country name can be the same\r\n        if (DATA.id === card.data.id) return exist = true;\r\n      });\r\n      if (exist) {\r\n        const MSG = 'Resultado ya incluido';\r\n        this.addNotification(MSG, 'info');\r\n        alt(FULL_NAME + ': ' + MSG);\r\n        this.stopSearchingLoop();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add the card\r\n    const EXTRAS = await getExtras(DATA.countryCode); // get extra data\r\n    this.setState({\r\n      cardList: [...this.state.cardList, { fullName: FULL_NAME, data: DATA, extras: EXTRAS }],\r\n      input: '', // Clean input box\r\n      predictionList: [] // Clean predictions\r\n    });\r\n    this.stopSearchingLoop();\r\n    dbg(inputName + ' --> ' + FULL_NAME + '...');\r\n    suc(FULL_NAME + ': Agregado');\r\n  }\r\n\r\n  async updateCard(id, fullName) {\r\n    if (!this.isOnLine()) return;\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.add('loading');\r\n    dbg(fullName + ': Actualizando...');\r\n    const DATA = await getWeather(fullName, 'name').catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = fullName + ': Error al actualizar';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(fullName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n\r\n    // Find card index in list\r\n    let i = undefined;\r\n    this.state.cardList.forEach(card => {\r\n      if (card.data.id === id) i = this.state.cardList.indexOf(card);\r\n    });\r\n\r\n    // Update card\r\n    let newCardList = this.state.cardList;\r\n    newCardList[i].data = DATA;\r\n    this.setState({ cardList: newCardList });\r\n    const MSG = fullName + ': Actualizado';\r\n    this.addNotification(MSG, 'success');\r\n    this.stopUpdatingLoop(id);\r\n    suc(MSG);\r\n  }\r\n\r\n  removeCard(id, fullName) {\r\n    this.setState(prevState => ({\r\n      cardList: prevState.cardList.filter(item => item.data.id !== id)\r\n    }));\r\n    suc(fullName + ': Eliminado');\r\n  }\r\n\r\n  /**\r\n   * Notification functionality\r\n   */\r\n\r\n  addNotification(msg, type) {\r\n    let newNotList = this.state.notificationList;\r\n    if (newNotList.length >= 6) newNotList.shift();\r\n    this.setState({\r\n      notificationList: [...newNotList, { msg: msg, type: type, id: new Date().getTime() }]\r\n    });\r\n  }\r\n\r\n  removeNotification(id) {\r\n    this.setState(prevState => ({\r\n      notificationList: prevState.notificationList.filter(item => item.id !== id)\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Prediction functionality\r\n   */\r\n\r\n  fireSearchFromPrediction(value) {\r\n    this.resetPredictionList();\r\n    this.fireSearch(value, 'id');\r\n  }\r\n\r\n  addActivePrediction(predListDOM) {\r\n    // Actually add/set\r\n    this.removeActivePrediction(predListDOM);\r\n    if (this.currentFocus >= predListDOM.length) this.currentFocus = 0;\r\n    if (this.currentFocus < 0) this.currentFocus = (predListDOM.length - 1);\r\n    if (predListDOM.length) predListDOM[this.currentFocus].classList.add('active_prediction');\r\n  }\r\n\r\n  removeActivePrediction(predListDOM) {\r\n    for (var i = 0; i < predListDOM.length; i++)\r\n      predListDOM[i].classList.remove('active_prediction');\r\n  }\r\n\r\n  resetPredictionList() {\r\n    this.currentFocus = -1;\r\n    this.setState({ predictionList: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <header>\r\n          <div id=\"search_box\" predvisible={this.state.predictionList.length > 0 ? 'true' : 'false'}>\r\n            <button id=\"search_btn\"\r\n              className=\"loading_box loading\"\r\n              title=\"Buscar\"\r\n              onClick={this.fireSearch} >\r\n              <Icon name=\"search\" classes={['btn', 'perma_active']} viewbox=\"0 0 48 48\" />\r\n              <Icon name=\"loading_loop\" />\r\n            </button>\r\n            <input id=\"input_query\"\r\n              type=\"text\"\r\n              value={this.state.input}\r\n              placeholder=\"Buscar una cuidad\"\r\n              onKeyDown={e => this.inputKeyDown(e)}\r\n              onChange={e => this.inputChanged(e)}\r\n              onFocus={e => this.inputChanged(e)}\r\n              autoComplete=\"off\"\r\n              alt=\"Buscar una cuidad\" />\r\n            <div id=\"prediction_box\">\r\n              {this.state.predictionList.map(item => (\r\n                <Prediction\r\n                  data={item}\r\n                  clickHandler={this.fireSearchFromPrediction}\r\n                  key={item.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/this.weather/\">Inicio</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/weathermaps\">Mapas meteorológicos</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/about\">Acerca de</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <Route exact path=\"/this.weather/\" render={props => (\r\n            <div id=\"main_content\">\r\n              <div id=\"card_box\">\r\n                {this.state.cardList.map(item => (\r\n                  <Card\r\n                    fullName={item.fullName}\r\n                    data={item.data}\r\n                    extras={item.extras}\r\n                    update={this.updateCard}\r\n                    remove={this.removeCard}\r\n                    key={item.data.id} />\r\n                ))}\r\n              </div>\r\n              <div id=\"notification_box\">\r\n                <div id=\"notification_content\">\r\n                  {this.state.notificationList.map(item => (\r\n                    <Notification\r\n                      data={item}\r\n                      remove={this.removeNotification}\r\n                      key={item.id} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )} />\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/weathermaps\" component={WeatherMaps} />\r\n          </Suspense>\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/about\" component={About} />\r\n          </Suspense>\r\n          <div id=\"to_top_btn_box\">\r\n            <ToTopBtn />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div id=\"footer_content\">\r\n            <div id=\"brand_box\">\r\n              <a id=\"imagotipo\" href=\"http://wikarot.github.io/this.weather\" title=\"this.weather\">\r\n                <div className=\"isotipo icon_small\">\r\n                  <span>\r\n                    <img src=\"favicon-16x16.png\" alt=\"Icono de this.weather\" />\r\n                  </span>\r\n                </div>\r\n                <h1 id=\"logotipo\"><em>this</em>.weather</h1>\r\n              </a>\r\n            </div>\r\n            <div id=\"cc\">\r\n              <span>\r\n                <p>Copyright 2019 <a href=\"https://github.com/Wikarot\">Leonardo de S.L.F</a></p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n        <div id=\"weather_maps_container\" style={{ display: 'none' }} >\r\n          <canvas id=\"weather_map_0\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_1\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_2\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_3\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_4\" width=\"512\" height=\"256\" />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// MS_ACC b280c897878592322aafe56701248929\r\n// GG_Acc cdd659df7dc048884575b9451ddf1330\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport ThisWeather from './ThisWeather';\nimport './sass/main.css';\n\nimport('./js/customConsole').then(module => module.fcy('Welcome to this.weather!'));\n\nrender(<ThisWeather />, document.getElementById('root'));\n","const FORMAT = '%c%s';\r\nconst RAD = 'border-radius: 99px;';\r\nconst DD = ' » ';\r\n\r\n// SUCCESS\r\nexport const suc = console.suc = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: GreenYellow; background-color: DarkGreen; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ALERT\r\nexport const alt = console.alt = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: Black; background-color: Gold; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ERROR\r\nexport const err = console.err = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: MistyRose; background-color: DarkRed; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// NOTIFICATION\r\nexport const not = console.not = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: LightCyan; background-color: DarkSlateGray; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// DEBUG\r\nexport const dbg = console.dbg = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: SkyBlue; background-color: MidnightBlue; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// FANCY\r\nexport const fcy = console.fcy = function (msg) {\r\n  console.log('%c%s',\r\n    'color: #33cfff;' +\r\n    'background-color: rgba(51, 207, 255, .1);' +\r\n    'border: 1px solid #33cfff;' +\r\n    'border-radius: 2px; padding: 6px 9px;' +\r\n    'text-shadow: 0 0 2px rgba(255, 255, 255, .8);' +\r\n    '',\r\n    msg);\r\n}\r\n","import { Scene } from 'three';\r\n\r\nexport const NEAR = 1; // near, posible visible distance from camera\r\nexport const FAR = 5; // far, visible distance from camera\r\nexport const Z_OFF = 3; // camera offset from 0 (Z axis)\r\nexport let city_labels = []; // id, cityName, label, dot, line, x, y\r\nexport const SPH_RAD = 0.825; // sphere radius\r\nexport const RES = 512; // weather map resolution\r\n\r\nexport function removeFromCityLabels(id) {\r\n  city_labels = city_labels.filter(item => item.id !== id); // remove it from the \"list\"\r\n}\r\n\r\nexport let initDone = false;\r\nexport function setInitDone() {\r\n  // init makes a callback when run the last line\r\n  // and calls for initWeatherMapsObj (camera, renderer and controls)\r\n  initDone = true;\r\n}\r\n\r\nconst SCENE = new Scene();\r\n\r\nexport default SCENE;"],"sourceRoot":""}