{"version":3,"sources":["js/customConsole.js","components/Card.js","components/Prediction.js","components/Notification.js","js/smoothScroll.js","components/ToTopBtn.js","js/getFromAPIs.js","ThisWeather.js","index.js","js/threeStuffUtils.js","components/Icon.js"],"names":["__webpack_require__","d","__webpack_exports__","suc","alt","err","dbg","fcy","RAD","DD","console","msg","log","not","H","RES","DOT_GEO","SphereBufferGeometry","DOT_MAT","MeshBasicMaterial","transparent","opacity","precision","LINE_MAT","LineBasicMaterial","fog","color","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","timeTimer","undefined","updateTimer","id","data","iconId","icon","weatherId","update","bind","assertThisInitialized","remove","createTag","_this2","getTime","city_labels","map","item","indexOf","setState","setInterval","document","getElementById","classList","clearInterval","OFFSET","timezone","OFFSET_F","Math","floor","mm_off","hh","Date","getUTCHours","mm","getUTCMinutes","MTX","Matrix4","_this$props$data$coor","coord","lat","lon","makeRotationFromEuler","Euler","THREE_MATH","degToRad","DOT","Mesh","name","position","set","SPH_RAD","applyMatrix4","LINE_GEO","Geometry","vertices","push","Vector3","LINE","Line","SCENE","add","X","Y","cityName","label","dot","line","x","y","fullName","I","removeFromCityLabels","react_default","a","createElement","className","rotated","title","extras","countryNameNative","src","countryCode","countryName","temp","tempMax","tempMin","desc","Icon","classes","onClick","Component","Prediction","predictionClicked","clickHandler","_this$props$data","start","match","finish","country","type","value","style","display","Notification","iconWord","waitAndRemove","setTimeout","intervalHandler","target","currentScroll","step","cont","runSS","diff","window","scrollTo","ToTopBtn","newTarget","documentElement","scrollTop","CITIES","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","e","then","t","sent","stop","COUNTRIES","_callee2","_context2","API","API_CITY_NAME_PREFIX","API_CITY_ID_PREFIX","API_OPTIONS","getPredictions","_x","_getPredictions","apply","arguments","_callee3","inputName","_context3","city","newList","length","replace","TEST","RegExp","RE_A","RE_B","RE_C","i","test","b","unshift","exec","c","abrupt","getExtras","_x2","_getExtras","_callee4","ITEM","_context4","f","es","getUserLocation","_getUserLocation","_callee5","RES_JSON","_context5","fetch","status","json","concat","country_code2","getWeather","_x3","_x4","_getWeather","_callee6","option","PREFIX","_context6","sys","weather","description","round","main","temp_max","temp_min","About","lazy","WeatherMaps","Promise","all","ThisWeather","input","cardList","predictionList","notificationList","inputBox","predictionListBox","toTopBtn","currentFocus","inputKeyDown","inputChanged","fireSearch","stopSearchingLoop","addCard","updateCard","removeCard","removeNotification","fireSearchFromPrediction","res","focusID","addEventListener","resetPredictionList","transform","predListDOM","getElementsByClassName","keyCode","preventDefault","addActivePrediction","PREDS","querySelector","VAL","isOnLine","navigator","onLine","MSG","addNotification","focus","catch","DATA","FULL_NAME","exist","forEach","card","EXTRAS","toConsumableArray","stopUpdatingLoop","_this3","newCardList","prevState","filter","newNotList","shift","removeActivePrediction","_this4","react_router_dom","predvisible","viewbox","placeholder","onKeyDown","onChange","onFocus","autoComplete","Prediction_Prediction","key","to","react_router","exact","path","render","Card_Card","Notification_Notification","react","fallback","component","href","width","height","ThisWeather_ThisWeather","NEAR","FAR","Z_OFF","initDone","setInitDone","three__WEBPACK_IMPORTED_MODULE_0__","Scene","size","C_Users_Leo_Google_Drive_Proyectos_Proyectos_Visual_Studio_Code_Website_this_weather_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","join","viewBox","xlinkHref"],"mappings":"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","file":"static/js/main.31534ce5.chunk.js","sourcesContent":["const FORMAT = '%c%s';\r\nconst RAD = 'border-radius: 99px;';\r\nconst DD = ' » ';\r\n\r\n// SUCCESS\r\nexport const suc = console.suc = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: GreenYellow; background-color: DarkGreen; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ALERT\r\nexport const alt = console.alt = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: Black; background-color: Gold; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ERROR\r\nexport const err = console.err = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: MistyRose; background-color: DarkRed; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// NOTIFICATION\r\nexport const not = console.not = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: LightCyan; background-color: DarkSlateGray; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// DEBUG\r\nexport const dbg = console.dbg = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: SkyBlue; background-color: MidnightBlue; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// FANCY\r\nexport const fcy = console.fcy = function (msg) {\r\n  console.log('%c%s',\r\n    'color: #33cfff;' +\r\n    'background-color: rgba(51, 207, 255, .1);' +\r\n    'border: 1px solid #33cfff;' +\r\n    'border-radius: 2px; padding: 6px 9px;' +\r\n    'text-shadow: 0 0 2px rgba(255, 255, 255, .8);' +\r\n    '',\r\n    msg);\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  SphereBufferGeometry, MeshBasicMaterial, LineBasicMaterial, Matrix4,\r\n  Euler, Math as THREE_MATH, Vector3, Geometry, Line, Mesh\r\n} from 'three';\r\nimport Icon from './Icon';\r\nimport SCENE, { city_labels, removeFromCityLabels, SPH_RAD, RES } from '../js/threeStuffUtils';\r\n//import { not } from '../js/customConsole';\r\n\r\n//const TIME_TO_UPDATE = 20 * 60000; // ms\r\nconst H = RES / 2;\r\nconst DOT_GEO = new SphereBufferGeometry(0.001, 3, 2);\r\nconst DOT_MAT = new MeshBasicMaterial({ transparent: true, opacity: 0, precision: \"lowp\" });\r\nconst LINE_MAT = new LineBasicMaterial({ fog: false, color: '#b4b4b4' });\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: '',\r\n      timeTimer: undefined,\r\n      updateTimer: undefined,\r\n    };\r\n    this.id = this.props.data.id; // city id\r\n    this.iconId = this.props.data.icon; // icon code\r\n    this.weatherId = this.props.data.weatherId; // weather code (more speciffic than icon code)\r\n    /* if (\r\n      (this.props.data.weatherId > 701 &&\r\n        this.props.data.weatherId < 741) ||\r\n      (this.props.data.weatherId > 741 &&\r\n        this.props.data.weatherId < 781)\r\n    ) {\r\n      this.iconId = '50'; // neither sun nor moon\r\n    } else */\r\n    if (this.props.data.weatherId === 781) this.iconId = '50tornado'; //tornado\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.createTag = this.createTag.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTime();\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    if (I < 0) this.createTag();\r\n    this.setState({\r\n      timeTimer: setInterval(() => {\r\n        this.getTime()\r\n      }, 60000),\r\n      /* updateTimer: setInterval(() => {\r\n        not(this.props.fullName + ': Actualización automática...');\r\n        this.update();\r\n      }, TIME_TO_UPDATE) */\r\n    });\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  getTime() {\r\n    const OFFSET = ((this.props.data.timezone / 60) / 60); // timezone = seconds --> OFFSET hours\r\n    const OFFSET_F = Math.floor(OFFSET); // Integer from OFFSET (the offset can be XX hours AND 30 minutes in some cases)\r\n    let mm_off = 0;\r\n    if (OFFSET_F !== OFFSET) mm_off = Math.floor((OFFSET - OFFSET_F) * 60);\r\n    let hh = new Date().getUTCHours() + OFFSET_F;\r\n    let mm = new Date().getUTCMinutes() + mm_off;\r\n    if (mm > 59) { hh++; mm -= 60; }\r\n    if (hh > 23) hh -= 24;\r\n    if (hh < 0) hh = 24 + hh;\r\n    if (hh < 10 && hh >= 0) hh = '0' + hh;\r\n    if (mm < 10) mm = '0' + mm;\r\n    this.setState({ time: (hh + ':' + mm) });\r\n  }\r\n\r\n  createTag() {\r\n    // Rotation matrix\r\n    const MTX = new Matrix4();\r\n    const { lat, lon } = this.props.data.coord;\r\n    MTX.makeRotationFromEuler(new Euler(\r\n      THREE_MATH.degToRad(-lat), // X axe, horizontal rotation\r\n      THREE_MATH.degToRad(+lon), // Y axe, Vectical rotation\r\n      0, 'YXZ'));\r\n    // Invisible dot to hold the label position\r\n    const DOT = new Mesh(DOT_GEO, DOT_MAT);\r\n    DOT.name = this.id;\r\n    DOT.position.set(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX);\r\n    const LINE_GEO = new Geometry();\r\n    LINE_GEO.vertices.push(\r\n      new Vector3(0, 0, 0),\r\n      new Vector3(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX));\r\n    const LINE = new Line(LINE_GEO, LINE_MAT);\r\n\r\n    // Add line and dot to global scene\r\n    SCENE.add(DOT, LINE);\r\n    // Coordinates to print the label on \"flat\" map\r\n    const X = (180 + lon) / 360 * RES;\r\n    const Y = -(lat * (H / 180)) + H * 0.5;\r\n    // Add a city name label to labels public container\r\n    city_labels.push({\r\n      id: this.id, // 'city_label_' + card id\r\n      cityName: this.props.data.cityName, // label text content\r\n      label: undefined,\r\n      dot: DOT,  // the 3D position holder object\r\n      line: LINE, // a line from the center of the earth to the dot\r\n      x: X, // 2D map X coordinate\r\n      y: Y // 2D map Y coordinate\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.props.update(this.id, this.props.fullName);\r\n  }\r\n\r\n  remove() {\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    const DOT = city_labels[I].dot;\r\n    const LINE = city_labels[I].line;\r\n    SCENE.remove(DOT, LINE); // remove it from the scene\r\n    removeFromCityLabels(this.id);\r\n    //document.getElementById('city_label_' + this.id).remove(); // remove it from the DOM\r\n    this.props.remove(this.id, this.props.fullName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id={'card_' + this.id}\r\n        className=\"card\"\r\n        rotated={this.state.rotated} >\r\n        <div className=\"card_header\"\r\n          title={\r\n            this.props.fullName + ' (' +\r\n            this.props.extras.countryNameNative + ')'}>\r\n          <h2 className=\"name\"><em>{this.props.fullName}</em></h2>\r\n          <div className=\"icon_small\">\r\n            <span>\r\n              <img\r\n                src={'https://www.countryflags.io/' + this.props.data.countryCode + '/shiny/16.png'}\r\n                alt={'Bandera de ' + this.props.extras.countryName}\r\n                title={'Bandera de ' + this.props.extras.countryName} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"temp\">\r\n          <p className=\"temp_current\">{this.props.data.temp}°</p>\r\n          <p className=\"temp_max\"><span>Máx</span>{this.props.data.tempMax}°</p>\r\n          <p className=\"temp_min\"><span>Mín</span>{this.props.data.tempMin}°</p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"desc\">\r\n          <p className=\"desc\">{this.props.data.desc}</p>\r\n          <Icon name={this.iconId} classes={['perma_active']} />\r\n        </div>\r\n        <hr />\r\n        <div className=\"card_control\">\r\n          <button className=\"loading_box\" onClick={this.update} title=\"Actualizar\">\r\n            <Icon name=\"refresh\" classes={['btn']} />\r\n            <Icon name=\"loading_loop\" />\r\n          </button>\r\n          <span className=\"time\">\r\n            {this.state.time}\r\n          </span>\r\n          <button onClick={this.remove} title=\"Cerrar\" >\r\n            <Icon name=\"close\" classes={['btn']} />\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  fullName: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    //cloud: PropTypes.number.isRequired, // unused\r\n    coord: PropTypes.shape({\r\n      lat: PropTypes.number.isRequired,\r\n      lon: PropTypes.number.isRequired\r\n    }).isRequired,\r\n    countryCode: PropTypes.string.isRequired,\r\n    weatherId: PropTypes.number.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n    //hum: PropTypes.number.isRequired, // unused\r\n    icon: PropTypes.string.isRequired,\r\n    cityName: PropTypes.string.isRequired,\r\n    temp: PropTypes.number.isRequired,\r\n    tempMax: PropTypes.number.isRequired,\r\n    tempMin: PropTypes.number.isRequired,\r\n    timezone: PropTypes.number.isRequired,\r\n    //wind: PropTypes.number.isRequired // m/s to km/h // unused\r\n  }).isRequired,\r\n  extras: PropTypes.shape({\r\n    countryName: PropTypes.string.isRequired,\r\n    countryNameNative: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Prediction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.predictionClicked = this.predictionClicked.bind(this);\r\n  }\r\n\r\n  predictionClicked() {\r\n    this.props.clickHandler(this.props.data.id);\r\n  }\r\n\r\n  render() {\r\n    const { start, match, finish, country, id } = this.props.data;\r\n    return (\r\n      <div className=\"prediction\" onClick={this.predictionClicked}>\r\n        <span>\r\n          <p><strong>{start}</strong>{match}<strong>{finish}</strong><em> ({country})</em></p>\r\n        </span>\r\n        <input type=\"hidden\"\r\n          value={id}\r\n          style={{ display: 'none' }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPrediction.propTypes = {\r\n  data: PropTypes.shape({\r\n    start: PropTypes.string.isRequired,\r\n    match: PropTypes.string.isRequired,\r\n    finish: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  clickHandler: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.iconWord = 'not_' + this.props.data.type;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitAndRemove();\r\n  }\r\n\r\n  waitAndRemove() {\r\n    setTimeout(() => {\r\n      this.props.remove(this.props.data.id);\r\n    }, 4000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'notification ' + this.props.data.type}>\r\n        <Icon name={this.iconWord} />\r\n        <p>{this.props.data.msg}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  data: PropTypes.shape({\r\n    msg: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","let intervalHandler = 0;\r\nlet target = 0;\r\nlet currentScroll = 0;\r\nlet step = 0;\r\nlet cont = 0;\r\n\r\n/**\r\n * Init Smooth Scroll\r\n */\r\nexport function initSS(newTarget) {\r\n  clearInterval(intervalHandler);\r\n  cont = 0;\r\n  target = newTarget;\r\n  currentScroll = document.documentElement.scrollTop;\r\n  step = (currentScroll - target) / 60;\r\n  intervalHandler = setInterval(runSS, 0);\r\n}\r\n\r\n/**\r\n * Cancel Smooth Scroll\r\n */\r\nexport function cancelSS() {\r\n  clearInterval(intervalHandler);\r\n}\r\n\r\nfunction runSS() {\r\n  let diff = step * cont;\r\n  window.scrollTo(0, currentScroll - diff);\r\n  if (cont === 60) clearInterval(intervalHandler);\r\n  cont++;\r\n}","import React from 'react'\r\nimport Icon from './Icon';\r\nimport { initSS } from '../js/smoothScroll';\r\n\r\nexport default function ToTopBtn() {\r\n  return (\r\n    <button id=\"to_top_btn\" onClick={() => initSS(0)} title=\"Volver arriba\">\r\n      <Icon name=\"top_arrow\" classes={['btn']} />\r\n    </button>\r\n  )\r\n}\r\n","let CITIES = undefined; // OpenWeatherMaps city (weather stations) list\r\n(async () => {\r\n  CITIES = await import(/* webpackChunkName: \"city_list\" */ '../apis/city.json');\r\n})();\r\n\r\n/* CITIES shape: \r\n[{\r\n    a: (number) // city id\r\n    b: (string) // city name\r\n    c: (string) // city country code (ISO 3166-2)\r\n  }, ...] */\r\n\r\nlet COUNTRIES = undefined;  // REST Countries country list\r\n(async () => {\r\n  COUNTRIES = await import(/* webpackChunkName: \"all_list\" */ '../apis/country.json');\r\n})();\r\n\r\n/* COUNTRIES shape:\r\n[{\r\n    d: (string) // city country code (ISO 3166-2)\r\n    e: (string) // country native name\r\n    f: (string) // country name translations\r\n  }, ...] */\r\n\r\nconst API = 'https://api.openweathermap.org/data/2.5/weather?';\r\nconst API_CITY_NAME_PREFIX = 'q=';\r\nconst API_CITY_ID_PREFIX = 'id=';\r\nconst API_OPTIONS = '&appid=b280c897878592322aafe56701248929&units=metric&lang=es';\r\n\r\nexport async function getPredictions(inputName) {\r\n  return await (() => {\r\n    let city = undefined;\r\n    let newList = [];\r\n    // Create prediction list (minimum of 3 characters typed)\r\n    if (inputName.length > 2) {\r\n      inputName = inputName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n      const TEST = new RegExp(' ' + inputName, 'i');\r\n      const RE_A = new RegExp('(.*)' + inputName, 'i');\r\n      const RE_B = new RegExp(inputName, 'i');\r\n      const RE_C = new RegExp(inputName + '(.*)', 'i');\r\n      // Maximum of 6 predictions\r\n      for (let i = 0; (i < 209579) && (newList.length < 6); i++) {\r\n        city = CITIES[i];\r\n        if (TEST.test(' ' + city.b)) {\r\n          if (inputName.length === city.b.length) // 100% match at the top of the list\r\n            newList.unshift({\r\n              start: RE_A.exec(city.b)[1],\r\n              match: RE_B.exec(city.b)[0],\r\n              finish: RE_C.exec(city.b)[1],\r\n              country: city.c, id: city.a\r\n            });\r\n          else // partial match\r\n            newList.push({\r\n              start: RE_A.exec(city.b)[1],\r\n              match: RE_B.exec(city.b)[0],\r\n              finish: RE_C.exec(city.b)[1],\r\n              country: city.c, id: city.a\r\n            });\r\n        }\r\n      }\r\n      return newList;\r\n    } // else\r\n    return [];\r\n  })();\r\n}\r\n\r\nexport async function getExtras(countryCode) {\r\n  for (let i = 0; i < 250; i++) {\r\n    if (COUNTRIES[i].d === countryCode) {\r\n      const ITEM = COUNTRIES[i];\r\n      return {\r\n        countryNameNative: ITEM.e,\r\n        countryName: ITEM.f.es\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getUserLocation() {\r\n  const RES = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=15d8e57eb4aa4015bb32a04d73b67b19');\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return `${RES_JSON.city}, ${RES_JSON.country_code2}`;\r\n  }\r\n}\r\n\r\nexport async function getWeather(inputName, option) {\r\n  let PREFIX = '';\r\n  if (option === 'name') PREFIX = API_CITY_NAME_PREFIX;\r\n  else if (option === 'id') PREFIX = API_CITY_ID_PREFIX;\r\n  const RES = await fetch(API + PREFIX + inputName + API_OPTIONS);\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return {\r\n      id: RES_JSON.id,\r\n      coord: { lat: RES_JSON.coord.lat, lon: RES_JSON.coord.lon },\r\n      countryCode: RES_JSON.sys.country,\r\n      weatherId: RES_JSON.weather[0].id,\r\n      desc: RES_JSON.weather[0].description,\r\n      icon: RES_JSON.weather[0].icon,\r\n      cityName: RES_JSON.name,\r\n      temp: Math.round(RES_JSON.main.temp),\r\n      tempMax: Math.round(RES_JSON.main.temp_max),\r\n      tempMin: Math.round(RES_JSON.main.temp_min),\r\n      timezone: RES_JSON.timezone,\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\nkey: '&appid=b280c897878592322aafe56701248929',\r\nunits: '&units=metric',\r\nlang: '&lang=es'\r\n */\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Card from './components/Card';\r\nimport Icon from './components/Icon';\r\nimport Prediction from './components/Prediction';\r\nimport Notification from './components/Notification';\r\nimport ToTopBtn from './components/ToTopBtn';\r\nimport { getPredictions, getUserLocation, getExtras, getWeather } from './js/getFromAPIs';\r\nimport { cancelSS } from './js/smoothScroll';\r\nimport { suc, alt, err, dbg } from './js/customConsole';\r\n\r\n/* const PRELOAD_CITIES = [\r\n  'Cairo,EG',             // africa\r\n  'Kingston,JM',          // america c\r\n  'Alaska,US',            // america n\r\n  'Amazonas,BR',          // america s\r\n  'McMurdo Station,AQ',   // antartida\r\n  'Tokyo,JP',             // asia\r\n  'Berlin,DE',            // europa\r\n  'Sydney,AU',            // oceania\r\n  'Cape Town,ZA',         // -africa\r\n  'Panama,PA',            // -america c\r\n  'Ottawa,CA',            // -america n\r\n  'Montevideo,UY',        // -america s\r\n  'Busan,KR',             // -asia\r\n  'Moscow,RU',            // -europa\r\n  'Wellington,NZ',        //- oceania\r\n]; */\r\n\r\nconst About = (lazy(() => (import(/* webpackChunkName: \"About\" */ './components/About'))));\r\nconst WeatherMaps = (lazy(() => (import(/* webpackChunkName: \"WeatherMaps\" */ './components/WeatherMaps'))));\r\n\r\nexport default class ThisWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      cardList: [],\r\n      predictionList: [],\r\n      notificationList: [],\r\n    };\r\n    this.inputBox = undefined;\r\n    this.predictionListBox = undefined;\r\n    this.toTopBtn = undefined;\r\n    this.currentFocus = -1;\r\n    this.inputKeyDown = this.inputKeyDown.bind(this);\r\n    this.inputChanged = this.inputChanged.bind(this);\r\n    this.fireSearch = this.fireSearch.bind(this);\r\n    this.stopSearchingLoop = this.stopSearchingLoop.bind(this);\r\n    this.addCard = this.addCard.bind(this);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.removeCard = this.removeCard.bind(this);\r\n    this.removeNotification = this.removeNotification.bind(this);\r\n    this.fireSearchFromPrediction = this.fireSearchFromPrediction.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    getUserLocation().then(res => {\r\n      if (res > 200)\r\n        err('Error al localizar el dispositivo (error ' + res + ')');\r\n      else {\r\n        dbg(`Dispositivo localizado...`);\r\n        this.addCard(res, 'name');\r\n      }\r\n    });\r\n    this.focusID('input_query');\r\n    this.inputBox = document.getElementById('input_query');\r\n    this.predictionListBox = document.getElementById('prediction_box');\r\n    this.toTopBtn = document.getElementById('to_top_btn');\r\n    document.addEventListener('click', e => {\r\n      if ((e.target !== this.inputBox) && (this.state.predictionList.length > 0))\r\n        this.resetPredictionList(e.target);\r\n    });\r\n    window.addEventListener('scroll', () => {\r\n      if (document.documentElement.scrollTop > 100) this.toTopBtn.style.transform = 'scale(1)';\r\n      else this.toTopBtn.style.transform = '';\r\n    });\r\n    window.addEventListener('wheel', () => cancelSS());\r\n  }\r\n\r\n  /**\r\n   * App functionality & utils\r\n   */\r\n\r\n  async inputKeyDown(e) {\r\n    // Current predictions displayed\r\n    let predListDOM = this.predictionListBox.getElementsByClassName('prediction');\r\n    if (e.keyCode === 40) { // key down\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction\r\n        this.currentFocus++;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 38) { // key up\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction        \r\n        this.currentFocus--;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 27) { // escape\r\n      // Clean the input\r\n      this.setState({ input: '', predictionList: [] });\r\n    } else if (e.keyCode === 13) { // enter\r\n      e.preventDefault();\r\n      this.resetPredictionList(e.target); // hide predlist while searching\r\n      if ((this.state.predictionList.length > 0) &&\r\n        (document.querySelector('.active_prediction') !== null)) {\r\n        // if there are predictions AND there is an active one, search that\r\n        const VAL = document.querySelector('.active_prediction input').value;\r\n        this.fireSearchFromPrediction(VAL);\r\n      } else {\r\n        // else, try to search based on input value\r\n        this.setState({ input: e.target.value });\r\n        this.fireSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  async inputChanged(e) {\r\n    this.resetPredictionList();\r\n    this.setState({\r\n      input: e.target.value,\r\n      predictionList: [],\r\n    });\r\n    const PREDS = await getPredictions(e.target.value);\r\n    this.setState({ predictionList: PREDS });\r\n  }\r\n\r\n  fireSearch(inputName, option) {\r\n    if (!this.isOnLine()) return; // if it's online, continue\r\n    if (inputName) // if there is an specific input (parameter)\r\n      this.addCard(inputName, option);\r\n    else if (this.state.input.length > 0) // else, if there is text in the input box\r\n      this.addCard(this.state.input, 'name');\r\n    this.focusID('input_query'); // if not, return focus to the input box\r\n  }\r\n\r\n  isOnLine() {\r\n    if (window.navigator.onLine) return true;\r\n    const MSG = 'Equipo offline';\r\n    this.addNotification(MSG, 'error');\r\n    err(MSG);\r\n    return false;\r\n  }\r\n\r\n  focusID(id) {\r\n    document.getElementById(id).focus();\r\n  }\r\n\r\n  stopSearchingLoop() {\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  stopUpdatingLoop(id) {\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.remove('loading');\r\n  }\r\n\r\n  /**\r\n   * Weather Card functionality\r\n   */\r\n\r\n  async addCard(inputName, option) {\r\n    document.getElementById('search_btn').classList.add('loading');\r\n    dbg(inputName + ': Consultando API...');\r\n    const DATA = await getWeather(inputName, option).catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = 'No se encontraron resulados';\r\n      this.addNotification(MSG, 'alert');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n    const FULL_NAME = DATA.cityName + ', ' + DATA.countryCode; // Complete name used for the card title\r\n\r\n    // Check if it already exists\r\n    if (this.state.cardList.length > 0) {\r\n      let exist = false;\r\n      this.state.cardList.forEach(card => {\r\n        // id correspondant to 'weather station id',\r\n        // city and country name can be the same\r\n        if (DATA.id === card.data.id) return exist = true;\r\n      });\r\n      if (exist) {\r\n        const MSG = 'Resultado ya incluido';\r\n        this.addNotification(MSG, 'info');\r\n        alt(FULL_NAME + ': ' + MSG);\r\n        this.stopSearchingLoop();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add the card\r\n    const EXTRAS = await getExtras(DATA.countryCode); // get extra data\r\n    this.setState({\r\n      cardList: [...this.state.cardList, { fullName: FULL_NAME, data: DATA, extras: EXTRAS }],\r\n      input: '', // Clean input box\r\n      predictionList: [] // Clean predictions\r\n    });\r\n    this.stopSearchingLoop();\r\n    dbg(inputName + ' --> ' + FULL_NAME + '...');\r\n    suc(FULL_NAME + ': Agregado');\r\n  }\r\n\r\n  async updateCard(id, fullName) {\r\n    if (!this.isOnLine()) return;\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.add('loading');\r\n    dbg(fullName + ': Actualizando...');\r\n    const DATA = await getWeather(fullName, 'name').catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = fullName + ': Error al actualizar';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(fullName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n\r\n    // Find card index in list\r\n    let i = undefined;\r\n    this.state.cardList.forEach(card => {\r\n      if (card.data.id === id) i = this.state.cardList.indexOf(card);\r\n    });\r\n\r\n    // Update card\r\n    let newCardList = this.state.cardList;\r\n    newCardList[i].data = DATA;\r\n    this.setState({ cardList: newCardList });\r\n    const MSG = fullName + ': Actualizado';\r\n    this.addNotification(MSG, 'success');\r\n    this.stopUpdatingLoop(id);\r\n    suc(MSG);\r\n  }\r\n\r\n  removeCard(id, fullName) {\r\n    this.setState(prevState => ({\r\n      cardList: prevState.cardList.filter(item => item.data.id !== id)\r\n    }));\r\n    suc(fullName + ': Eliminado');\r\n  }\r\n\r\n  /**\r\n   * Notification functionality\r\n   */\r\n\r\n  addNotification(msg, type) {\r\n    let newNotList = this.state.notificationList;\r\n    if (newNotList.length >= 6) newNotList.shift();\r\n    this.setState({\r\n      notificationList: [...newNotList, { msg: msg, type: type, id: new Date().getTime() }]\r\n    });\r\n  }\r\n\r\n  removeNotification(id) {\r\n    this.setState(prevState => ({\r\n      notificationList: prevState.notificationList.filter(item => item.id !== id)\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Prediction functionality\r\n   */\r\n\r\n  fireSearchFromPrediction(value) {\r\n    this.resetPredictionList();\r\n    this.fireSearch(value, 'id');\r\n  }\r\n\r\n  addActivePrediction(predListDOM) {\r\n    // Actually add/set\r\n    this.removeActivePrediction(predListDOM);\r\n    if (this.currentFocus >= predListDOM.length) this.currentFocus = 0;\r\n    if (this.currentFocus < 0) this.currentFocus = (predListDOM.length - 1);\r\n    if (predListDOM.length) predListDOM[this.currentFocus].classList.add('active_prediction');\r\n  }\r\n\r\n  removeActivePrediction(predListDOM) {\r\n    for (var i = 0; i < predListDOM.length; i++)\r\n      predListDOM[i].classList.remove('active_prediction');\r\n  }\r\n\r\n  resetPredictionList() {\r\n    this.currentFocus = -1;\r\n    this.setState({ predictionList: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <header>\r\n          <div id=\"search_box\" predvisible={this.state.predictionList.length > 0 ? 'true' : 'false'}>\r\n            <button id=\"search_btn\"\r\n              className=\"loading_box loading\"\r\n              title=\"Buscar\"\r\n              onClick={this.fireSearch} >\r\n              <Icon name=\"search\" classes={['btn', 'perma_active']} viewbox=\"0 0 48 48\" />\r\n              <Icon name=\"loading_loop\" />\r\n            </button>\r\n            <input id=\"input_query\"\r\n              type=\"text\"\r\n              value={this.state.input}\r\n              placeholder=\"Buscar una cuidad\"\r\n              onKeyDown={e => this.inputKeyDown(e)}\r\n              onChange={e => this.inputChanged(e)}\r\n              onFocus={e => this.inputChanged(e)}\r\n              autoComplete=\"off\"\r\n              alt=\"Buscar una cuidad\" />\r\n            <div id=\"prediction_box\" >\r\n              {this.state.predictionList.map(item => (\r\n                <Prediction\r\n                  data={item}\r\n                  clickHandler={this.fireSearchFromPrediction}\r\n                  key={item.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/this.weather/\">Inicio</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/weathermaps\">Mapas meteorologicos</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/about\">Acerca de</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <Route exact path=\"/this.weather/\" render={props => (\r\n            <div id=\"main_content\">\r\n              <div id=\"card_box\">\r\n                {this.state.cardList.map(item => (\r\n                  <Card\r\n                    fullName={item.fullName}\r\n                    data={item.data}\r\n                    extras={item.extras}\r\n                    update={this.updateCard}\r\n                    remove={this.removeCard}\r\n                    key={item.data.id} />\r\n                ))}\r\n              </div>\r\n              <div id=\"notification_box\">\r\n                <div id=\"notification_content\">\r\n                  {this.state.notificationList.map(item => (\r\n                    <Notification\r\n                      data={item}\r\n                      remove={this.removeNotification}\r\n                      key={item.id} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )} />\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/weathermaps\" component={WeatherMaps} />\r\n          </Suspense>\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/about\" component={About} />\r\n          </Suspense>\r\n          <div id=\"to_top_btn_box\">\r\n            <ToTopBtn />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div id=\"footer_content\">\r\n            <div id=\"brand_box\">\r\n              <a id=\"imagotipo\" href=\"http://wikarot.github.io/this.weather\" title=\"this.weather\">\r\n                <div className=\"isotipo icon_small\">\r\n                  <span>\r\n                    <img src=\"favicon-16x16.png\" alt=\"Icono de this.weather\" />\r\n                  </span>\r\n                </div>\r\n                <h1 id=\"logotipo\"><em>this</em>.weather</h1>\r\n              </a>\r\n            </div>\r\n            <div id=\"cc\">\r\n              <span>\r\n                <p>Copyright 2019 <a href=\"https://github.com/Wikarot\">Leo de S.L.F</a></p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n        <div id=\"weather_maps_container\" style={{ display: 'none' }} >\r\n          <canvas id=\"weather_map_0\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_1\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_2\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_3\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_4\" width=\"512\" height=\"256\" />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// MS_ACC b280c897878592322aafe56701248929\r\n// GG_Acc cdd659df7dc048884575b9451ddf1330\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport ThisWeather from './ThisWeather';\nimport './sass/main.css';\nimport { fcy } from './js/customConsole';\n\nfcy('Welcome to this.weather!');\n\nrender(<ThisWeather />, document.getElementById('root'));\n","import { Scene } from 'three';\r\n\r\nexport const NEAR = 1; // near, posible visible distance from camera\r\nexport const FAR = 5; // far, visible distance from camera\r\nexport const Z_OFF = 3; // camera offset from 0 (Z axis)\r\nexport let city_labels = []; // id, cityName, label, dot, line, x, y\r\nexport const SPH_RAD = 0.825; // sphere radius\r\nexport const RES = 512; // weather map resolution\r\n\r\nexport function removeFromCityLabels(id) {\r\n  city_labels = city_labels.filter(item => item.id !== id); // remove it from the \"list\"\r\n}\r\n\r\nexport let initDone = false;\r\nexport function setInitDone() {\r\n  // init makes a callback when run the last line\r\n  // and calls for initWeatherMapsObj (camera, renderer and controls)\r\n  initDone = true;\r\n}\r\n\r\nconst SCENE = new Scene();\r\n\r\nexport default SCENE;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Icon(props) {\r\n  let classes = ['icon'];\r\n  let viewbox = '0 0 24 24';\r\n\r\n  if (props.size !== undefined) classes.push('icon_' + props.size);\r\n  else classes.push('icon_small');\r\n  if (props.classes !== undefined) classes.push(...props.classes);\r\n  if (props.viewbox !== undefined) viewbox = props.viewbox;\r\n\r\n  // Special case for \"loading loop\"\r\n  if (props.name === 'loading_loop') classes.push('icon_loading');\r\n\r\n\r\n  return (\r\n    <div className={classes.join(' ')} >\r\n      <span>\r\n        <svg viewBox={viewbox} >\r\n          <use xlinkHref={'#' + props.name}></use>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  classes: PropTypes.arrayOf(PropTypes.string),\r\n  viewbox: PropTypes.string,\r\n  size: PropTypes.string,\r\n}\r\n"],"sourceRoot":""}