{"version":3,"sources":["svg/place.svg","svg/close.svg","svg/refresh.svg","svg/search.svg","js/newConsole.js","components/Card.js","components/Prediction.js","components/Notification.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","DD","ext","console","msg","log","alt","err","not","dbg","fcy","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","updating","updateTimer","undefined","t","Math","round","random","autoUpdate","clearInterval","_this2","setState","setInterval","fullName","callForUpdate","handleUpdate","handleRemove","DATA","data","EXTRAS","extras","react_default","a","createElement","className","id","title","cityName","countryName","countryNameNative","countryCode","src","place","temp","temp_max","temp_min","desc","icon","hum","cloud","wind","onClick","bind","refresh","callForRemove","close","Component","Prediction","value","name","country","Notification","timeout","waitAndRemove","setTimeout","time","API_WEATHER","PRELOAD_CITIES","App","input","inputTimer","inputBox","cardList","predictionList","notificationList","forEach","item","addCard","document","getElementById","focusID","e","_this3","clearTimeout","target","typingTimeout","getPredictions","focus","inputName","getWeather","MSG","addNotification","FULL_NAME","exist","length","card","getExtras","newCardList","push","i","_this4","indexOf","_this5","concat","toConsumableArray","slice","newNotificationList","Date","getTime","_this6","URL","fetch","RES","status","json","RES_JSON","clouds","all","sys","weather","description","main","humidity","speed","ALL_LIST","alpha2Code","ITEM","translations","es","nativeName","timeZone","timezones","newList","C","CITY_LIST","EX","join","RegExp","test","n","c","NEW_PREDICTION_LIST","_this7","Fragment","type","list","placeholder","onChange","inputChanged","onKeyUp","keyCode","fireSearch","autoComplete","map","Prediction_Prediction","key","search","Card_Card","updateCard","removeCard","Notification_Notification","removeNotification","href","blank","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.ce89e212.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/place.a67750cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.ea7850ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh.d4f62501.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.71d39e57.svg\";","const FORMAT = '%c%s%s ';\r\nconst DD = ' » ';\r\n\r\n// EXIT\r\nexport const ext = console.ext = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: GreenYellow; background-color: DarkGreen;',\r\n    DD, msg);\r\n}\r\n// ALERT\r\nexport const alt = console.alt = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: Black; background-color: Gold;',\r\n    DD, msg);\r\n}\r\n// ERROR\r\nexport const err = console.err = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: MistyRose; background-color: DarkRed;',\r\n    DD, msg);\r\n}\r\n// NOTIFICATION\r\nexport const not = console.not = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: LightCyan; background-color: DarkSlateGray;',\r\n    DD, msg);\r\n}\r\n// DEBUG\r\nexport const dbg = console.dbg = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: SkyBlue; background-color: MidnightBlue;',\r\n    DD, msg);\r\n}\r\n// FANCY\r\nexport const fcy = console.fcy = function (msg) {\r\n  console.log('%c%s',\r\n    'color: #33cfff;' +\r\n    'background-color: rgba(51, 207, 255, .1);' +\r\n    'border: 1px solid #33cfff;' +\r\n    'border-radius: 2px; padding: 6px 9px;' +\r\n    'text-shadow: 0 0 2px rgba(255, 255, 255, .8);' +\r\n    '',\r\n    msg);\r\n}","import React, { Component } from 'react'\r\nimport place from '../svg/place.svg';\r\nimport close from '../svg/close.svg';\r\nimport refresh from '../svg/refresh.svg';\r\nimport { not } from '../js/newConsole';\r\n\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            updating: 'false',\r\n            updateTimer: undefined,\r\n            /* time: undefined,\r\n            timeTimer: undefined, */\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Update timing, around 15min.\r\n        const t = (14 * 60000) + Math.round(Math.random() * 120000);\r\n        this.autoUpdate(t);\r\n        /* this.setState({ timeTimer: setInterval(this.getTime.bind(this), 1000) }); */\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.updateTimer);\r\n        /* clearInterval(this.state.timeTimer); */\r\n    }\r\n\r\n    /* getTime() {\r\n        let hh = new Date().getHours();\r\n        let mm = new Date().getMinutes();\r\n        let ss = new Date().getSeconds();\r\n        if (hh < 10) { hh = '0' + hh }\r\n        if (mm < 10) { mm = '0' + mm }\r\n        if (ss < 10) { ss = '0' + ss }\r\n        this.setState({\r\n            time: (hh + ':' + mm + ':' + ss)\r\n        });\r\n    } */\r\n\r\n    autoUpdate(t) {\r\n        this.setState({\r\n            updateTimer: setInterval(() => {\r\n                not(this.props.fullName + ': Actualizacion automatica...');\r\n                this.callForUpdate();\r\n            }, t)\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.updating === 'true') {\r\n            this.setState({ updating: 'false' });\r\n        }\r\n    }\r\n\r\n    callForUpdate() {\r\n        this.setState({ updating: 'true' });\r\n        this.props.handleUpdate(this.props.fullName);\r\n    }\r\n\r\n    callForRemove() {\r\n        this.props.handleRemove(this.props.fullName);\r\n    }\r\n\r\n    render() {\r\n        const DATA = this.props.data;\r\n        const EXTRAS = this.props.extras;\r\n        return (\r\n            <article className=\"card\" id={this.props.fullName}>\r\n                <div className=\"content\">\r\n                    <div className=\"head_box\"\r\n                        title={\r\n                            DATA.cityName + ', ' +\r\n                            EXTRAS.countryName + ' (' +\r\n                            EXTRAS.countryNameNative + ')'\r\n                        }\r\n                    >\r\n                        <h3 className=\"name\" >\r\n                            {DATA.cityName}, {DATA.countryCode}\r\n                        </h3>\r\n                        <div className=\"place_div\">\r\n                            <span>\r\n                                <img\r\n                                    className=\"place\"\r\n                                    src={place}\r\n                                    alt=\"Ubicacion\"\r\n                                    title=\"Ubicacion\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"flag_div\">\r\n                            <span>\r\n                                <img\r\n                                    className=\"flag\"\r\n                                    src={'https://www.countryflags.io/' + DATA.countryCode + '/shiny/16.png'}\r\n                                    alt={'Bandera de ' + this.props.fullName}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"temp_box\">\r\n                        <p className=\"temp\">\r\n                            {Math.round(DATA.temp)}°\r\n                        </p>\r\n                        <p className=\"temp_max\">\r\n                            <span>Max.</span>{Math.round(DATA.temp_max)}°\r\n                        </p>\r\n                        <p className=\"temp_min\">\r\n                            <span>Min.</span>{Math.round(DATA.temp_min)}°\r\n                        </p>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"desc_box\">\r\n                        <p className=\"desc\">\r\n                            {DATA.desc}\r\n                        </p>\r\n                        <div>\r\n                            <span>\r\n                                <img\r\n                                    src={\r\n                                        'https://res.cloudinary.com/wikarot/image/upload/v1559246003/weathericons/' +\r\n                                        DATA.icon + '.png'\r\n                                    }\r\n                                    alt={DATA.desc}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"others_box\">\r\n                        <div className=\"hum\">\r\n                            <p>Humedad</p>\r\n                            <span>{DATA.hum}%</span>\r\n                        </div>\r\n                        <div className=\"cloud\">\r\n                            <p>Nubosidad</p>\r\n                            <span>{DATA.cloud}%</span>\r\n                        </div>\r\n                        <div className=\"wind\">\r\n                            <p>Viento</p>\r\n                            <span>{DATA.wind} km/h</span>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"control_box\">\r\n                        {/* <div>\r\n                            <span className=\"time\" aux=\"{this.state.time}\">\r\n                                \r\n                            </span>\r\n                        </div> */}\r\n                        <button className=\"refresh\" onClick={this.callForUpdate.bind(this)}>\r\n                            <span>\r\n                                <img src={refresh} alt=\"Actualizar\" title=\"Actualizar\" />\r\n                            </span>\r\n                        </button>\r\n                        <button className=\"close\" onClick={this.callForRemove.bind(this)}>\r\n                            <span>\r\n                                <img src={close} alt=\"Cerrar\" title=\"Cerrar\" />\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Prediction extends Component {\r\n  render() {\r\n    return (\r\n      <option\r\n        value={this.props.data.name + ', ' + this.props.data.country}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeout: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitAndRemove();\r\n  }\r\n\r\n  waitAndRemove() {\r\n    this.setState({\r\n      timeout: setTimeout(() => {\r\n        this.props.handleRemove(this.props.data.time);\r\n      }, 2500)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>{this.props.data.msg}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Card from './components/Card';\nimport Prediction from './components/Prediction';\nimport { ext, alt, err, dbg } from './js/newConsole';\nimport search from './svg/search.svg';\nimport CITY_LIST from './apis/city.list.min.json';\nimport ALL_LIST from './apis/all.json'\nimport Notification from './components/Notification';\n\nconst API_WEATHER = {\n  api: 'http://api.openweathermap.org/data/2.5/weather?q=',\n  key: '&appid=cdd659df7dc048884575b9451ddf1330',\n  units: '&units=metric',\n  lang: '&lang=es'\n};\nconst PRELOAD_CITIES = [\n  'Cairo,EG',             // africa\n  'Kingston,JM',          // america c\n  'Alaska,US',            // america n\n  'Amazonas,BR',          // america s\n  'McMurdo Station,AQ',   // antartida\n  'Tokyo,JP',             // asia\n  'Berlin,DE',            // europa\n  'Sydney,AU',            // oceania\n  /* 'Cape Town,ZA',         // -africa\n  'Panama,PA',            // -america c\n  'Ottawa,CA',            // -america n\n  'Montevideo,UY',        // -america s\n  'Busan,KR',             // -asia\n  'Moscow,RU',            // -europa\n  'Wellington,NZ',        //- oceania */\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      inputTimer: 0,\n      inputBox: undefined,\n      cardList: [],\n      predictionList: [],\n      notificationList: [],\n    }\n  }\n\n  /* BUILT-IN */\n  componentWillMount() {\n    PRELOAD_CITIES.forEach(item => {\n      this.addCard(item);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({ inputBox: document.getElementById('input') });\n    this.focusID('input');\n  }\n\n  /* UI-UX */\n  inputChanged(e) {\n    // Clear typing timer\n    if (this.state.inputTimer) clearTimeout(this.state.inputTimer);\n    // Start typing timer\n    this.setState({\n      input: e.target.value,\n      predictionList: [],\n      typingTimeout: setTimeout(() => {\n        this.getPredictions(this.state.input);\n      }, 0)\n    });\n  }\n\n  fireSearch() {\n    if (this.state.input !== '') this.addCard(this.state.input);\n    else alt('Nada para buscar :c');\n    this.focusID('input');\n  }\n\n  focusID(id) {\n    document.getElementById(id).focus();\n  }\n\n  /* CARD */\n  async addCard(inputName) {\n    dbg(inputName + ': Consultando API...');\n    const DATA = await this.getWeather(inputName);\n    // Manual catch error\n    if (DATA > 200) {\n      const MSG = 'Cuidad no encontrada';\n      this.addNotification(MSG);\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\n      return;\n    }\n    // Possitive result\n    const FULL_NAME = DATA.cityName + ',' + DATA.countryCode;\n    dbg(inputName + ' --> ' + FULL_NAME + '...');\n    // Check if exists\n    let exist = false;\n    if (this.state.cardList.length > 0) {\n      this.state.cardList.forEach(card => {\n        if (FULL_NAME === card.fullName) { exist = true; }\n        if (exist) return;\n      });\n      if (exist) {\n        const MSG = 'Cuidad incluida';\n        this.addNotification(MSG);\n        alt(FULL_NAME + ': ' + MSG);\n        return;\n      }\n    }\n    // Add the card\n    const EXTRAS = await this.getExtras(DATA.countryCode);\n    let newCardList = this.state.cardList;\n    newCardList.push({ fullName: FULL_NAME, data: DATA, extras: EXTRAS });\n    this.setState({ cardList: newCardList, input: '', predictionList: [] });\n    this.focusID('input');\n    ext(FULL_NAME + ': Agregado');\n  }\n\n  async updateCard(fullName) {\n    dbg(fullName + ': Actualizando...');\n    const DATA = await this.getWeather(fullName);\n    // Manual catch error\n    if (DATA > 200) {\n      const MSG = fullName + ': No se ha podido actualizar';\n      this.addNotification(MSG);\n      err(MSG + ' (error ' + DATA + ')');\n      return;\n    }\n    // Find card index\n    let i = undefined;\n    this.state.cardList.forEach(card => {\n      if (card.fullName === fullName) {\n        i = this.state.cardList.indexOf(card);\n      }\n    });\n    // Update card\n    const EXTRAS = await this.getExtras(DATA.countryCode);\n    let newCardList = this.state.cardList;\n    newCardList[i] = { fullName: fullName, data: DATA, extras: EXTRAS };\n    this.setState({ cardList: newCardList });\n    ext(fullName + ': Actualizado');\n  }\n\n  removeCard(fullName) {\n    // Find card index\n    let i = undefined;\n    this.state.cardList.forEach(card => {\n      if (card.fullName === fullName) {\n        i = this.state.cardList.indexOf(card);\n      }\n    });\n    // Update card list\n    let newCardList = this.state.cardList;\n    newCardList = [\n      ...newCardList.slice(0, i),\n      ...newCardList.slice(i + 1)\n    ];\n    this.setState({ cardList: newCardList });\n    this.focusID('input');\n    ext(fullName + ': Eliminado');\n  }\n\n  /* NOTIFICATION */\n  addNotification(msg) {\n    let newNotificationList = this.state.notificationList;\n    newNotificationList.push({ msg: msg, time: new Date().getTime() });\n    this.setState({ notificationList: newNotificationList });\n  }\n\n  removeNotification(time) {\n    // Find card index\n    let i = undefined;\n    this.state.notificationList.forEach(item => {\n      if (item.time === time) i = this.state.notificationList.indexOf(item);\n    });\n    // Update card list\n    let newNotificationList = this.state.notificationList;\n    newNotificationList = [\n      ...newNotificationList.slice(0, i),\n      ...newNotificationList.slice(i + 1)\n    ];\n    this.setState({ notificationList: newNotificationList });\n  }\n\n  /* DATA */\n  async getWeather(inputName) {\n    const URL = (\n      API_WEATHER.api + inputName + API_WEATHER.key +\n      API_WEATHER.units + API_WEATHER.lang\n    );\n    const RES = await fetch(URL);\n    if (RES.status > 200) return RES.status;\n    else {\n      const RES_JSON = await RES.json();\n      return {\n        cloud: RES_JSON.clouds.all,\n        countryCode: RES_JSON.sys.country,\n        desc: RES_JSON.weather[0].description,\n        hum: RES_JSON.main.humidity,\n        icon: RES_JSON.weather[0].icon,\n        cityName: RES_JSON.name,\n        temp: Math.round(RES_JSON.main.temp),\n        temp_max: Math.round(RES_JSON.main.temp_max),\n        temp_min: Math.round(RES_JSON.main.temp_min),\n        wind: Math.round(RES_JSON.wind.speed * 3.6)\n      };\n    }\n  }\n\n  async getExtras(countryCode) {\n    for (let i = 0; i < 250; i++) {\n      if (ALL_LIST[i].alpha2Code === countryCode) {\n        const ITEM = ALL_LIST[i];\n        return {\n          countryName: ITEM.translations.es,\n          countryNameNative: ITEM.nativeName,\n          timeZone: ITEM.timezones[0]\n        }\n      }\n    }\n  }\n\n  async getPredictions(inputName) {\n    const NEW_PREDICTION_LIST = await (() => {\n      let newList = [];\n      // Create prediction list (minimum of 3 characters typed)\n      if (inputName.length > 2) {\n        // Search on city list (local API) & Maximum of 6 predictions\n        for (let i = 0; i < 209579 && newList.length < 6; i++) {\n          const C = CITY_LIST[i];\n          // RegExp to test\n          const EX = ['\\\\b', inputName, '\\\\.*'].join('');\n          const RE = new RegExp(EX, 'i');\n          if (RE.test(C.n)) newList.push({ name: C.n, country: C.c });\n        }\n        return newList;\n      }\n      return [];\n    })();\n    this.setState({ predictionList: NEW_PREDICTION_LIST });\n  }\n\n  render() {\n    return (\n      <>\n        <header>\n          <div id=\"search_box\">\n            <input id=\"input\" type=\"text\" list=\"prediction_box\"\n              value={this.state.input} placeholder=\"Buscar una cuidad\"\n              onChange={e => this.inputChanged(e)}\n              onKeyUp={e => { if (e.keyCode === 13) this.fireSearch() }}\n              autoComplete=\"off\" />\n            <datalist id=\"prediction_box\">\n              {this.state.predictionList.map(item => (\n                <Prediction\n                  data={item}\n                  key={this.state.predictionList.indexOf(item)}\n                />\n              ))}\n            </datalist>\n            <button id=\"search\" onClick={this.fireSearch.bind(this)}>\n              <span>\n                <img src={search} alt=\"Buscar\" title=\"Buscar\" />\n              </span>\n            </button>\n          </div>\n        </header>\n        <main>\n          <section id=\"card_box\" >\n            {this.state.cardList.map(item => (\n              <Card\n                fullName={item.fullName}\n                data={item.data}\n                extras={item.extras}\n                key={this.state.cardList.indexOf(item)}\n                handleUpdate={this.updateCard.bind(this)}\n                handleRemove={this.removeCard.bind(this)}\n              />\n            ))}\n          </section>\n          <div id=\"notification_box\">\n            {this.state.notificationList.map(item => (\n              <Notification\n                data={item}\n                key={item.time}\n                handleRemove={this.removeNotification.bind(this)}\n              />\n            ))}\n          </div>\n        </main>\n        <footer>\n          <div id=\"footer_box\">\n            <a href=\"http://wikarot.github.io/this.weather\">\n              <h1><span>this</span>.Weather( );</h1>\n            </a>\n            <div>\n              <span>\n                <p>Copyright (c) 2019 - <a href=\"https://github.com/Wikarot\"\n                  blank=\"null\">Wikarot</a></p>\n              </span>\n            </div>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// AUX_MS_ACC b280c897878592322aafe56701248929\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/index.css';\nimport App from './App';\nimport { fcy } from './js/newConsole';\n\nfcy('Welcome to this.weather!');\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}