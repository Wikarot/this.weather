{"version":3,"sources":["components/Card.js","components/Prediction.js","components/Notification.js","js/smoothScroll.js","components/ToTopBtn.js","js/getFromAPIs.js","ThisWeather.js","index.js","js/customConsole.js","js/threeStuffUtils.js","components/Icon.js"],"names":["H","RES","DOT_GEO","SphereBufferGeometry","DOT_MAT","MeshBasicMaterial","transparent","opacity","precision","LINE_MAT","LineBasicMaterial","fog","color","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","timeTimer","undefined","updateTimer","id","data","iconId","icon","weatherId","update","bind","assertThisInitialized","remove","createTag","_this2","getTime","city_labels","map","item","indexOf","setState","setInterval","document","getElementById","classList","clearInterval","OFFSET","timezone","OFFSET_F","Math","floor","mm_off","hh","Date","getUTCHours","mm","getUTCMinutes","MTX","Matrix4","_this$props$data$coor","coord","lat","lon","makeRotationFromEuler","Euler","THREE_MATH","degToRad","DOT","Mesh","name","position","set","SPH_RAD","applyMatrix4","LINE_GEO","Geometry","vertices","push","Vector3","LINE","Line","SCENE","add","X","Y","cityName","label","dot","line","x","y","fullName","I","removeFromCityLabels","react_default","a","createElement","className","rotated","title","extras","countryNameNative","src","countryCode","alt","countryName","temp","tempMax","tempMin","desc","Icon","classes","onClick","Component","Prediction","predictionClicked","clickHandler","_this$props$data","start","match","finish","country","type","value","style","display","Notification","iconWord","waitAndRemove","setTimeout","msg","intervalHandler","target","currentScroll","step","cont","runSS","diff","window","scrollTo","ToTopBtn","newTarget","documentElement","scrollTop","CITIES","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","__webpack_require__","e","then","t","sent","stop","COUNTRIES","_callee2","_context2","API","API_CITY_NAME_PREFIX","API_CITY_ID_PREFIX","API_OPTIONS","getPredictions","_x","_getPredictions","apply","arguments","_callee3","inputName","_context3","city","newList","length","replace","TEST","RegExp","RE_A","RE_B","RE_C","i","test","b","unshift","exec","c","abrupt","getExtras","_x2","_getExtras","_callee4","ITEM","_context4","d","f","es","getUserLocation","_getUserLocation","_callee5","RES_JSON","_context5","fetch","status","json","concat","country_code2","getWeather","_x3","_x4","_getWeather","_callee6","option","PREFIX","_context6","sys","weather","description","round","main","temp_max","temp_min","About","lazy","WeatherMaps","ThisWeather","input","cardList","predictionList","notificationList","inputBox","predictionListBox","toTopBtn","currentFocus","inputKeyDown","inputChanged","fireSearch","stopSearchingLoop","addCard","updateCard","removeCard","removeNotification","fireSearchFromPrediction","res","err","dbg","focusID","addEventListener","resetPredictionList","transform","predListDOM","getElementsByClassName","keyCode","preventDefault","addActivePrediction","PREDS","querySelector","VAL","isOnLine","navigator","onLine","MSG","addNotification","focus","catch","DATA","FULL_NAME","exist","forEach","card","EXTRAS","toConsumableArray","suc","stopUpdatingLoop","_this3","newCardList","prevState","filter","newNotList","shift","removeActivePrediction","_this4","react_router_dom","predvisible","viewbox","placeholder","onKeyDown","onChange","onFocus","autoComplete","Prediction_Prediction","key","to","react_router","exact","path","render","Card_Card","Notification_Notification","react","fallback","component","href","width","height","Promise","resolve","module","fcy","ThisWeather_ThisWeather","r","__webpack_exports__","not","RAD","DD","console","log","NEAR","FAR","Z_OFF","initDone","setInitDone","three__WEBPACK_IMPORTED_MODULE_0__","Scene","size","c_Users_Leo_Google_Drive_Proyectos_Proyectos_Visual_Studio_Code_Website_this_weather_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","join","viewBox","xlinkHref"],"mappings":"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","file":"static/js/main.9d52d9c2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  SphereBufferGeometry, MeshBasicMaterial, LineBasicMaterial, Matrix4,\r\n  Euler, Math as THREE_MATH, Vector3, Geometry, Line, Mesh\r\n} from 'three';\r\nimport Icon from './Icon';\r\nimport SCENE, { city_labels, removeFromCityLabels, SPH_RAD, RES } from '../js/threeStuffUtils';\r\n//import { not } from '../js/customConsole';\r\n\r\n//const TIME_TO_UPDATE = 20 * 60000; // ms\r\nconst H = RES / 2;\r\nconst DOT_GEO = new SphereBufferGeometry(0.001, 3, 2);\r\nconst DOT_MAT = new MeshBasicMaterial({ transparent: true, opacity: 0, precision: \"lowp\" });\r\nconst LINE_MAT = new LineBasicMaterial({ fog: false, color: '#b4b4b4' });\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: '',\r\n      timeTimer: undefined,\r\n      updateTimer: undefined,\r\n    };\r\n    this.id = this.props.data.id; // city id\r\n    this.iconId = this.props.data.icon; // icon code\r\n    this.weatherId = this.props.data.weatherId; // weather code (more speciffic than icon code)\r\n    /* if (\r\n      (this.props.data.weatherId > 701 &&\r\n        this.props.data.weatherId < 741) ||\r\n      (this.props.data.weatherId > 741 &&\r\n        this.props.data.weatherId < 781)\r\n    ) {\r\n      this.iconId = '50'; // neither sun nor moon\r\n    } else */\r\n    if (this.props.data.weatherId === 781) this.iconId = '50tornado'; //tornado\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.createTag = this.createTag.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTime();\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    if (I < 0) this.createTag();\r\n    this.setState({\r\n      timeTimer: setInterval(() => {\r\n        this.getTime()\r\n      }, 60000),\r\n      /* updateTimer: setInterval(() => {\r\n        not(this.props.fullName + ': Actualización automática...');\r\n        this.update();\r\n      }, TIME_TO_UPDATE) */\r\n    });\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  getTime() {\r\n    const OFFSET = ((this.props.data.timezone / 60) / 60); // timezone = seconds --> OFFSET hours\r\n    const OFFSET_F = Math.floor(OFFSET); // Integer from OFFSET (the offset can be XX hours AND 30 minutes in some cases)\r\n    let mm_off = 0;\r\n    if (OFFSET_F !== OFFSET) mm_off = Math.floor((OFFSET - OFFSET_F) * 60);\r\n    let hh = new Date().getUTCHours() + OFFSET_F;\r\n    let mm = new Date().getUTCMinutes() + mm_off;\r\n    if (mm > 59) { hh++; mm -= 60; }\r\n    if (hh > 23) hh -= 24;\r\n    if (hh < 0) hh = 24 + hh;\r\n    if (hh < 10 && hh >= 0) hh = '0' + hh;\r\n    if (mm < 10) mm = '0' + mm;\r\n    this.setState({ time: (hh + ':' + mm) });\r\n  }\r\n\r\n  createTag() {\r\n    // Rotation matrix\r\n    const MTX = new Matrix4();\r\n    const { lat, lon } = this.props.data.coord;\r\n    MTX.makeRotationFromEuler(new Euler(\r\n      THREE_MATH.degToRad(-lat), // X axe, horizontal rotation\r\n      THREE_MATH.degToRad(+lon), // Y axe, Vectical rotation\r\n      0, 'YXZ'));\r\n    // Invisible dot to hold the label position\r\n    const DOT = new Mesh(DOT_GEO, DOT_MAT);\r\n    DOT.name = this.id;\r\n    DOT.position.set(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX);\r\n    const LINE_GEO = new Geometry();\r\n    LINE_GEO.vertices.push(\r\n      new Vector3(0, 0, 0),\r\n      new Vector3(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX));\r\n    const LINE = new Line(LINE_GEO, LINE_MAT);\r\n\r\n    // Add line and dot to global scene\r\n    SCENE.add(DOT, LINE);\r\n    // Coordinates to print the label on \"flat\" map\r\n    const X = (180 + lon) / 360 * RES;\r\n    const Y = -(lat * (H / 180)) + H * 0.5;\r\n    // Add a city name label to labels public container\r\n    city_labels.push({\r\n      id: this.id, // 'city_label_' + card id\r\n      cityName: this.props.data.cityName, // label text content\r\n      label: undefined,\r\n      dot: DOT,  // the 3D position holder object\r\n      line: LINE, // a line from the center of the earth to the dot\r\n      x: X, // 2D map X coordinate\r\n      y: Y // 2D map Y coordinate\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.props.update(this.id, this.props.fullName);\r\n  }\r\n\r\n  remove() {\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    const DOT = city_labels[I].dot;\r\n    const LINE = city_labels[I].line;\r\n    SCENE.remove(DOT, LINE); // remove it from the scene\r\n    removeFromCityLabels(this.id);\r\n    //document.getElementById('city_label_' + this.id).remove(); // remove it from the DOM\r\n    this.props.remove(this.id, this.props.fullName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id={'card_' + this.id}\r\n        className=\"card\"\r\n        rotated={this.state.rotated} >\r\n        <div className=\"card_header\"\r\n          title={\r\n            this.props.fullName + ' (' +\r\n            this.props.extras.countryNameNative + ')'}>\r\n          <h2 className=\"name\"><em>{this.props.fullName}</em></h2>\r\n          <div className=\"icon_small\">\r\n            <span>\r\n              <img\r\n                src={'https://www.countryflags.io/' + this.props.data.countryCode + '/shiny/16.png'}\r\n                alt={'Bandera de ' + this.props.extras.countryName}\r\n                title={'Bandera de ' + this.props.extras.countryName} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"temp\">\r\n          <p className=\"temp_current\">{this.props.data.temp}°</p>\r\n          <p className=\"temp_max\"><span>Máx</span>{this.props.data.tempMax}°</p>\r\n          <p className=\"temp_min\"><span>Mín</span>{this.props.data.tempMin}°</p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"desc\">\r\n          <p className=\"desc\">{this.props.data.desc}</p>\r\n          <Icon name={this.iconId} classes={['perma_active']} />\r\n        </div>\r\n        <hr />\r\n        <div className=\"card_control\">\r\n          <button className=\"loading_box\" onClick={this.update} title=\"Actualizar\">\r\n            <Icon name=\"refresh\" classes={['btn']} />\r\n            <Icon name=\"loading_loop\" />\r\n          </button>\r\n          <span className=\"time\">\r\n            {this.state.time}\r\n          </span>\r\n          <button onClick={this.remove} title=\"Cerrar\" >\r\n            <Icon name=\"close\" classes={['btn']} />\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  fullName: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    //cloud: PropTypes.number.isRequired, // unused\r\n    coord: PropTypes.shape({\r\n      lat: PropTypes.number.isRequired,\r\n      lon: PropTypes.number.isRequired\r\n    }).isRequired,\r\n    countryCode: PropTypes.string.isRequired,\r\n    weatherId: PropTypes.number.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n    //hum: PropTypes.number.isRequired, // unused\r\n    icon: PropTypes.string.isRequired,\r\n    cityName: PropTypes.string.isRequired,\r\n    temp: PropTypes.number.isRequired,\r\n    tempMax: PropTypes.number.isRequired,\r\n    tempMin: PropTypes.number.isRequired,\r\n    timezone: PropTypes.number.isRequired,\r\n    //wind: PropTypes.number.isRequired // m/s to km/h // unused\r\n  }).isRequired,\r\n  extras: PropTypes.shape({\r\n    countryName: PropTypes.string.isRequired,\r\n    countryNameNative: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Prediction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.predictionClicked = this.predictionClicked.bind(this);\r\n  }\r\n\r\n  predictionClicked() {\r\n    this.props.clickHandler(this.props.data.id);\r\n  }\r\n\r\n  render() {\r\n    const { start, match, finish, country, id } = this.props.data;\r\n    return (\r\n      <div className=\"prediction\" onClick={this.predictionClicked}>\r\n        <span>\r\n          <p><strong>{start}</strong>{match}<strong>{finish}</strong><em> ({country})</em></p>\r\n        </span>\r\n        <input type=\"hidden\"\r\n          value={id}\r\n          style={{ display: 'none' }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPrediction.propTypes = {\r\n  data: PropTypes.shape({\r\n    start: PropTypes.string.isRequired,\r\n    match: PropTypes.string.isRequired,\r\n    finish: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  clickHandler: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.iconWord = 'not_' + this.props.data.type;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitAndRemove();\r\n  }\r\n\r\n  waitAndRemove() {\r\n    setTimeout(() => {\r\n      this.props.remove(this.props.data.id);\r\n    }, 4000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'notification ' + this.props.data.type}>\r\n        <Icon name={this.iconWord} />\r\n        <p>{this.props.data.msg}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  data: PropTypes.shape({\r\n    msg: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","let intervalHandler = 0;\r\nlet target = 0;\r\nlet currentScroll = 0;\r\nlet step = 0;\r\nlet cont = 0;\r\n\r\n/**\r\n * Init Smooth Scroll\r\n */\r\nexport function initSS(newTarget) {\r\n  clearInterval(intervalHandler);\r\n  cont = 0;\r\n  target = newTarget;\r\n  currentScroll = document.documentElement.scrollTop;\r\n  step = (currentScroll - target) / 60;\r\n  intervalHandler = setInterval(runSS, 0);\r\n}\r\n\r\n/**\r\n * Cancel Smooth Scroll\r\n */\r\nexport function cancelSS() {\r\n  clearInterval(intervalHandler);\r\n}\r\n\r\nfunction runSS() {\r\n  let diff = step * cont;\r\n  window.scrollTo(0, currentScroll - diff);\r\n  if (cont === 60) clearInterval(intervalHandler);\r\n  cont++;\r\n}","import React from 'react'\r\nimport Icon from './Icon';\r\nimport { initSS } from '../js/smoothScroll';\r\n\r\nexport default function ToTopBtn() {\r\n  return (\r\n    <button id=\"to_top_btn\" onClick={() => initSS(0)} title=\"Volver arriba\">\r\n      <Icon name=\"top_arrow\" classes={['btn']} />\r\n    </button>\r\n  )\r\n}\r\n","let CITIES = undefined; // OpenWeatherMaps city (weather stations) list\r\n(async () => {\r\n  CITIES = await import(/* webpackChunkName: \"city_list\" */ '../apis/city.json');\r\n})();\r\n\r\n/* CITIES shape: \r\n[{\r\n    a: (number) // city id\r\n    b: (string) // city name\r\n    c: (string) // city country code (ISO 3166-2)\r\n  }, ...] */\r\n\r\nlet COUNTRIES = undefined;  // REST Countries country list\r\n(async () => {\r\n  COUNTRIES = await import(/* webpackChunkName: \"all_list\" */ '../apis/country.json');\r\n})();\r\n\r\n/* COUNTRIES shape:\r\n[{\r\n    d: (string) // city country code (ISO 3166-2)\r\n    e: (string) // country native name\r\n    f: (string) // country name translations\r\n  }, ...] */\r\n\r\nconst API = 'https://api.openweathermap.org/data/2.5/weather?';\r\nconst API_CITY_NAME_PREFIX = 'q=';\r\nconst API_CITY_ID_PREFIX = 'id=';\r\nconst API_OPTIONS = '&appid=b280c897878592322aafe56701248929&units=metric&lang=es';\r\n\r\nexport async function getPredictions(inputName) {\r\n  return await (() => {\r\n    let city = undefined;\r\n    let newList = [];\r\n    // Create prediction list (minimum of 3 characters typed)\r\n    if (inputName.length > 2) {\r\n      inputName = inputName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n      const TEST = new RegExp(' ' + inputName, 'i');\r\n      const RE_A = new RegExp('(.*)' + inputName, 'i');\r\n      const RE_B = new RegExp(inputName, 'i');\r\n      const RE_C = new RegExp(inputName + '(.*)', 'i');\r\n      // Maximum of 6 predictions\r\n      for (let i = 0; (i < 209579) && (newList.length < 6); i++) {\r\n        city = CITIES[i];\r\n        if (TEST.test(' ' + city.b)) {\r\n          if (inputName.length === city.b.length) // 100% match at the top of the list\r\n            newList.unshift({\r\n              start: RE_A.exec(city.b)[1],\r\n              match: RE_B.exec(city.b)[0],\r\n              finish: RE_C.exec(city.b)[1],\r\n              country: city.c, id: city.a\r\n            });\r\n          else // partial match\r\n            newList.push({\r\n              start: RE_A.exec(city.b)[1],\r\n              match: RE_B.exec(city.b)[0],\r\n              finish: RE_C.exec(city.b)[1],\r\n              country: city.c, id: city.a\r\n            });\r\n        }\r\n      }\r\n      return newList;\r\n    } // else\r\n    return [];\r\n  })();\r\n}\r\n\r\nexport async function getExtras(countryCode) {\r\n  for (let i = 0; i < 250; i++) {\r\n    if (COUNTRIES[i].d === countryCode) {\r\n      const ITEM = COUNTRIES[i];\r\n      return {\r\n        countryNameNative: ITEM.e,\r\n        countryName: ITEM.f.es\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getUserLocation() {\r\n  const RES = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=15d8e57eb4aa4015bb32a04d73b67b19');\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return `${RES_JSON.city}, ${RES_JSON.country_code2}`;\r\n  }\r\n}\r\n\r\nexport async function getWeather(inputName, option) {\r\n  let PREFIX = '';\r\n  if (option === 'name') PREFIX = API_CITY_NAME_PREFIX;\r\n  else if (option === 'id') PREFIX = API_CITY_ID_PREFIX;\r\n  const RES = await fetch(API + PREFIX + inputName + API_OPTIONS);\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return {\r\n      id: RES_JSON.id,\r\n      coord: { lat: RES_JSON.coord.lat, lon: RES_JSON.coord.lon },\r\n      countryCode: RES_JSON.sys.country,\r\n      weatherId: RES_JSON.weather[0].id,\r\n      desc: RES_JSON.weather[0].description,\r\n      icon: RES_JSON.weather[0].icon,\r\n      cityName: RES_JSON.name,\r\n      temp: Math.round(RES_JSON.main.temp),\r\n      tempMax: Math.round(RES_JSON.main.temp_max),\r\n      tempMin: Math.round(RES_JSON.main.temp_min),\r\n      timezone: RES_JSON.timezone,\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\nkey: '&appid=b280c897878592322aafe56701248929',\r\nunits: '&units=metric',\r\nlang: '&lang=es'\r\n */\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Card from './components/Card';\r\nimport Icon from './components/Icon';\r\nimport Prediction from './components/Prediction';\r\nimport Notification from './components/Notification';\r\nimport ToTopBtn from './components/ToTopBtn';\r\nimport { getPredictions, getUserLocation, getExtras, getWeather } from './js/getFromAPIs';\r\nimport { cancelSS } from './js/smoothScroll';\r\nimport { suc, alt, err, dbg } from './js/customConsole';\r\n\r\n/* const PRELOAD_CITIES = [\r\n  'Cairo,EG',             // africa\r\n  'Kingston,JM',          // america c\r\n  'Alaska,US',            // america n\r\n  'Amazonas,BR',          // america s\r\n  'McMurdo Station,AQ',   // antartida\r\n  'Tokyo,JP',             // asia\r\n  'Berlin,DE',            // europa\r\n  'Sydney,AU',            // oceania\r\n  'Cape Town,ZA',         // -africa\r\n  'Panama,PA',            // -america c\r\n  'Ottawa,CA',            // -america n\r\n  'Montevideo,UY',        // -america s\r\n  'Busan,KR',             // -asia\r\n  'Moscow,RU',            // -europa\r\n  'Wellington,NZ',        //- oceania\r\n]; */\r\n\r\nconst About = (lazy(() => (import(/* webpackChunkName: \"About\" */ './components/About'))));\r\nconst WeatherMaps = (lazy(() => (import(/* webpackChunkName: \"WeatherMaps\" */ './components/WeatherMaps'))));\r\n\r\nexport default class ThisWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      cardList: [],\r\n      predictionList: [],\r\n      notificationList: [],\r\n    };\r\n    this.inputBox = undefined;\r\n    this.predictionListBox = undefined;\r\n    this.toTopBtn = undefined;\r\n    this.currentFocus = -1;\r\n    this.inputKeyDown = this.inputKeyDown.bind(this);\r\n    this.inputChanged = this.inputChanged.bind(this);\r\n    this.fireSearch = this.fireSearch.bind(this);\r\n    this.stopSearchingLoop = this.stopSearchingLoop.bind(this);\r\n    this.addCard = this.addCard.bind(this);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.removeCard = this.removeCard.bind(this);\r\n    this.removeNotification = this.removeNotification.bind(this);\r\n    this.fireSearchFromPrediction = this.fireSearchFromPrediction.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    getUserLocation().then(res => {\r\n      if (res > 200)\r\n        err('Error al localizar el dispositivo (error ' + res + ')');\r\n      else {\r\n        dbg(`Dispositivo localizado...`);\r\n        this.addCard(res, 'name');\r\n      }\r\n    });\r\n    this.focusID('input_query');\r\n    this.inputBox = document.getElementById('input_query');\r\n    this.predictionListBox = document.getElementById('prediction_box');\r\n    this.toTopBtn = document.getElementById('to_top_btn');\r\n    document.addEventListener('click', e => {\r\n      if ((e.target !== this.inputBox) && (this.state.predictionList.length > 0))\r\n        this.resetPredictionList(e.target);\r\n    });\r\n    window.addEventListener('scroll', () => {\r\n      if (document.documentElement.scrollTop > 100) this.toTopBtn.style.transform = 'scale(1)';\r\n      else this.toTopBtn.style.transform = '';\r\n    });\r\n    window.addEventListener('wheel', () => cancelSS());\r\n  }\r\n\r\n  /**\r\n   * App functionality & utils\r\n   */\r\n\r\n  async inputKeyDown(e) {\r\n    // Current predictions displayed\r\n    let predListDOM = this.predictionListBox.getElementsByClassName('prediction');\r\n    if (e.keyCode === 40) { // key down\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction\r\n        this.currentFocus++;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 38) { // key up\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction        \r\n        this.currentFocus--;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 27) { // escape\r\n      // Clean the input\r\n      this.setState({ input: '', predictionList: [] });\r\n    } else if (e.keyCode === 13) { // enter\r\n      e.preventDefault();\r\n      this.resetPredictionList(e.target); // hide predlist while searching\r\n      if ((this.state.predictionList.length > 0) &&\r\n        (document.querySelector('.active_prediction') !== null)) {\r\n        // if there are predictions AND there is an active one, search that\r\n        const VAL = document.querySelector('.active_prediction input').value;\r\n        this.fireSearchFromPrediction(VAL);\r\n      } else {\r\n        // else, try to search based on input value\r\n        this.setState({ input: e.target.value });\r\n        this.fireSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  async inputChanged(e) {\r\n    this.resetPredictionList();\r\n    this.setState({\r\n      input: e.target.value,\r\n      predictionList: [],\r\n    });\r\n    const PREDS = await getPredictions(e.target.value);\r\n    this.setState({ predictionList: PREDS });\r\n  }\r\n\r\n  fireSearch(inputName, option) {\r\n    if (!this.isOnLine()) return; // if it's online, continue\r\n    if (inputName) // if there is an specific input (parameter)\r\n      this.addCard(inputName, option);\r\n    else if (this.state.input.length > 0) // else, if there is text in the input box\r\n      this.addCard(this.state.input, 'name');\r\n    this.focusID('input_query'); // if not, return focus to the input box\r\n  }\r\n\r\n  isOnLine() {\r\n    if (window.navigator.onLine) return true;\r\n    const MSG = 'Equipo offline';\r\n    this.addNotification(MSG, 'error');\r\n    err(MSG);\r\n    return false;\r\n  }\r\n\r\n  focusID(id) {\r\n    document.getElementById(id).focus();\r\n  }\r\n\r\n  stopSearchingLoop() {\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  stopUpdatingLoop(id) {\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.remove('loading');\r\n  }\r\n\r\n  /**\r\n   * Weather Card functionality\r\n   */\r\n\r\n  async addCard(inputName, option) {\r\n    document.getElementById('search_btn').classList.add('loading');\r\n    dbg(inputName + ': Consultando API...');\r\n    const DATA = await getWeather(inputName, option).catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = 'No se encontraron resulados';\r\n      this.addNotification(MSG, 'alert');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n    const FULL_NAME = DATA.cityName + ', ' + DATA.countryCode; // Complete name used for the card title\r\n\r\n    // Check if it already exists\r\n    if (this.state.cardList.length > 0) {\r\n      let exist = false;\r\n      this.state.cardList.forEach(card => {\r\n        // id correspondant to 'weather station id',\r\n        // city and country name can be the same\r\n        if (DATA.id === card.data.id) return exist = true;\r\n      });\r\n      if (exist) {\r\n        const MSG = 'Resultado ya incluido';\r\n        this.addNotification(MSG, 'info');\r\n        alt(FULL_NAME + ': ' + MSG);\r\n        this.stopSearchingLoop();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add the card\r\n    const EXTRAS = await getExtras(DATA.countryCode); // get extra data\r\n    this.setState({\r\n      cardList: [...this.state.cardList, { fullName: FULL_NAME, data: DATA, extras: EXTRAS }],\r\n      input: '', // Clean input box\r\n      predictionList: [] // Clean predictions\r\n    });\r\n    this.stopSearchingLoop();\r\n    dbg(inputName + ' --> ' + FULL_NAME + '...');\r\n    suc(FULL_NAME + ': Agregado');\r\n  }\r\n\r\n  async updateCard(id, fullName) {\r\n    if (!this.isOnLine()) return;\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.add('loading');\r\n    dbg(fullName + ': Actualizando...');\r\n    const DATA = await getWeather(fullName, 'name').catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = fullName + ': Error al actualizar';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(fullName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n\r\n    // Find card index in list\r\n    let i = undefined;\r\n    this.state.cardList.forEach(card => {\r\n      if (card.data.id === id) i = this.state.cardList.indexOf(card);\r\n    });\r\n\r\n    // Update card\r\n    let newCardList = this.state.cardList;\r\n    newCardList[i].data = DATA;\r\n    this.setState({ cardList: newCardList });\r\n    const MSG = fullName + ': Actualizado';\r\n    this.addNotification(MSG, 'success');\r\n    this.stopUpdatingLoop(id);\r\n    suc(MSG);\r\n  }\r\n\r\n  removeCard(id, fullName) {\r\n    this.setState(prevState => ({\r\n      cardList: prevState.cardList.filter(item => item.data.id !== id)\r\n    }));\r\n    suc(fullName + ': Eliminado');\r\n  }\r\n\r\n  /**\r\n   * Notification functionality\r\n   */\r\n\r\n  addNotification(msg, type) {\r\n    let newNotList = this.state.notificationList;\r\n    if (newNotList.length >= 6) newNotList.shift();\r\n    this.setState({\r\n      notificationList: [...newNotList, { msg: msg, type: type, id: new Date().getTime() }]\r\n    });\r\n  }\r\n\r\n  removeNotification(id) {\r\n    this.setState(prevState => ({\r\n      notificationList: prevState.notificationList.filter(item => item.id !== id)\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Prediction functionality\r\n   */\r\n\r\n  fireSearchFromPrediction(value) {\r\n    this.resetPredictionList();\r\n    this.fireSearch(value, 'id');\r\n  }\r\n\r\n  addActivePrediction(predListDOM) {\r\n    // Actually add/set\r\n    this.removeActivePrediction(predListDOM);\r\n    if (this.currentFocus >= predListDOM.length) this.currentFocus = 0;\r\n    if (this.currentFocus < 0) this.currentFocus = (predListDOM.length - 1);\r\n    if (predListDOM.length) predListDOM[this.currentFocus].classList.add('active_prediction');\r\n  }\r\n\r\n  removeActivePrediction(predListDOM) {\r\n    for (var i = 0; i < predListDOM.length; i++)\r\n      predListDOM[i].classList.remove('active_prediction');\r\n  }\r\n\r\n  resetPredictionList() {\r\n    this.currentFocus = -1;\r\n    this.setState({ predictionList: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <header>\r\n          <div id=\"search_box\" predvisible={this.state.predictionList.length > 0 ? 'true' : 'false'}>\r\n            <button id=\"search_btn\"\r\n              className=\"loading_box loading\"\r\n              title=\"Buscar\"\r\n              onClick={this.fireSearch} >\r\n              <Icon name=\"search\" classes={['btn', 'perma_active']} viewbox=\"0 0 48 48\" />\r\n              <Icon name=\"loading_loop\" />\r\n            </button>\r\n            <input id=\"input_query\"\r\n              type=\"text\"\r\n              value={this.state.input}\r\n              placeholder=\"Buscar una cuidad\"\r\n              onKeyDown={e => this.inputKeyDown(e)}\r\n              onChange={e => this.inputChanged(e)}\r\n              onFocus={e => this.inputChanged(e)}\r\n              autoComplete=\"off\"\r\n              alt=\"Buscar una cuidad\" />\r\n            <div id=\"prediction_box\" >\r\n              {this.state.predictionList.map(item => (\r\n                <Prediction\r\n                  data={item}\r\n                  clickHandler={this.fireSearchFromPrediction}\r\n                  key={item.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/this.weather/\">Inicio</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/weathermaps\">Mapas meteorológicos</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/about\">Acerca de</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <Route exact path=\"/this.weather/\" render={props => (\r\n            <div id=\"main_content\">\r\n              <div id=\"card_box\">\r\n                {this.state.cardList.map(item => (\r\n                  <Card\r\n                    fullName={item.fullName}\r\n                    data={item.data}\r\n                    extras={item.extras}\r\n                    update={this.updateCard}\r\n                    remove={this.removeCard}\r\n                    key={item.data.id} />\r\n                ))}\r\n              </div>\r\n              <div id=\"notification_box\">\r\n                <div id=\"notification_content\">\r\n                  {this.state.notificationList.map(item => (\r\n                    <Notification\r\n                      data={item}\r\n                      remove={this.removeNotification}\r\n                      key={item.id} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )} />\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/weathermaps\" component={WeatherMaps} />\r\n          </Suspense>\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/about\" component={About} />\r\n          </Suspense>\r\n          <div id=\"to_top_btn_box\">\r\n            <ToTopBtn />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div id=\"footer_content\">\r\n            <div id=\"brand_box\">\r\n              <a id=\"imagotipo\" href=\"http://wikarot.github.io/this.weather\" title=\"this.weather\">\r\n                <div className=\"isotipo icon_small\">\r\n                  <span>\r\n                    <img src=\"favicon-16x16.png\" alt=\"Icono de this.weather\" />\r\n                  </span>\r\n                </div>\r\n                <h1 id=\"logotipo\"><em>this</em>.weather</h1>\r\n              </a>\r\n            </div>\r\n            <div id=\"cc\">\r\n              <span>\r\n                <p>Copyright 2019 <a href=\"https://github.com/Wikarot\">Leonardo de S.L.F</a></p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n        <div id=\"weather_maps_container\" style={{ display: 'none' }} >\r\n          <canvas id=\"weather_map_0\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_1\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_2\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_3\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_4\" width=\"512\" height=\"256\" />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// MS_ACC b280c897878592322aafe56701248929\r\n// GG_Acc cdd659df7dc048884575b9451ddf1330\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport ThisWeather from './ThisWeather';\nimport './sass/main.css';\n\nimport('./js/customConsole').then(module => module.fcy('Welcome to this.weather!'));\n\nrender(<ThisWeather />, document.getElementById('root'));\n","const FORMAT = '%c%s';\r\nconst RAD = 'border-radius: 99px;';\r\nconst DD = ' » ';\r\n\r\n// SUCCESS\r\nexport const suc = console.suc = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: GreenYellow; background-color: DarkGreen; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ALERT\r\nexport const alt = console.alt = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: Black; background-color: Gold; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ERROR\r\nexport const err = console.err = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: MistyRose; background-color: DarkRed; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// NOTIFICATION\r\nexport const not = console.not = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: LightCyan; background-color: DarkSlateGray; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// DEBUG\r\nexport const dbg = console.dbg = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: SkyBlue; background-color: MidnightBlue; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// FANCY\r\nexport const fcy = console.fcy = function (msg) {\r\n  console.log('%c%s',\r\n    'color: #33cfff;' +\r\n    'background-color: rgba(51, 207, 255, .1);' +\r\n    'border: 1px solid #33cfff;' +\r\n    'border-radius: 2px; padding: 6px 9px;' +\r\n    'text-shadow: 0 0 2px rgba(255, 255, 255, .8);' +\r\n    '',\r\n    msg);\r\n}\r\n","import { Scene } from 'three';\r\n\r\nexport const NEAR = 1; // near, posible visible distance from camera\r\nexport const FAR = 5; // far, visible distance from camera\r\nexport const Z_OFF = 3; // camera offset from 0 (Z axis)\r\nexport let city_labels = []; // id, cityName, label, dot, line, x, y\r\nexport const SPH_RAD = 0.825; // sphere radius\r\nexport const RES = 512; // weather map resolution\r\n\r\nexport function removeFromCityLabels(id) {\r\n  city_labels = city_labels.filter(item => item.id !== id); // remove it from the \"list\"\r\n}\r\n\r\nexport let initDone = false;\r\nexport function setInitDone() {\r\n  // init makes a callback when run the last line\r\n  // and calls for initWeatherMapsObj (camera, renderer and controls)\r\n  initDone = true;\r\n}\r\n\r\nconst SCENE = new Scene();\r\n\r\nexport default SCENE;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Icon(props) {\r\n  let classes = ['icon'];\r\n  let viewbox = '0 0 24 24';\r\n\r\n  if (props.size !== undefined) classes.push('icon_' + props.size);\r\n  else classes.push('icon_small');\r\n  if (props.classes !== undefined) classes.push(...props.classes);\r\n  if (props.viewbox !== undefined) viewbox = props.viewbox;\r\n\r\n  // Special case for \"loading loop\"\r\n  if (props.name === 'loading_loop') classes.push('icon_loading');\r\n\r\n\r\n  return (\r\n    <div className={classes.join(' ')} >\r\n      <span>\r\n        <svg viewBox={viewbox} >\r\n          <use xlinkHref={'#' + props.name}></use>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  classes: PropTypes.arrayOf(PropTypes.string),\r\n  viewbox: PropTypes.string,\r\n  size: PropTypes.string,\r\n}\r\n"],"sourceRoot":""}