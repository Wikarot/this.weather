{"version":3,"sources":["components/Icon.js","js/customConsole.js","components/CustomRadio.js","components/CustomChk.js","components/WeatherMaps.js","js/threeStuff.js","js/smoothScroll.js","components/Card.js","components/Prediction.js","components/Notification.js","components/ToTopBtn.js","components/About.js","js/getFromAPIs.js","ThisWeather.js","index.js"],"names":["Icon","props","classes","viewbox","undefined","size","push","apply","Object","toConsumableArray","name","react_default","a","createElement","className","join","viewBox","xlinkHref","RAD","DD","suc","console","msg","log","alt","err","not","dbg","fcy","CustomRadio","iconClasses","id","idWord","groupWord","type","defaultChecked","defaultChk","title","titleWord","htmlFor","iconWord","concat","CustomChk","customChkClasses","iconWordB","iconWordA","initDone","setInitDoneTrue","camera","THREE","RES","NEAR","FAR","layers","enable","DEFAULT_OPTION","renderer","antialias","alpha","powerPreference","stencil","setSize","setPixelRatio","window","devicePixelRatio","gammaFactor","gammaOutput","domElement","controls","OrbitControls","rotateSpeed","autoRotate","autoRotateSpeed","enablePan","enableZoom","enableKeys","minPolarAngle","Math","PI","maxPolarAngle","Z_OFF","VEC","RAY_CASTER","MAPS","label","ref","icon","CITY_LABELS","SMALL_MEDIA","matchMedia","WeatherMaps","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","option","showContent","showGlobe","showMap","setGlobe","bind","assertThisInitialized","setMap","setWeatherOption","animateRaf","labelsRaf","animate","setCameraPosition","toggleLights","toggleRotation","resetRedererSize","resetRendererPixelRatio","updateLabels","mapCanvas","init","i","N_MAPS_TO_LOAD","createWeatherMap","document","getElementById","appendChild","addEventListener","_this2","_loop","e","W","matches","OFFSET","SCROLLABLE","SCROLLED","target","scrollLeft","style","width","addListener","dragscroll","reset","cancelAnimationFrame","setState","showMAp","disable","getContext","clearRect","putImageData","WEATHER_CTX_MAT","getImageData","requestAnimationFrame","update","render","SCENE","theta","matrix","makeRotationFromEuler","position","set","applyMatrix4","lookAt","getPixelRatio","checked","AMB","intensity","LIGHT_ON","SUN","LIGHT_OFF","currentSize","getSize","x","clientWidth","H","clientHeight","overflowX","forEach","item","dot","y","updateWorldMatrix","getWorldPosition","project","setFromCamera","VEC_X","VEC_Y","transform","round","z","display","key","height","map","Component","merToEqrWorker","Worker","TEXTURE","load","SPECULAR","BUMP","encoding","URL","base","last1","last2","MAP","SPH_RAD","SPH_SCALE","T","T_SIZE","BASE_SPH_GEO","rotateY","degToRad","_init","arguments","_callee7","PHYS","AUX","WEATHER","ATMO","regenerator_default","wrap","_context7","prev","next","fog","setSunPosition","geometry","material","specularMap","specular","shininess","bumpMap","bumpScale","matrixAutoUpdate","canvas","transparent","scale","multiplyScalar","add","color","side","opacity","setInterval","updateSunPosition","stop","sun","rotY","HH","Date","getUTCHours","MM","getUTCMonth","MATRIX","rotX","MERCATOR_CANVAS","MERCATOR_CTX","cont","X00","Image","X10","X01","X11","drawMapTiles","_x","_x2","_x3","_drawMapTiles","asyncToGenerator","mark","_callee5","img","T_DATA","L","_i","A","_i2","_i3","_i4","R","G","_i5","_y","LINE","_context5","drawImage","data","length","postMessage","crossOrigin","src","onload","_callee","_context","abrupt","sent","_callee2","_context2","_callee3","_context3","_callee4","_context4","messageCount","onmessage","I","_ref5","_callee6","merY","_context6","content","newY","_x4","needsUpdate","intervalHandler","currentScroll","step","initSS","newTarget","clearInterval","documentElement","scrollTop","runSS","diff","scrollTo","DOT_GEO","DOT_MAT","precision","LINE_MAT","Card","time","timeTimer","updateTimer","iconId","weatherId","remove","createTag","getTime","fullName","classList","line","_this3","filter","timezone","OFFSET_F","floor","mm_off","hh","mm","getUTCMinutes","_this4","lbl","textContent","cityName","onclick","offsetTop","MTX","_this$props$data$coor","coord","lat","lon","DOT","LINE_GEO","vertices","X","Y","rotated","extras","countryNameNative","countryCode","countryName","temp","tempMax","tempMin","desc","hum","cloud","wind","onClick","Prediction","_this$props$data","start","match","finish","country","_this$props$data2","value","Notification","setTimeout","ToTopBtn","About","showRss","onchange","expanded","href","OPEN_WEATHER","api","fin","getPredictions","_getPredictions","inputName","c","newList","replace","TEST","RegExp","RE_A","RE_B","RE_C","CITY_LIST","test","n","unshift","exec","getExtras","_getExtras","ITEM","ALL_LIST","alpha2Code","translations","es","nativeName","timeZone","timezones","RES_JSON","fetch","status","json","city","country_code2","getWeather","_getWeather","clouds","all","sys","weather","description","main","humidity","temp_max","temp_min","speed","ThisWeather","input","cardList","predictionList","notificationList","inputBox","predictionListBox","toTopBtn","currentFocus","inputKeyDown","inputChanged","fireSearch","stopSearchingLoop","addCard","updateCard","removeCard","removeNotification","predictionClick","_getUserLocation","getUserLocation","then","res","focusID","resetPredictionList","predListDOM","getElementsByClassName","keyCode","preventDefault","addActivePrediction","PREDS","querySelector","VAL","isOnLine","navigator","onLine","MSG","addNotification","focus","catch","DATA","FULL_NAME","exist","card","EXTRAS","stopUpdatingLoop","indexOf","newCardList","prevState","newNotList","shift","removeActivePrediction","react_router_dom","predvisible","placeholder","onKeyDown","onChange","onFocus","autoComplete","Prediction_Prediction","to","react_router","exact","path","Card_Card","WeatherMaps_WeatherMaps","Notification_Notification","component","ReactDOM","ThisWeather_ThisWeather"],"mappings":"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","file":"static/js/main.2b11f60b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function Icon(props) {\r\n  let classes = ['icon'];\r\n  let viewbox = '';\r\n\r\n  if (props.size !== undefined) classes.push('icon_' + props.size);\r\n  else classes.push('icon_small');\r\n  if (props.classes !== undefined) classes.push(...props.classes);\r\n\r\n  // Special case for \"loading loop\"\r\n  if (props.name === 'loading_loop') classes.push('icon_loading');\r\n\r\n  if (props.viewbox !== undefined) viewbox = props.viewbox;\r\n  else viewbox = '0 0 24 24';\r\n\r\n  return (\r\n    <div className={classes.join(' ')} >\r\n      <span>\r\n        <svg viewBox={viewbox} >\r\n          <use xlinkHref={'#' + props.name}></use>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\n\r\nprops\r\n\r\nsize ''\r\nclasses []\r\nviewbox ''\r\nname ''\r\n\r\n*/","const FORMAT = '%c%s';\r\nconst RAD = 'border-radius: 99px;';\r\nconst DD = ' » ';\r\n\r\n// SUCCESS\r\nexport const suc = console.suc = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: GreenYellow; background-color: DarkGreen; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ALERT\r\nexport const alt = console.alt = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: Black; background-color: Gold; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ERROR\r\nexport const err = console.err = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: MistyRose; background-color: DarkRed; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// NOTIFICATION\r\nexport const not = console.not = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: LightCyan; background-color: DarkSlateGray; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// DEBUG\r\nexport const dbg = console.dbg = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: SkyBlue; background-color: MidnightBlue; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// FANCY\r\nexport const fcy = console.fcy = function (msg) {\r\n  console.log('%c%s',\r\n    'color: #33cfff;' +\r\n    'background-color: rgba(51, 207, 255, .1);' +\r\n    'border: 1px solid #33cfff;' +\r\n    'border-radius: 2px; padding: 6px 9px;' +\r\n    'text-shadow: 0 0 2px rgba(255, 255, 255, .8);' +\r\n    '',\r\n    msg);\r\n}\r\n","import React from 'react'\r\nimport Icon from './Icon';\r\n\r\nexport default function CustomRadio(props) {\r\n  let iconClasses = [];\r\n  if (props.iconClasses !== undefined) {\r\n    iconClasses.push(...props.iconClasses);\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom_radio_container\">\r\n      <input id={'custom_radio_' + props.idWord}\r\n        className=\"custom_radio\"\r\n        name={props.groupWord + '_radio_group'}\r\n        type=\"radio\"\r\n        defaultChecked={props.defaultChk} />\r\n      <label className=\"custom_radio_lbl icon_small\"\r\n        title={props.titleWord}\r\n        htmlFor={'custom_radio_' + props.idWord} />\r\n      <Icon name={props.iconWord} classes={[...iconClasses]} />\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\n\r\nidle props\r\n\r\nidWord\r\niconWord\r\niconClasses\r\ntitleWord\r\ndefaultChk\r\n\r\n*/","import React from 'react'\r\nimport Icon from './Icon';\r\n\r\nexport default function CustomChk(props) {\r\n  let iconClasses = [];\r\n  let customChkClasses = ['custom_chk_container', 'btn'];\r\n  if (props.iconWordB !== undefined) {\r\n    customChkClasses.push('dual_icon');\r\n    iconClasses.push('perma_active');\r\n  } else customChkClasses.push('single_icon');\r\n  if (props.iconClasses !== undefined) iconClasses.push(...props.iconClasses);\r\n\r\n  return (\r\n    <div className={customChkClasses.join(' ')}>\r\n      <input id={'custom_chk_' + props.idWord}\r\n        className=\"custom_chk\"\r\n        type=\"checkbox\"\r\n        defaultChecked={props.defaultChk} />\r\n      {/* onChange={e => this.togglePlayPause(e)}  */}\r\n      <label className=\"custom_chk_lbl\"\r\n        title={props.titleWord}\r\n        htmlFor={'custom_chk_' + props.idWord} />\r\n      <Icon name={props.iconWordA} classes={[...iconClasses]} />\r\n      {(props.iconWordB !== undefined) ? (<Icon name={props.iconWordB} classes={[...iconClasses]} />) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\n/*\r\n\r\nidle props\r\n\r\nidWord\r\niconWordA\r\niconWordB\r\niconClasses\r\ntitleWord\r\ndefaultChk\r\n\r\n*/","import React, { Component } from 'react'\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'orbit-controls-es6';\r\nimport dragscroll from 'dragscroll';\r\nimport { AMB, createWeatherMap, init, SCENE, SUN, WEATHER_CTX_MAT, RES, LIGHT_ON, LIGHT_OFF } from '../js/threeStuff';\r\nimport CustomRadio from './CustomRadio';\r\nimport CustomChk from './CustomChk';\r\n\r\nlet initDone = false;\r\nexport function setInitDoneTrue() {\r\n  initDone = true;\r\n  initWeatherMapsObj();\r\n}\r\nexport const NEAR = 1, FAR = 5, Z_OFF = 3;\r\nconst VEC = new THREE.Vector3();\r\nconst RAY_CASTER = new THREE.Raycaster();\r\nconst MAPS = [\r\n  { id: 0, label: 'Terreno', ref: [''], icon: 'terrain' },\r\n  { id: 1, label: 'Nubosidad', ref: ['0%', '100%'], icon: 'cloud' },\r\n  { id: 2, label: 'Precipitación', ref: ['0mm', '200mm'], icon: 'precipitation' },\r\n  { id: 3, label: 'Presión', ref: ['950hPa', '1070hPa'], icon: 'tachometer' },\r\n  { id: 4, label: 'Viento', ref: ['0m/s', '200m/s'], icon: 'wind' },\r\n  { id: 5, label: 'Temperatura', ref: ['-40°C', '0°C', '40°C'], icon: 'thermometer' }\r\n];\r\nexport const CITY_LABELS = []; // id, label, dot, line, x, y\r\nconst N_MAPS_TO_LOAD = 6; // 1 to 6\r\nconst DEFAULT_OPTION = 1;\r\nconst SMALL_MEDIA = window.matchMedia('(max-width: 679px)');\r\n\r\nexport let camera;\r\nlet renderer, controls\r\n\r\nfunction initWeatherMapsObj() {\r\n  camera = new THREE.PerspectiveCamera(45, RES / RES, NEAR, FAR);\r\n  camera.layers.enable(DEFAULT_OPTION);\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    alpha: true,\r\n    powerPreference: 'high-performance',\r\n    stencil: false,\r\n  });\r\n  renderer.setSize(RES, RES);\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.gammaFactor = 2.2;\r\n  renderer.gammaOutput = true;\r\n  renderer.domElement.id = 'globe_canvas';\r\n  controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.rotateSpeed = 0.3;\r\n  controls.autoRotate = false;\r\n  controls.autoRotateSpeed = 2.0;\r\n  controls.enablePan = false;\r\n  controls.enableZoom = false;\r\n  controls.enableKeys = false;\r\n  controls.minPolarAngle = Math.PI - Math.PI * .90;\r\n  controls.maxPolarAngle = Math.PI * .90;\r\n}\r\n\r\nexport default class WeatherMaps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option: DEFAULT_OPTION,\r\n      label: MAPS[DEFAULT_OPTION].label,\r\n      ref: MAPS[DEFAULT_OPTION].ref,\r\n      showContent: 'inline-block',\r\n      showGlobe: 'flex',\r\n      showMap: 'none'\r\n    }\r\n    this.setGlobe = this.setGlobe.bind(this);\r\n    this.setMap = this.setMap.bind(this);\r\n    this.setWeatherOption = this.setWeatherOption.bind(this);\r\n    this.animateRaf = 0;\r\n    this.labelsRaf = 0;\r\n\r\n    // Globe stuff\r\n    this.animate = this.animate.bind(this);\r\n    this.setCameraPosition = this.setCameraPosition.bind(this);\r\n    this.toggleLights = this.toggleLights.bind(this);\r\n    this.toggleRotation = this.toggleRotation.bind(this);\r\n    this.resetRedererSize = this.resetRedererSize.bind(this);\r\n    this.resetRendererPixelRatio = this.resetRendererPixelRatio.bind(this);\r\n    this.updateLabels = this.updateLabels.bind(this);\r\n\r\n    // Map stuff\r\n    this.mapCanvas = undefined;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // most be done only one time\r\n    if (!initDone) {\r\n      await init(); // wait for three stuff\r\n      for (let i = 0; i < N_MAPS_TO_LOAD - 1; i++) createWeatherMap(i); // launch weather maps requests\r\n    }\r\n    // every time it mounts...\r\n    document.getElementById('globe_box').appendChild(renderer.domElement); // add renderer canvas to dom\r\n    this.mapCanvas = document.getElementById('map_canvas'); // identify map canvas\r\n    this.setCameraPosition(0, 0);\r\n    this.resetRedererSize(); // resize renderer based on media queries\r\n    this.animate(); // init three stuff animation loop\r\n    this.updateLabels(); // init labels updating loop\r\n    window.addEventListener('resize', this.resetRendererPixelRatio, false); // listen for window resize\r\n    for (let i = 0; i < 6; i++)  // listen to each weather map option\r\n      document.getElementById('custom_radio_' + i).addEventListener('change', () => { this.setWeatherOption(i); });\r\n    // listen to 'toggle buttons' (actually checkbox and radio)\r\n    document.getElementById('custom_radio_globe_radio').addEventListener('change', () => { this.setGlobe(); });\r\n    document.getElementById('custom_radio_map_radio').addEventListener('change', () => { this.setMap(); });\r\n    document.getElementById('custom_chk_rotation_chk').addEventListener('change', e => { this.toggleRotation(e); });\r\n    document.getElementById('custom_chk_day_night_day_chk').addEventListener('change', e => { this.toggleLights(e); });\r\n    // listen for scroll on map to resize 'progress marks'\r\n    document.getElementById('weather_maps_body').addEventListener('scroll', e => {\r\n      const W = SMALL_MEDIA.matches ? 512 : 1024;\r\n      const OFFSET = (SMALL_MEDIA.matches ? 7 : 14) + 1; // margin + border\r\n      const SCROLLABLE = ((W + OFFSET * 2) * .5) + OFFSET; // expected 272 or 542\r\n      const SCROLLED = e.target.scrollLeft / SCROLLABLE;\r\n      document.getElementById('mark_left').style.width = (32 * SCROLLED) + 'px';\r\n      document.getElementById('mark_right').style.width = 32 - (32 * SCROLLED) + 'px';\r\n    });\r\n    SMALL_MEDIA.addListener(this.resetRedererSize);\r\n    dragscroll.reset(); // update dragscroll listeners\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // stop all lops\r\n    cancelAnimationFrame(this.animateRaf);\r\n    cancelAnimationFrame(this.labelsRaf);\r\n  }\r\n\r\n  /**\r\n   * Basic\r\n   */\r\n\r\n  setGlobe() {\r\n    if (this.state.showGlobe !== 'flex') this.setState({ showMap: 'none', showGlobe: 'flex' });\r\n  }\r\n\r\n  setMap() {\r\n    if (this.state.showMAp !== 'flex') this.setState({ showGlobe: 'none', showMap: 'flex' });\r\n  }\r\n\r\n  setWeatherOption(option) {\r\n    this.setState({\r\n      option: option,\r\n      label: MAPS[option].label,\r\n      ref: MAPS[option].ref\r\n    });\r\n    let i = 1; // layer 0 = globe\r\n    do {\r\n      if (option === MAPS[i].id) camera.layers.enable(i);\r\n      else camera.layers.disable(i);\r\n      i++;\r\n    } while (i < 6);\r\n    if (option === 0) this.mapCanvas.getContext('2d').clearRect(0, 0, RES, RES * .5);\r\n    else this.mapCanvas.getContext('2d').putImageData(\r\n      WEATHER_CTX_MAT[option - 1][0].getImageData(0, 0, RES, RES * .5), 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Globe functionality\r\n   */\r\n\r\n  animate() {\r\n    this.animateRaf = requestAnimationFrame(this.animate);\r\n    controls.update();\r\n    renderer.render(SCENE, camera);\r\n  }\r\n\r\n  setCameraPosition(alpha, theta) {\r\n    let matrix = new THREE.Matrix4();\r\n    matrix.makeRotationFromEuler(new THREE.Euler(alpha, theta, 0, 'YXZ'));\r\n    camera.position.set(0, 0, Z_OFF).applyMatrix4(matrix);\r\n    camera.lookAt(0, 0, 0);\r\n  }\r\n\r\n  resetRendererPixelRatio() {\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    if (renderer.getPixelRatio() > 3) renderer.setPixelRatio(3);\r\n  }\r\n\r\n  toggleLights(e) {\r\n    if (e.target.checked === true) {\r\n      AMB.intensity = LIGHT_ON;\r\n      SUN.intensity = 0.0;\r\n      //scene.fog.color = new THREE.Color(0x686868);\r\n    } else {\r\n      AMB.intensity = LIGHT_OFF;\r\n      SUN.intensity = LIGHT_ON;\r\n      //scene.fog.color = new THREE.Color(0x80bfff);\r\n    }\r\n  }\r\n\r\n  toggleRotation(e) {\r\n    controls.autoRotate = e.target.checked;\r\n  }\r\n\r\n  resetRedererSize() {\r\n    const currentSize = renderer.getSize.x;\r\n    if (SMALL_MEDIA.matches && currentSize !== RES * .5) renderer.setSize(RES * .5, RES * .5);\r\n    else if (!SMALL_MEDIA.matches && currentSize !== RES) renderer.setSize(RES, RES);\r\n  }\r\n\r\n  updateLabels() {\r\n    this.labelsRaf = requestAnimationFrame(this.updateLabels);\r\n    const W = renderer.domElement.clientWidth;\r\n    const H = renderer.domElement.clientHeight;\r\n    const showGlobe = this.state.showGlobe;\r\n    if (showGlobe === 'flex') document.getElementById('weather_maps_body').style.overflowX = 'visible';\r\n    else document.getElementById('weather_maps_body').style.overflowX = 'hidden';\r\n    // iterate on each label object (THREE & DOM stuff)\r\n    CITY_LABELS.forEach(item => {\r\n      let { label, dot, x, y } = item;\r\n      if (showGlobe === 'flex') { // Move & show/hide label over the globe canvas\r\n        dot.updateWorldMatrix(true, false);\r\n        dot.getWorldPosition(VEC);\r\n        VEC.project(camera);\r\n        RAY_CASTER.setFromCamera(VEC, camera);\r\n        const VEC_X = (VEC.x * .5 + .5) * W;\r\n        const VEC_Y = (VEC.y * -.5 + .5) * H;\r\n        label.style.transform = 'translate(-50%, -50%) translate(' + Math.round(VEC_X) + 'px, ' + Math.round(VEC_Y) + 'px)';\r\n        if (VEC.z > .8) label.style.display = 'none';\r\n        else label.style.display = '';\r\n      } else { // Print labels on map\r\n        label.style.display = '';\r\n        if (!SMALL_MEDIA.matches) { x *= 2; y *= 2; }\r\n        label.style.transform = 'translate(-50%, -50%) translate(' + Math.round(x) + 'px, ' + Math.round(y) + 'px)';\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article id=\"weather_maps\">\r\n        <div id=\"weather_maps_header\">\r\n          <h3>\r\n            <em>{this.state.label}</em>\r\n          </h3>\r\n          <CustomRadio\r\n            idWord=\"globe_radio\"\r\n            iconWord=\"globe\"\r\n            groupWord=\"weather_maps\"\r\n            titleWord=\"Globo\"\r\n            defaultChk={true}\r\n            key=\"custom_radio_key_globe_radio\" />\r\n          <CustomRadio\r\n            idWord=\"map_radio\"\r\n            iconWord=\"map\"\r\n            groupWord=\"weather_maps\"\r\n            titleWord=\"Mapa\"\r\n            defaultChk={false}\r\n            key=\"custom_radio_key_map_radio\" />\r\n        </div>\r\n        <hr />\r\n        <div id=\"weather_maps_body\" className=\"dragscroll\">\r\n          <div id=\"globe_box\" style={{ display: this.state.showGlobe }} >\r\n            <div id=\"globe_shadow\"><span></span></div>\r\n            {/* renderer canvas here */}\r\n          </div>\r\n          <div id=\"map_box\" style={{ display: this.state.showMap }} >\r\n            <div id=\"map_canvas_container\">\r\n              <canvas id=\"map_canvas\" width={RES} height={RES * .5} />\r\n            </div>\r\n          </div>\r\n          <div id=\"labels\">\r\n            {/* city_labels here */}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div id=\"ref\">\r\n          <div id=\"ref_data\">\r\n            {MAPS[this.state.option].ref.map(item => (\r\n              <p key={'ref_data_' + item}>{item}</p>\r\n            ))}\r\n          </div>\r\n          <hr />\r\n          <div id=\"ref_gradient_bg\"></div>\r\n          <div className={'ref_gradient ref_gradient_' + MAPS[this.state.option].id} >\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div id=\"weather_maps_control\">\r\n          <div id=\"globe_controls\" style={{ display: this.state.showGlobe }} >\r\n            <CustomChk\r\n              idWord=\"rotation_chk\"\r\n              iconWordA=\"rotation_360\"\r\n              titleWord=\"Alternar rotación\"\r\n              defaultChk={false} />\r\n            <CustomChk\r\n              idWord=\"day_night_day_chk\"\r\n              iconWordA=\"day_night\"\r\n              iconWordB=\"day\"\r\n              titleWord=\"Alternar iluminación\"\r\n              defaultChk={false} />\r\n          </div>\r\n          <div id=\"generic_controls\">\r\n            {MAPS.map(option => (\r\n              <CustomRadio\r\n                idWord={option.id}\r\n                iconWord={option.icon}\r\n                groupWord={'map_option'}\r\n                titleWord={option.label}\r\n                defaultChk={option.id === 1 ? true : false}\r\n                key={'custom_radio_key_' + option.id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div id=\"mark_box\" style={{ display: this.state.showMap }} >\r\n          <div id=\"mark_content\">\r\n            <div id=\"mark_left\"></div>\r\n            <div id=\"mark_right\"></div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { suc, dbg } from './customConsole';\r\nimport { Z_OFF, setInitDoneTrue } from '../components/WeatherMaps';\r\n\r\nconst merToEqrWorker = new Worker('mercatorToEquirectangular.js');\r\nconst TEXTURE = new THREE.TextureLoader().load('https://res.cloudinary.com/wikarot/image/upload/v1560488304/globe_src/texture.png');\r\nconst SPECULAR = new THREE.TextureLoader().load('https://res.cloudinary.com/wikarot/image/upload/v1560339154/globe_src/spec.png');\r\nconst BUMP = new THREE.TextureLoader().load('https://res.cloudinary.com/wikarot/image/upload/v1560339155/globe_src/bump.jpg');\r\nTEXTURE.encoding = THREE.sRGBEncoding;\r\nSPECULAR.encoding = THREE.sRGBEncoding;\r\nBUMP.encoding = THREE.sRGBEncoding;\r\nconst URL = {\r\n  base: 'https://tile.openweathermap.org/map/',\r\n  last1: '.png?appid=b280c897878592322aafe56701248929',\r\n  last2: '.png?appid=cdd659df7dc048884575b9451ddf1330'\r\n};\r\nconst MAP = ['clouds_new', 'precipitation_new', 'pressure_new', 'wind_new', 'temp_new'];\r\nconst SPH_SUB_DIV = 64; // sphere sub divisions\r\nexport const SPH_RAD = 0.825; // sphere radius\r\nconst SPH_SCALE = 1.006; // for atmosphere and weather\r\nexport const RES = 512; // weather map resolution\r\nconst T = 2; // tiles by side (total tiles = T * T)\r\nconst T_SIZE = RES / T;\r\nexport const LIGHT_ON = 0.78;\r\nexport const LIGHT_OFF = 0.015;\r\nconst BASE_SPH_GEO = new THREE.SphereBufferGeometry(SPH_RAD, SPH_SUB_DIV, SPH_SUB_DIV);\r\nBASE_SPH_GEO.rotateY(THREE.Math.degToRad(-90)); // horizontal rotation offset correction\r\n\r\nexport const SCENE = new THREE.Scene();\r\nexport const AMB = new THREE.AmbientLight(0xffffff, LIGHT_OFF);\r\nexport const SUN = new THREE.DirectionalLight(0xffffff, LIGHT_ON);\r\nexport const WEATHER_CTX_MAT = [ // context, material\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined]\r\n];\r\n\r\nexport async function init() {\r\n  SCENE.fog = new THREE.Fog(0x74c0ff, Z_OFF - SPH_RAD * 0.82, Z_OFF);\r\n  setSunPosition(SUN);\r\n\r\n  ////////////////////////////////\r\n  // MODELS\r\n  ////////////////////////////////\r\n  const PHYS = new THREE.Mesh(); // physic earth globe\r\n  PHYS.geometry = BASE_SPH_GEO;\r\n  PHYS.material = new THREE.MeshPhongMaterial({\r\n    map: TEXTURE,\r\n    specularMap: SPECULAR,\r\n    specular: new THREE.Color(0x1a1a1a),\r\n    shininess: 55.0,\r\n    bumpMap: BUMP,\r\n    bumpScale: 0.008,\r\n  });\r\n  PHYS.matrixAutoUpdate = false;\r\n  //\r\n  for (let i = 0; i < 5; i++) {\r\n    WEATHER_CTX_MAT[i][0] = document.getElementById('weather_map_' + i).getContext('2d');\r\n    WEATHER_CTX_MAT[i][1] = new THREE.MeshPhongMaterial();\r\n    const AUX = new THREE.CanvasTexture(WEATHER_CTX_MAT[i][0].canvas);\r\n    AUX.encoding = THREE.sRGBEncoding;\r\n    WEATHER_CTX_MAT[i][1].map = AUX;\r\n    WEATHER_CTX_MAT[i][1].shininess = 0.0;\r\n    WEATHER_CTX_MAT[i][1].transparent = true;\r\n    const WEATHER = new THREE.Mesh(BASE_SPH_GEO, WEATHER_CTX_MAT[i][1]);\r\n    WEATHER.layers.set(i + 1);\r\n    WEATHER.scale.multiplyScalar(SPH_SCALE);\r\n    WEATHER.matrixAutoUpdate = false;\r\n    AMB.layers.enable(i + 1);\r\n    SUN.layers.enable(i + 1);\r\n    SCENE.add(WEATHER);\r\n  }\r\n  //\r\n  const ATMO = new THREE.Mesh(); // atmosphere\r\n  ATMO.geometry = BASE_SPH_GEO;\r\n  ATMO.material = new THREE.MeshPhongMaterial({\r\n    color: 0xffffff,\r\n    side: THREE.DoubleSide,\r\n    transparent: true,\r\n    opacity: 0.05,\r\n    shininess: 0.0,\r\n  });\r\n  ATMO.scale.multiplyScalar(SPH_SCALE * .9);\r\n  ATMO.matrixAutoUpdate = false;\r\n\r\n  ////////////////////////////////\r\n  // ALL TOGHETHER\r\n  ////////////////////////////////\r\n  SCENE.add(PHYS, ATMO, AMB, SUN);\r\n\r\n  setInterval(updateSunPosition, 180000); // 3m\r\n  setInitDoneTrue();\r\n}\r\n\r\nfunction updateSunPosition() {\r\n  setSunPosition(SUN);\r\n}\r\n\r\nfunction setSunPosition(sun) {\r\n  const HH = new Date().getUTCHours();\r\n  const MM = new Date().getUTCMonth();\r\n  const MATRIX = new THREE.Matrix4();\r\n  let rotY = 0;\r\n  let rotX = 0;\r\n  // X axis 'inclination' (for months)\r\n  if (MM <= 6) rotX = -(8 * MM) + 24; // y = -8x+24\r\n  else rotX = 8 * MM - 72; // y = 8x-72\r\n  // Y axis rotation (for hours)\r\n  rotY = 180 - (HH / 24) * 360;\r\n  MATRIX.makeRotationFromEuler(new THREE.Euler(\r\n    THREE.Math.degToRad(rotX),\r\n    THREE.Math.degToRad(rotY),\r\n    0, 'YXZ'));\r\n  sun.position.set(0, 0, Z_OFF * 10); // reset the position with just a Z axis displacement\r\n  sun.position.applyMatrix4(MATRIX); // Rotation\r\n  sun.lookAt(0, 0, 0);\r\n}\r\n\r\n/**\r\n * Launch the process of downloading mercator projection (tiles)\r\n * and convert them into a single equirectangular projection (map)\r\n * @param {Number} i Weather map option (index)\r\n */\r\nexport function createWeatherMap(i) {\r\n  const MERCATOR_CANVAS = document.createElement('canvas');\r\n  // 512x512\r\n  MERCATOR_CANVAS.width = RES;\r\n  MERCATOR_CANVAS.height = RES;\r\n  const MERCATOR_CTX = MERCATOR_CANVAS.getContext('2d');\r\n  let cont = 0;\r\n  // merc. proj. images (2x2) to generate a single eqr. proj.\r\n  let X00 = new Image(T_SIZE, T_SIZE);\r\n  let X10 = new Image(T_SIZE, T_SIZE);\r\n  let X01 = new Image(T_SIZE, T_SIZE);\r\n  let X11 = new Image(T_SIZE, T_SIZE);\r\n  X00.crossOrigin = 'Anonymous';\r\n  X10.crossOrigin = 'Anonymous';\r\n  X01.crossOrigin = 'Anonymous';\r\n  X11.crossOrigin = 'Anonymous';\r\n  X00.src = URL.base + MAP[i] + '/1/0/0' + URL.last1;\r\n  X10.src = URL.base + MAP[i] + '/1/1/0' + URL.last1;\r\n  X01.src = URL.base + MAP[i] + '/1/0/1' + URL.last2;\r\n  X11.src = URL.base + MAP[i] + '/1/1/1' + URL.last2;\r\n  X00.onload = async () => await drawMapTiles(X00, T_SIZE * 0, T_SIZE * 0);\r\n  X10.onload = async () => await drawMapTiles(X10, T_SIZE * 1, T_SIZE * 0);\r\n  X01.onload = async () => await drawMapTiles(X01, T_SIZE * 0, T_SIZE * 1);\r\n  X11.onload = async () => await drawMapTiles(X11, T_SIZE * 1, T_SIZE * 1);\r\n  async function drawMapTiles(img, x, y) {\r\n    MERCATOR_CTX.drawImage(img, x, y);\r\n    const T_DATA = MERCATOR_CTX.getImageData(x, y, T_SIZE, T_SIZE);\r\n    const L = T_DATA.data.length;\r\n    // Alpha and color adjust\r\n    if (i === 0) { // Clouds\r\n      for (let i = 0; i < L; i += 4) {\r\n        let A = T_DATA.data[i + 3];\r\n        A = (A - (255 * 0.6)) / 0.4; // range displacement and scale\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] = A * 1.8;\r\n      }\r\n    } else if (i === 1) { // Precipitation\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    } else if (i === 2) { // Pressure\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 3) { // Wind\r\n      for (let i = 0; i < L; i += 4) {\r\n        const R = T_DATA.data[i + 0];\r\n        const G = T_DATA.data[i + 1];\r\n        //const B = TILE.data[i + 2];\r\n        T_DATA.data[i + 0] = 255 - G * 0.75; // R\r\n        T_DATA.data[i + 1] = 255 - R * 0.75; // G\r\n        T_DATA.data[i + 2] = 255 - 255; // B\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 4) { // Temp\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    }\r\n    MERCATOR_CTX.putImageData(T_DATA, x, y);\r\n    cont++;\r\n    if (cont === T * T) { // When all tiles are done: convert Mer. to Eqr.\r\n      for (let y = 0; y < RES; y++) { // Take each line to get his new position\r\n        const LINE = MERCATOR_CTX.getImageData(0, y, RES, 1);\r\n        merToEqrWorker.postMessage([LINE, y, RES, RES / 2, i]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* function createWeatherMap16x16(i) {\r\n  // const RES nedds to be 1024\r\n  let canvasMer = document.createElement('canvas');\r\n  // 1024x1024\r\n  canvasMer.width = RES;\r\n  canvasMer.height = RES;\r\n  let ctxMer = canvasMer.getContext('2d');\r\n  let cont = 0;\r\n  // The Block Of Code\r\n  let X0000 = new Image(T_SIZE, T_SIZE); X0000.crossOrigin = 'Anonymous'; X0000.src = URL.base + MAP[i] + '/2/0/0' + URL.last1; X0000.onload = async () => { await drawMapTiles(X0000, T_SIZE * 0, T_SIZE * 0); };\r\n  let X0001 = new Image(T_SIZE, T_SIZE); X0001.crossOrigin = 'Anonymous'; X0001.src = URL.base + MAP[i] + '/2/1/0' + URL.last1; X0001.onload = async () => { await drawMapTiles(X0001, T_SIZE * 1, T_SIZE * 0); };\r\n  let X0010 = new Image(T_SIZE, T_SIZE); X0010.crossOrigin = 'Anonymous'; X0010.src = URL.base + MAP[i] + '/2/2/0' + URL.last1; X0010.onload = async () => { await drawMapTiles(X0010, T_SIZE * 2, T_SIZE * 0); };\r\n  let X0011 = new Image(T_SIZE, T_SIZE); X0011.crossOrigin = 'Anonymous'; X0011.src = URL.base + MAP[i] + '/2/3/0' + URL.last1; X0011.onload = async () => { await drawMapTiles(X0011, T_SIZE * 3, T_SIZE * 0); };\r\n  let X0100 = new Image(T_SIZE, T_SIZE); X0100.crossOrigin = 'Anonymous'; X0100.src = URL.base + MAP[i] + '/2/0/1' + URL.last1; X0100.onload = async () => { await drawMapTiles(X0100, T_SIZE * 0, T_SIZE * 1); };\r\n  let X0101 = new Image(T_SIZE, T_SIZE); X0101.crossOrigin = 'Anonymous'; X0101.src = URL.base + MAP[i] + '/2/1/1' + URL.last1; X0101.onload = async () => { await drawMapTiles(X0101, T_SIZE * 1, T_SIZE * 1); };\r\n  let X0110 = new Image(T_SIZE, T_SIZE); X0110.crossOrigin = 'Anonymous'; X0110.src = URL.base + MAP[i] + '/2/2/1' + URL.last1; X0110.onload = async () => { await drawMapTiles(X0110, T_SIZE * 2, T_SIZE * 1); };\r\n  let X0111 = new Image(T_SIZE, T_SIZE); X0111.crossOrigin = 'Anonymous'; X0111.src = URL.base + MAP[i] + '/2/3/1' + URL.last1; X0111.onload = async () => { await drawMapTiles(X0111, T_SIZE * 3, T_SIZE * 1); };\r\n  let X1000 = new Image(T_SIZE, T_SIZE); X1000.crossOrigin = 'Anonymous'; X1000.src = URL.base + MAP[i] + '/2/0/2' + URL.last2; X1000.onload = async () => { await drawMapTiles(X1000, T_SIZE * 0, T_SIZE * 2); };\r\n  let X1001 = new Image(T_SIZE, T_SIZE); X1001.crossOrigin = 'Anonymous'; X1001.src = URL.base + MAP[i] + '/2/1/2' + URL.last2; X1001.onload = async () => { await drawMapTiles(X1001, T_SIZE * 1, T_SIZE * 2); };\r\n  let X1010 = new Image(T_SIZE, T_SIZE); X1010.crossOrigin = 'Anonymous'; X1010.src = URL.base + MAP[i] + '/2/2/2' + URL.last2; X1010.onload = async () => { await drawMapTiles(X1010, T_SIZE * 2, T_SIZE * 2); };\r\n  let X1011 = new Image(T_SIZE, T_SIZE); X1011.crossOrigin = 'Anonymous'; X1011.src = URL.base + MAP[i] + '/2/3/2' + URL.last2; X1011.onload = async () => { await drawMapTiles(X1011, T_SIZE * 3, T_SIZE * 2); };\r\n  let X1100 = new Image(T_SIZE, T_SIZE); X1100.crossOrigin = 'Anonymous'; X1100.src = URL.base + MAP[i] + '/2/0/3' + URL.last2; X1100.onload = async () => { await drawMapTiles(X1100, T_SIZE * 0, T_SIZE * 3); };\r\n  let X1101 = new Image(T_SIZE, T_SIZE); X1101.crossOrigin = 'Anonymous'; X1101.src = URL.base + MAP[i] + '/2/1/3' + URL.last2; X1101.onload = async () => { await drawMapTiles(X1101, T_SIZE * 1, T_SIZE * 3); };\r\n  let X1110 = new Image(T_SIZE, T_SIZE); X1110.crossOrigin = 'Anonymous'; X1110.src = URL.base + MAP[i] + '/2/2/3' + URL.last2; X1110.onload = async () => { await drawMapTiles(X1110, T_SIZE * 2, T_SIZE * 3); };\r\n  let X1111 = new Image(T_SIZE, T_SIZE); X1111.crossOrigin = 'Anonymous'; X1111.src = URL.base + MAP[i] + '/2/3/3' + URL.last2; X1111.onload = async () => { await drawMapTiles(X1111, T_SIZE * 3, T_SIZE * 3); };\r\n  async function drawMapTiles(img, x, y) {\r\n    ctxMer.drawImage(img, x, y);\r\n    cont++;\r\n    const T_DATA = ctxMer.getImageData(x, y, T_SIZE, T_SIZE);\r\n    const L = T_DATA.data.length;\r\n    // Alpha and color adjust\r\n    if (i === 0) { // Clouds\r\n      for (let i = 0; i < L; i += 4) {\r\n        let A = T_DATA.data[i + 3];\r\n        A = (A - (255 * 0.6)) / 0.4; // range displacement and scale\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] = A * 1.8;\r\n      }\r\n    } else if (i === 1) { // Precipitation\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    } else if (i === 2) { // Pressure\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 3) { // Wind\r\n      for (let i = 0; i < L; i += 4) {\r\n        const R = T_DATA.data[i + 0];\r\n        const G = T_DATA.data[i + 1];\r\n        //const B = TILE.data[i + 2];\r\n        T_DATA.data[i + 0] = 255 - G * 0.75; // R\r\n        T_DATA.data[i + 1] = 255 - R * 0.75; // G\r\n        T_DATA.data[i + 2] = 255 - 255; // B\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 4) { // Temp\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    }\r\n    ctxMer.putImageData(T_DATA, x, y);\r\n    if (cont === 16) { // When all tiles are done: convert Mer. to Eqr.\r\n      for (let y = 0; y < RES; y++) { // Take each line to get his new position (Y axis)\r\n        const LINE = ctxMer.getImageData(0, y, RES, 1);\r\n        merToEqrWorker.postMessage([LINE, y, RES, RES / 2, i]);\r\n      }\r\n    }\r\n  }\r\n} */\r\n\r\nlet messageCount = 0;\r\nmerToEqrWorker.onmessage = (e) => {\r\n  const I = e.data[0];\r\n  e.data[1].forEach(async merY => {\r\n    await WEATHER_CTX_MAT[I][0].putImageData(merY.content, 0, merY.newY);\r\n  });\r\n  /* for (let i = 0; i < 512; i++) {\r\n    weatherPack[I][0].putImageData(e.data[1][i].content, 0, e.data[1][i].newY);\r\n  } */\r\n  dbg('Mapa equirectangular \"' + MAP[I] + '\": Creado...');\r\n  WEATHER_CTX_MAT[I][1].map.needsUpdate = true;\r\n  // Put data on map master canvas (from first/default map)\r\n  if (I === 0)\r\n    document.getElementById('map_canvas')\r\n      .getContext('2d')\r\n      .putImageData(WEATHER_CTX_MAT[0][0].getImageData(0, 0, RES, RES * .5), 0, 0);\r\n  messageCount++;\r\n  if (messageCount === 5) suc('Mapas equirectangulares: Finalizados (5 de 5)');\r\n}\r\n\r\n/*\r\n\r\nLAYERS | NAME\r\n---\r\n0 phisic globe\r\n1 clouds\r\n2 pressipitation\r\n3 pressure\r\n4 wind\r\n5 temperature\r\n\r\n*/\r\n","let intervalHandler = 0;\r\nlet target = 0;\r\nlet currentScroll = 0;\r\nlet step = 0;\r\nlet cont = 0;\r\n\r\n/**\r\n * Init Smooth Scroll\r\n */\r\nexport function initSS(newTarget) {\r\n  clearInterval(intervalHandler);\r\n  cont = 0;\r\n  target = newTarget;\r\n  currentScroll = document.documentElement.scrollTop;\r\n  step = (currentScroll - target) / 60;\r\n  intervalHandler = setInterval(runSS, 0);\r\n}\r\n\r\n/**\r\n * Cancel Smooth Scroll\r\n */\r\nexport function cancelSS() {\r\n  clearInterval(intervalHandler);\r\n}\r\n\r\nfunction runSS() {\r\n  let diff = step * cont;\r\n  window.scrollTo(0, currentScroll - diff);\r\n  if (cont === 60) clearInterval(intervalHandler);\r\n  cont++;\r\n}","import React, { Component } from 'react'\r\nimport Icon from './Icon';\r\nimport * as THREE from 'three';\r\nimport { SCENE, SPH_RAD, RES } from '../js/threeStuff';\r\nimport { CITY_LABELS } from './WeatherMaps';\r\nimport { initSS } from '../js/smoothScroll';\r\nimport { not } from '../js/customConsole';\r\n\r\nconst TIME_TO_UPDATE = 20 * 60000; // ms\r\nconst H = RES / 2;\r\nconst DOT_GEO = new THREE.SphereBufferGeometry(0.001, 3, 2);\r\nconst DOT_MAT = new THREE.MeshBasicMaterial({ transparent: true, opacity: 0, precision: \"lowp\" });\r\nconst LINE_MAT = new THREE.LineBasicMaterial({ fog: false, color: '#b4b4b4' });\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: '',\r\n      timeTimer: undefined,\r\n      updateTimer: undefined,\r\n    };\r\n    this.id = this.props.data.id; // city id\r\n    this.iconId = this.props.data.icon; // icon code\r\n    this.weatherId = this.props.data.weatherId; // weather code (more speciffic than icon code)\r\n    /* if (\r\n      (this.props.data.weatherId > 701 &&\r\n        this.props.data.weatherId < 741) ||\r\n      (this.props.data.weatherId > 741 &&\r\n        this.props.data.weatherId < 781)\r\n    ) {\r\n      this.iconId = '50'; // neither sun nor moon\r\n    } else */\r\n    if (this.props.data.weatherId === 781) this.iconId = '50tornado'; //tornado\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.createTag = this.createTag.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTime();\r\n    this.createTag();\r\n    this.setState({\r\n      updateTimer: setInterval(() => {\r\n        not(this.props.fullName + ': Actualización automática...');\r\n        this.update();\r\n      }, TIME_TO_UPDATE)\r\n    });\r\n    this.setState({\r\n      timeTimer: setInterval(() => {\r\n        this.getTime()\r\n      }, 60000)\r\n    });\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let dot, line;\r\n    CITY_LABELS.forEach(item => {\r\n      if (item.id === this.id) { dot = item.dot; line = item.line; }\r\n    });\r\n    SCENE.remove(dot, line); // remove it from the scene\r\n    CITY_LABELS.filter(item => item.id !== this.id); // remove it from the \"list\"\r\n    document.getElementById('city_label_' + this.id).remove(); // remove it from the DOM\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  getTime() {\r\n    const OFFSET = ((this.props.data.timezone / 60) / 60); // timezone = seconds --> OFFSET hours\r\n    const OFFSET_F = Math.floor(OFFSET); // Integer from OFFSET (the offset can be XX hours AND 30 minutes in some cases)\r\n    let mm_off = 0;\r\n    if (OFFSET_F !== OFFSET) mm_off = Math.floor((OFFSET - OFFSET_F) * 60);\r\n    let hh = new Date().getUTCHours() + OFFSET_F;\r\n    let mm = new Date().getUTCMinutes() + mm_off;\r\n    if (mm > 59) { hh++; mm -= 60; }\r\n    if (hh > 23) hh -= 24;\r\n    if (hh < 0) hh = 24 + hh;\r\n    if (hh < 10 && hh >= 0) hh = '0' + hh;\r\n    if (mm < 10) mm = '0' + mm;\r\n    this.setState({ time: (hh + ':' + mm) });\r\n  }\r\n\r\n  createTag() {\r\n    let lbl = document.createElement('div');\r\n    lbl.textContent = this.props.data.cityName;\r\n    lbl.className = 'city_label';\r\n    lbl.id = 'city_label_' + this.id;\r\n    document.getElementById('labels').appendChild(lbl);\r\n    lbl.onclick = () => {\r\n      const offsetTop = document.getElementById('card_' + this.id).offsetTop;\r\n      initSS(100 + offsetTop - 16); // 100 header and 16 card margin\r\n    };\r\n\r\n    // Rotation matrix\r\n    const MTX = new THREE.Matrix4();\r\n    const { lat, lon } = this.props.data.coord;\r\n    MTX.makeRotationFromEuler(new THREE.Euler(\r\n      THREE.Math.degToRad(-lat), // X axe, horizontal rotation\r\n      THREE.Math.degToRad(+lon), // Y axe, Vectical rotation\r\n      0, 'YXZ'));\r\n    // Invisible dot to hold the label position\r\n    const DOT = new THREE.Mesh(DOT_GEO, DOT_MAT);\r\n    DOT.name = this.id;\r\n    DOT.position.set(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX);\r\n    const LINE_GEO = new THREE.Geometry();\r\n    LINE_GEO.vertices.push(\r\n      new THREE.Vector3(0, 0, 0),\r\n      new THREE.Vector3(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX));\r\n    const LINE = new THREE.Line(LINE_GEO, LINE_MAT);\r\n\r\n    // Add line and dot to global scene\r\n    SCENE.add(DOT, LINE);\r\n    // Coordinates to print the label on \"flat\" map\r\n    const X = (180 + lon) / 360 * RES;\r\n    const Y = -(lat * (H / 180)) + H * 0.5;\r\n    // Add a city name label to labels public container\r\n    CITY_LABELS.push({ id: this.id, label: lbl, dot: DOT, line: LINE, x: X, y: Y });\r\n  }\r\n\r\n  update() {\r\n    this.props.update(this.id, this.props.fullName);\r\n  }\r\n\r\n  remove() {\r\n    this.props.remove(this.id, this.props.fullName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id={'card_' + this.id}\r\n        className=\"card\"\r\n        rotated={this.state.rotated} >\r\n        <div className=\"card_header\"\r\n          title={\r\n            this.props.fullName + ' (' +\r\n            this.props.extras.countryNameNative + ')'}>\r\n          <h2 className=\"name\"><em>{this.props.fullName}</em></h2>\r\n          <div className=\"icon_small\">\r\n            <span>\r\n              <img\r\n                src={'https://www.countryflags.io/' + this.props.data.countryCode + '/shiny/16.png'}\r\n                alt={'Bandera de ' + this.props.extras.countryName}\r\n                title={'Bandera de ' + this.props.extras.countryName} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"temp\">\r\n          <p className=\"temp_current\">{this.props.data.temp}°</p>\r\n          <p className=\"temp_max\"><span>Máx</span>{this.props.data.tempMax}°</p>\r\n          <p className=\"temp_min\"><span>Mín</span>{this.props.data.tempMin}°</p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"desc\">\r\n          <p className=\"desc\">{this.props.data.desc}</p>\r\n          <Icon name={this.iconId} />\r\n        </div>\r\n        <hr />\r\n        <div className=\"others\">\r\n          <div className=\"hum\">\r\n            <p>Humedad</p><span>{this.props.data.hum}%</span>\r\n          </div>\r\n          <div className=\"cloud\">\r\n            <p>Nubosidad</p><span>{this.props.data.cloud}%</span>\r\n          </div>\r\n          <div className=\"wind\">\r\n            <p>Viento</p><span>{this.props.data.wind}km/h</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"card_control\">\r\n          <button className=\"loading_box\" onClick={this.update} title=\"Actualizar\">\r\n            <Icon name=\"refresh\" classes={['btn']} />\r\n            <Icon name=\"loading_loop\" />\r\n          </button>\r\n          <span className=\"time\">\r\n            {this.state.time}\r\n          </span>\r\n          <button onClick={this.remove} title=\"Cerrar\" >\r\n            <Icon name=\"close\" classes={['btn']} />\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Prediction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    const { start, match, finish, country } = this.props.data;\r\n    this.props.onClick(start + match + finish + ', ' + country);\r\n  }\r\n\r\n  render() {\r\n    const { start, match, finish, country } = this.props.data;\r\n    return (\r\n      <div className=\"prediction\" onClick={e => this.onClick(e)}>\r\n        <span>\r\n          <p><strong>{start}</strong>{match}<strong>{finish}</strong><em> - {country}</em></p>\r\n        </span>\r\n        <input type=\"hidden\"\r\n          value={start + match + finish + ', ' + country}\r\n          style={{ display: 'none' }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Icon from './Icon';\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.iconWord = 'not_';\r\n    switch (this.props.data.type) {\r\n      case 'success':\r\n        this.iconWord += 'success';\r\n        break;\r\n      case 'info':\r\n        this.iconWord += 'info';\r\n        break;\r\n      case 'alert':\r\n        this.iconWord += 'alert';\r\n        break;\r\n      case 'error':\r\n        this.iconWord += 'error';\r\n        break;\r\n      default:\r\n        /* that's bad */\r\n        break;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.remove();\r\n  }\r\n\r\n  remove() {\r\n    setTimeout(() => {\r\n      this.props.remove(this.props.data.id);\r\n    }, 4000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'notification ' + this.props.data.type}>\r\n        <Icon name={this.iconWord} />\r\n        <p>{this.props.data.msg}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Icon from './Icon';\r\nimport { initSS } from '../js/smoothScroll';\r\n\r\nexport default function ToTopBtn() {\r\n  return (\r\n    <button id=\"to_top_btn\" onClick={() => initSS(0)} title=\"Volver arriba\">\r\n      <Icon name=\"top_arrow\" classes={['btn']} />\r\n    </button>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport CustomChk from './CustomChk';\r\n\r\nexport default class About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showRss: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById('custom_chk_about_chevron').onchange = () => {\r\n      this.setState({ showRss: !this.state.showRss });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article id=\"about\" >\r\n        <div id=\"about_header\">\r\n          <h3><em>Acerca de</em></h3>\r\n          <div className=\"isotipo icon_small\">\r\n            <span><img src=\"favicon-16x16.png\" alt=\"Icono de this.weather\" /></span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div id=\"about_body\">\r\n          <p>Un medio de acceso <br /> al estado del tiempo.</p>\r\n        </div>\r\n        <hr />\r\n        <div id=\"about_rss\">\r\n          <div id=\"about_rss_header\">\r\n            <h4><em>Recursos</em></h4>\r\n            <CustomChk idWord=\"about_chevron\" iconWordA=\"chevron\" titleWord=\"Expandir/Contraer\" />\r\n          </div>\r\n          <article id=\"about_rss_body\" expanded={`${this.state.showRss}`}>\r\n            <hr />\r\n            <h5><em>Información</em></h5>\r\n            <ul>\r\n              <li>Geolocalización - <a href=\"https://ipgeolocation.io\">ipgeolocation</a></li>\r\n              <li>Meteorología - <a href=\"https://openweathermap.org\">OpenWeatherMaps</a></li>\r\n              <li>Datos - <a href=\"https://restcountries.eu\">REST Countries</a></li>\r\n            </ul>\r\n            <hr />\r\n            <h5><em>Media</em></h5>\r\n            <ul>\r\n              <li>Mapas - <a href=\"http://www.shadedrelief.com/natural3/\">Natural Earth III</a></li>\r\n              <li>Mapas - <a href=\"https://visibleearth.nasa.gov\">NASA Visible Earth</a></li>\r\n              <li>Banderas - <a href=\"https://www.countryflags.io\">CountryFlags</a></li>\r\n              <li>Fuentes - <a href=\"https://fonts.google.com\">Google Fonts</a></li>\r\n              <li>Iconos - <a href=\"https://material.io\">Material design</a></li>\r\n              <li>Favicon - <a href=\"https://realfavicongenerator.net\">RealFaviconGenerator</a></li>\r\n            </ul>\r\n          </article>\r\n        </div>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n","import CITY_LIST from '../apis/city.list.min.json';\r\nimport ALL_LIST from '../apis/all.json';\r\n\r\nconst OPEN_WEATHER = {\r\n  api: 'https://api.openweathermap.org/data/2.5/weather?',\r\n  fin: '&appid=b280c897878592322aafe56701248929&units=metric&lang=es'\r\n};\r\n\r\nexport async function getPredictions(inputName) {\r\n  return await (() => {\r\n    let c = undefined;\r\n    let newList = [];\r\n    // Create prediction list (minimum of 3 characters typed)\r\n    if (inputName.length > 2) {\r\n      inputName = inputName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n      const TEST = new RegExp(' ' + inputName, 'i');\r\n      const RE_A = new RegExp('(.*)' + inputName, 'i');\r\n      const RE_B = new RegExp(inputName, 'i');\r\n      const RE_C = new RegExp(inputName + '(.*)', 'i');\r\n      // Search on city list (local API) & Maximum of 6 predictions\r\n      for (let i = 0; (i < 209579) && (newList.length < 8); i++) {\r\n        c = CITY_LIST[i];\r\n        if (TEST.test(' ' + c.n)) { // n = name (city name)\r\n          if (inputName.length === c.n.length)\r\n            newList.unshift({\r\n              start: RE_A.exec(c.n)[1],\r\n              match: RE_B.exec(c.n)[0],\r\n              finish: RE_C.exec(c.n)[1],\r\n              country: c.c, id: i\r\n            });\r\n          else\r\n            newList.push({\r\n              start: RE_A.exec(c.n)[1],\r\n              match: RE_B.exec(c.n)[0],\r\n              finish: RE_C.exec(c.n)[1],\r\n              country: c.c, id: i\r\n            });\r\n        }\r\n      }\r\n      return newList;\r\n    } // else\r\n    return [];\r\n  })();\r\n}\r\n\r\nexport async function getExtras(countryCode) {\r\n  for (let i = 0; i < 250; i++) {\r\n    if (ALL_LIST[i].alpha2Code === countryCode) {\r\n      const ITEM = ALL_LIST[i];\r\n      return {\r\n        countryName: ITEM.translations.es,\r\n        countryNameNative: ITEM.nativeName,\r\n        timeZone: ITEM.timezones[0]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getUserLocation() {\r\n  const RES = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=15d8e57eb4aa4015bb32a04d73b67b19');\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return `${RES_JSON.city}, ${RES_JSON.country_code2}`;\r\n  }\r\n}\r\n\r\nexport async function getWeather(inputName) {\r\n  const URL = (\r\n    OPEN_WEATHER.api +\r\n    'q=' + inputName +\r\n    OPEN_WEATHER.fin\r\n  );\r\n  const RES = await fetch(URL);\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return {\r\n      id: RES_JSON.id,\r\n      cloud: RES_JSON.clouds.all,\r\n      coord: { lat: RES_JSON.coord.lat, lon: RES_JSON.coord.lon },\r\n      countryCode: RES_JSON.sys.country,\r\n      weatherId: RES_JSON.weather[0].id,\r\n      desc: RES_JSON.weather[0].description,\r\n      hum: RES_JSON.main.humidity,\r\n      icon: RES_JSON.weather[0].icon,\r\n      cityName: RES_JSON.name,\r\n      temp: Math.round(RES_JSON.main.temp),\r\n      tempMax: Math.round(RES_JSON.main.temp_max),\r\n      tempMin: Math.round(RES_JSON.main.temp_min),\r\n      timezone: RES_JSON.timezone,\r\n      wind: Math.round(RES_JSON.wind.speed * 3.6)\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\nkey: '&appid=b280c897878592322aafe56701248929',\r\nunits: '&units=metric',\r\nlang: '&lang=es'\r\n */\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Card from './components/Card';\r\nimport WeatherMaps from './components/WeatherMaps';\r\nimport Icon from './components/Icon';\r\nimport Prediction from './components/Prediction';\r\nimport Notification from './components/Notification';\r\nimport ToTopBtn from './components/ToTopBtn';\r\nimport About from './components/About';\r\nimport { getPredictions, getUserLocation, getExtras, getWeather } from './js/getFromAPIs';\r\nimport { initSS, cancelSS } from './js/smoothScroll';\r\nimport { suc, alt, err, dbg } from './js/customConsole';\r\n\r\n/* const PRELOAD_CITIES = [\r\n  'Cairo,EG',             // africa\r\n  'Kingston,JM',          // america c\r\n  'Alaska,US',            // america n\r\n  'Amazonas,BR',          // america s\r\n  'McMurdo Station,AQ',   // antartida\r\n  'Tokyo,JP',             // asia\r\n  'Berlin,DE',            // europa\r\n  'Sydney,AU',            // oceania\r\n  'Cape Town,ZA',         // -africa\r\n  'Panama,PA',            // -america c\r\n  'Ottawa,CA',            // -america n\r\n  'Montevideo,UY',        // -america s\r\n  'Busan,KR',             // -asia\r\n  'Moscow,RU',            // -europa\r\n  'Wellington,NZ',        //- oceania\r\n]; */\r\n\r\nexport default class ThisWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      cardList: [],\r\n      predictionList: [],\r\n      notificationList: [],\r\n    };\r\n    this.inputBox = undefined;\r\n    this.predictionListBox = undefined;\r\n    this.toTopBtn = undefined;\r\n    this.currentFocus = -1;\r\n    this.inputKeyDown = this.inputKeyDown.bind(this);\r\n    this.inputChanged = this.inputChanged.bind(this);\r\n    this.fireSearch = this.fireSearch.bind(this);\r\n    this.stopSearchingLoop = this.stopSearchingLoop.bind(this);\r\n    this.addCard = this.addCard.bind(this);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.removeCard = this.removeCard.bind(this);\r\n    this.removeNotification = this.removeNotification.bind(this);\r\n    this.predictionClick = this.predictionClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getUserLocation().then(res => {\r\n      if (res > 200)\r\n        err('Error al localizar el dispositivo (error ' + res + ')');\r\n      else {\r\n        dbg(`Dispositivo localizado...`);\r\n        this.addCard(res);\r\n      }\r\n    });\r\n    this.focusID('input_query');\r\n    this.inputBox = document.getElementById('input_query');\r\n    this.predictionListBox = document.getElementById('prediction_box');\r\n    this.toTopBtn = document.getElementById('to_top_btn');\r\n    document.addEventListener('click', e => {\r\n      if ((e.target !== this.inputBox) && (this.state.predictionList.length > 0))\r\n        this.resetPredictionList(e.target);\r\n    });\r\n    window.addEventListener('scroll', () => {\r\n      if (document.documentElement.scrollTop > 100) this.toTopBtn.style.transform = 'scale(1)';\r\n      else this.toTopBtn.style.transform = '';\r\n    });\r\n    window.addEventListener('wheel', () => cancelSS());\r\n  }\r\n\r\n  /**\r\n   * App functionality & utils\r\n   */\r\n\r\n  async inputKeyDown(e) {\r\n    // Current predictions displayed\r\n    let predListDOM = this.predictionListBox.getElementsByClassName('prediction');\r\n    if (e.keyCode === 40) { // key down\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction\r\n        this.currentFocus++;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 38) { // key up\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction        \r\n        this.currentFocus--;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 27) { // escape\r\n      // Clean the input\r\n      this.setState({ input: '', predictionList: [] });\r\n    } else if (e.keyCode === 13) { // enter\r\n      e.preventDefault();\r\n      this.resetPredictionList(e.target); // hide predlist while searching\r\n      if ((this.state.predictionList.length > 0) &&\r\n        (document.querySelector('.active_prediction') !== null)) {\r\n        // if there are predictions AND there is an active one, search that\r\n        const VAL = document.querySelector('.active_prediction input').value;\r\n        this.fireSearch(VAL);\r\n      } else {\r\n        // else, try to search based on input value\r\n        this.setState({ input: e.target.value });\r\n        this.fireSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  async inputChanged(e) {\r\n    this.resetPredictionList();\r\n    this.setState({\r\n      input: e.target.value,\r\n      predictionList: [],\r\n    });\r\n    const PREDS = await getPredictions(e.target.value);\r\n    this.setState({ predictionList: PREDS });\r\n  }\r\n\r\n  fireSearch(inputName) {\r\n    if (!this.isOnLine()) return; // if it's online, continue\r\n    if (typeof inputName === 'string') // if there is an specific input (parameter)\r\n      this.addCard(inputName);\r\n    else if (this.state.input.length > 0) // else, if there is text in the input box\r\n      this.addCard(this.state.input);\r\n    this.focusID('input_query'); // if not, return focus to the input box\r\n  }\r\n\r\n  isOnLine() {\r\n    if (window.navigator.onLine) return true;\r\n    const MSG = 'Equipo offline';\r\n    this.addNotification(MSG, 'error');\r\n    err(MSG);\r\n    return false;\r\n  }\r\n\r\n  focusID(id) {\r\n    document.getElementById(id).focus();\r\n  }\r\n\r\n  stopSearchingLoop() {\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  stopUpdatingLoop(id) {\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.remove('loading');\r\n  }\r\n\r\n  /**\r\n   * Weather Card functionality\r\n   */\r\n\r\n  async addCard(inputName) {\r\n    document.getElementById('search_btn').classList.add('loading');\r\n    dbg(inputName + ': Consultando API...');\r\n    const DATA = await getWeather(inputName).catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = 'No se encontraron resulados';\r\n      this.addNotification(MSG, 'alert');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n    const FULL_NAME = DATA.cityName + ', ' + DATA.countryCode; // Complete name used for the card title\r\n\r\n    // Check if it already exists\r\n    if (this.state.cardList.length > 0) {\r\n      let exist = false;\r\n      this.state.cardList.forEach(card => {\r\n        if (DATA.id === card.data.id) return exist = true;\r\n      });\r\n      if (exist) {\r\n        const MSG = 'Resultado ya incluido';\r\n        this.addNotification(MSG, 'info');\r\n        alt(FULL_NAME + ': ' + MSG);\r\n        this.stopSearchingLoop();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add the card\r\n    const EXTRAS = await getExtras(DATA.countryCode); // get extra data\r\n    this.setState({\r\n      cardList: [...this.state.cardList, { fullName: FULL_NAME, data: DATA, extras: EXTRAS }],\r\n      input: '', // Clean input box\r\n      predictionList: [] // Clean predictions\r\n    });\r\n    this.stopSearchingLoop();\r\n    dbg(inputName + ' --> ' + FULL_NAME + '...');\r\n    suc(FULL_NAME + ': Agregado');\r\n  }\r\n\r\n  async updateCard(id, fullName) {\r\n    if (!this.isOnLine()) return;\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.add('loading');\r\n    dbg(fullName + ': Actualizando...');\r\n    const DATA = await getWeather(fullName).catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = fullName + ': Error al actualizar';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(fullName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n\r\n    // Find card index in list\r\n    let i = undefined;\r\n    this.state.cardList.forEach(card => {\r\n      if (card.data.id === id) i = this.state.cardList.indexOf(card);\r\n    });\r\n\r\n    // Update card\r\n    let newCardList = this.state.cardList;\r\n    newCardList[i].data = DATA;\r\n    this.setState({ cardList: newCardList });\r\n    const MSG = fullName + ': Actualizado';\r\n    this.addNotification(MSG, 'success');\r\n    this.stopUpdatingLoop(id);\r\n    suc(MSG);\r\n  }\r\n\r\n  removeCard(id, fullName) {\r\n    this.setState(prevState => ({\r\n      cardList: prevState.cardList.filter(item => item.data.id !== id)\r\n    }));\r\n    suc(fullName + ': Eliminado');\r\n  }\r\n\r\n  /**\r\n   * Notification functionality\r\n   */\r\n\r\n  addNotification(msg, type) {\r\n    let newNotList = this.state.notificationList;\r\n    if (newNotList.length >= 6) newNotList.shift();\r\n    this.setState({\r\n      notificationList: [...newNotList, { msg: msg, type: type, id: new Date().getTime() }]\r\n    });\r\n  }\r\n\r\n  removeNotification(id) {\r\n    this.setState(prevState => ({\r\n      notificationList: prevState.notificationList.filter(item => item.id !== id)\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Prediction functionality\r\n   */\r\n\r\n  predictionClick(value) {\r\n    this.resetPredictionList();\r\n    this.fireSearch(value);\r\n  }\r\n\r\n  addActivePrediction(predListDOM) {\r\n    // Actually add/set\r\n    this.removeActivePrediction(predListDOM);\r\n    if (this.currentFocus >= predListDOM.length) this.currentFocus = 0;\r\n    if (this.currentFocus < 0) this.currentFocus = (predListDOM.length - 1);\r\n    if (predListDOM.length) predListDOM[this.currentFocus].classList.add('active_prediction');\r\n  }\r\n\r\n  removeActivePrediction(predListDOM) {\r\n    for (var i = 0; i < predListDOM.length; i++)\r\n      predListDOM[i].classList.remove('active_prediction');\r\n  }\r\n\r\n  resetPredictionList() {\r\n    this.currentFocus = -1;\r\n    this.setState({ predictionList: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <header>\r\n          <div id=\"search_box\" predvisible={this.state.predictionList.length > 0 ? 'true' : 'false'}>\r\n            <button id=\"search_btn\"\r\n              className=\"loading_box loading\"\r\n              title=\"Buscar\"\r\n              onClick={this.fireSearch} >\r\n              <Icon name=\"search\" classes={['btn', 'perma_active']} viewbox=\"0 0 48 48\" />\r\n              <Icon name=\"loading_loop\" />\r\n            </button>\r\n            <input id=\"input_query\"\r\n              type=\"text\"\r\n              value={this.state.input}\r\n              placeholder=\"Buscar una cuidad\"\r\n              onKeyDown={e => this.inputKeyDown(e)}\r\n              onChange={e => this.inputChanged(e)}\r\n              onFocus={e => this.inputChanged(e)}\r\n              autoComplete=\"off\"\r\n              alt=\"Buscar una cuidad\" />\r\n            <div id=\"prediction_box\" >\r\n              {this.state.predictionList.map(item => (\r\n                <Prediction\r\n                  data={item}\r\n                  key={item.id}\r\n                  onClick={this.predictionClick} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/this.weather/\">Hogar</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/about\">Acerca de</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <Route exact path=\"/this.weather/\" render={props => (\r\n            <div id=\"main_content\">\r\n              <div id=\"card_box\">\r\n                {this.state.cardList.map(item => (\r\n                  <Card\r\n                    fullName={item.fullName}\r\n                    data={item.data}\r\n                    extras={item.extras}\r\n                    key={item.data.id}\r\n                    update={this.updateCard}\r\n                    remove={this.removeCard} />\r\n                ))}\r\n              </div>\r\n              <hr />\r\n              <button id=\"to_maps_btn\"\r\n                onClick={() => initSS(64 + document.getElementById('weather_maps').offsetTop - 16)} >\r\n                <Icon name=\"chevron\" classes={['chevron_down', 'btn']} />\r\n              </button>\r\n              <div id=\"weather_maps_box\">\r\n                <WeatherMaps />\r\n              </div>\r\n              <div id=\"notification_box\">\r\n                <div id=\"notification_content\">\r\n                  {this.state.notificationList.map(item => (\r\n                    <Notification\r\n                      data={item}\r\n                      key={item.id}\r\n                      remove={this.removeNotification} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )} />\r\n          <Route path=\"/this.weather/about\" component={About} />\r\n          <div id=\"to_top_btn_box\">\r\n            <ToTopBtn />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div id=\"footer_content\">\r\n            <div id=\"brand_box\">\r\n              <a id=\"imagotipo\" href=\"http://wikarot.github.io/this.weather\" title=\"this.weather\">\r\n                <div className=\"isotipo icon_small\">\r\n                  <span>\r\n                    <img src=\"favicon-16x16.png\" alt=\"Icono de this.weather\" />\r\n                  </span>\r\n                </div>\r\n                <h1 id=\"logotipo\"><em>this</em>.weather</h1>\r\n              </a>\r\n            </div>\r\n            <div id=\"cc\">\r\n              <span>\r\n                <p>Copyright 2019 <a href=\"https://github.com/Wikarot\">Leo de S.L.F</a></p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n        <div id=\"weather_maps_container\" style={{ display: 'none' }} >\r\n          <canvas id=\"weather_map_0\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_1\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_2\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_3\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_4\" width=\"512\" height=\"256\" />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// MS_ACC b280c897878592322aafe56701248929\r\n// GG_Acc cdd659df7dc048884575b9451ddf1330\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.css';\nimport ThisWeather from './ThisWeather';\nimport { fcy } from './js/customConsole';\n\nfcy('Welcome to this.weather!');\n\nReactDOM.render(<ThisWeather />, document.getElementById('root'));\n"],"sourceRoot":""}