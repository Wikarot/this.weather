{"version":3,"sources":["js/threeStuff.js","js/customConsole.js","components/Card.js","components/Prediction.js","components/Notification.js","js/smoothScroll.js","components/ToTopBtn.js","js/getFromAPIs.js","ThisWeather.js","index.js","components/Icon.js","js/utils.js"],"names":["merToEqrWorker","Worker","URL","base","last1","last2","MAP","SPH_RAD","SPH_SCALE","RES","T","T_SIZE","LIGHT_ON","LIGHT_OFF","BASE_SPH_GEO","SphereBufferGeometry","rotateY","THREE_MATH","degToRad","SCENE","Scene","AMB","AmbientLight","SUN","DirectionalLight","WEATHER_CTX_MAT","undefined","init","_init","apply","this","arguments","_callee7","TEXTURE","SPECULAR","BUMP","PHYS","i","AUX","WEATHER","ATMO","c_Users_Leo_Google_Drive_Proyectos_Proyectos_Visual_Studio_Code_Website_this_weather_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context7","prev","next","TextureLoader","load","encoding","sRGBEncoding","fog","Fog","Z_OFF","setSunPosition","Mesh","geometry","material","MeshPhongMaterial","map","specularMap","specular","Color","shininess","bumpMap","bumpScale","matrixAutoUpdate","document","getElementById","getContext","CanvasTexture","canvas","transparent","layers","set","scale","multiplyScalar","enable","add","color","side","DoubleSide","opacity","setInterval","updateSunPosition","setInitDone","stop","sun","rotY","HH","Date","getUTCHours","MM","getUTCMonth","MATRIX","Matrix4","rotX","makeRotationFromEuler","Euler","position","applyMatrix4","lookAt","createWeatherMap","MERCATOR_CANVAS","createElement","width","height","MERCATOR_CTX","cont","X00","Image","X10","X01","X11","drawMapTiles","_x","_x2","_x3","_drawMapTiles","Object","c_Users_Leo_Google_Drive_Proyectos_Proyectos_Visual_Studio_Code_Website_this_weather_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee5","img","x","y","T_DATA","L","_i","A","_i2","_i3","_i4","R","G","_i5","_y","LINE","_context5","drawImage","getImageData","data","length","putImageData","postMessage","crossOrigin","src","onload","_callee","_context","abrupt","sent","_callee2","_context2","_callee3","_context3","_callee4","_context4","messageCount","onmessage","e","I","forEach","_ref5","_callee6","merY","_context6","content","newY","_x4","dbg","needsUpdate","suc","__webpack_require__","d","__webpack_exports__","alt","err","fcy","RAD","DD","console","msg","log","not","H","DOT_GEO","DOT_MAT","MeshBasicMaterial","precision","LINE_MAT","LineBasicMaterial","Card","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","time","timeTimer","updateTimer","id","iconId","icon","weatherId","update","bind","assertThisInitialized","remove","createTag","_this2","getTime","city_labels","item","indexOf","setState","classList","clearInterval","OFFSET","timezone","OFFSET_F","Math","floor","mm_off","hh","mm","getUTCMinutes","MTX","_this$props$data$coor","coord","lat","lon","DOT","name","LINE_GEO","Geometry","vertices","push","Vector3","Line","X","Y","cityName","label","dot","line","fullName","removeFromCityLabels","react_default","className","rotated","title","extras","countryNameNative","countryCode","countryName","temp","tempMax","tempMin","desc","Icon","classes","onClick","Component","Prediction","predictionClicked","clickHandler","_this$props$data","start","match","finish","country","type","value","style","display","Notification","iconWord","waitAndRemove","setTimeout","intervalHandler","target","currentScroll","step","runSS","diff","window","scrollTo","ToTopBtn","newTarget","documentElement","scrollTop","API","API_CITY_NAME_PREFIX","API_CITY_ID_PREFIX","API_OPTIONS","getPredictions","_getPredictions","inputName","regenerator_default","city","newList","replace","TEST","RegExp","RE_A","RE_B","RE_C","CITY_LIST","test","unshift","exec","getExtras","_getExtras","ITEM","ALL_LIST","alpha2Code","translations","es","nativeName","getUserLocation","_getUserLocation","RES_JSON","fetch","status","json","concat","country_code2","getWeather","_getWeather","option","PREFIX","sys","weather","description","round","main","temp_max","temp_min","About","lazy","then","WeatherMaps","ThisWeather","input","cardList","predictionList","notificationList","inputBox","predictionListBox","toTopBtn","currentFocus","inputKeyDown","inputChanged","fireSearch","stopSearchingLoop","addCard","updateCard","removeCard","removeNotification","fireSearchFromPrediction","res","focusID","addEventListener","resetPredictionList","transform","predListDOM","getElementsByClassName","keyCode","preventDefault","addActivePrediction","PREDS","querySelector","VAL","isOnLine","navigator","onLine","MSG","addNotification","focus","catch","DATA","FULL_NAME","exist","card","EXTRAS","toConsumableArray","stopUpdatingLoop","_this3","newCardList","prevState","filter","newNotList","shift","removeActivePrediction","_this4","react_router_dom","predvisible","viewbox","placeholder","onKeyDown","onChange","onFocus","autoComplete","Prediction_Prediction","key","to","react_router","exact","path","render","Card_Card","Notification_Notification","react","fallback","component","href","ThisWeather_ThisWeather","size","c_Users_Leo_Google_Drive_Proyectos_Proyectos_Visual_Studio_Code_Website_this_weather_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","join","viewBox","xlinkHref","NEAR","FAR","initDone"],"mappings":"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","file":"static/js/main.b9dfa68c.chunk.js","sourcesContent":["import {\r\n  TextureLoader, sRGBEncoding, SphereBufferGeometry, Math as THREE_MATH,\r\n  Scene, AmbientLight, DirectionalLight, Fog, Mesh, Euler, MeshPhongMaterial,\r\n  Color, Matrix4, CanvasTexture, DoubleSide\r\n} from 'three';\r\nimport { suc, dbg } from './customConsole';\r\nimport { Z_OFF, setInitDone } from './utils';\r\n\r\nconst merToEqrWorker = new Worker('mercatorToEquirectangular.js');\r\nconst URL = {\r\n  base: 'https://tile.openweathermap.org/map/',\r\n  last1: '.png?appid=b280c897878592322aafe56701248929',\r\n  last2: '.png?appid=cdd659df7dc048884575b9451ddf1330'\r\n};\r\nconst MAP = ['clouds_new', 'precipitation_new', 'pressure_new', 'wind_new', 'temp_new'];\r\nconst SPH_SUB_DIV = 64; // sphere sub divisions\r\nexport const SPH_RAD = 0.825; // sphere radius\r\nconst SPH_SCALE = 1.006; // for atmosphere and weather\r\nexport const RES = 512; // weather map resolution\r\nconst T = 2; // tiles by side (total tiles = T * T)\r\nconst T_SIZE = RES / T;\r\nexport const LIGHT_ON = 0.78;\r\nexport const LIGHT_OFF = 0.015;\r\nconst BASE_SPH_GEO = new SphereBufferGeometry(SPH_RAD, SPH_SUB_DIV, SPH_SUB_DIV);\r\nBASE_SPH_GEO.rotateY(THREE_MATH.degToRad(-90)); // horizontal rotation offset correction\r\n\r\nexport const SCENE = new Scene();\r\nexport const AMB = new AmbientLight(0xffffff, LIGHT_OFF);\r\nexport const SUN = new DirectionalLight(0xffffff, LIGHT_ON);\r\nexport const WEATHER_CTX_MAT = [ // context, material\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined]\r\n];\r\n\r\nexport async function init() {\r\n  const TEXTURE = new TextureLoader().load('/this.weather/images/texture-512.png');\r\n  const SPECULAR = new TextureLoader().load('/this.weather/images/spec-512.png');\r\n  const BUMP = new TextureLoader().load('/this.weather/images/bump-512.jpg');\r\n  TEXTURE.encoding = sRGBEncoding;\r\n  SPECULAR.encoding = sRGBEncoding;\r\n  BUMP.encoding = sRGBEncoding;\r\n  SCENE.fog = new Fog(0x74c0ff, Z_OFF - SPH_RAD * 0.82, Z_OFF);\r\n  setSunPosition(SUN);\r\n\r\n  ////////////////////////////////\r\n  // MODELS\r\n  ////////////////////////////////\r\n  const PHYS = new Mesh(); // physic earth globe\r\n  PHYS.geometry = BASE_SPH_GEO;\r\n  PHYS.material = new MeshPhongMaterial({\r\n    map: TEXTURE,\r\n    specularMap: SPECULAR,\r\n    specular: new Color(0x1a1a1a),\r\n    shininess: 55.0,\r\n    bumpMap: BUMP,\r\n    bumpScale: 0.008,\r\n  });\r\n  PHYS.matrixAutoUpdate = false;\r\n  //\r\n  for (let i = 0; i < 5; i++) {\r\n    WEATHER_CTX_MAT[i][0] = document.getElementById('weather_map_' + i).getContext('2d');\r\n    WEATHER_CTX_MAT[i][1] = new MeshPhongMaterial();\r\n    const AUX = new CanvasTexture(WEATHER_CTX_MAT[i][0].canvas);\r\n    AUX.encoding = sRGBEncoding;\r\n    WEATHER_CTX_MAT[i][1].map = AUX;\r\n    WEATHER_CTX_MAT[i][1].shininess = 0.0;\r\n    WEATHER_CTX_MAT[i][1].transparent = true;\r\n    const WEATHER = new Mesh(BASE_SPH_GEO, WEATHER_CTX_MAT[i][1]); // wether map\r\n    WEATHER.layers.set(i + 1);\r\n    WEATHER.scale.multiplyScalar(SPH_SCALE);\r\n    WEATHER.matrixAutoUpdate = false;\r\n    AMB.layers.enable(i + 1);\r\n    SUN.layers.enable(i + 1);\r\n    SCENE.add(WEATHER);\r\n  }\r\n  //\r\n  const ATMO = new Mesh(); // atmosphere\r\n  ATMO.geometry = BASE_SPH_GEO;\r\n  ATMO.material = new MeshPhongMaterial({\r\n    color: 0xffffff,\r\n    side: DoubleSide,\r\n    transparent: true,\r\n    opacity: 0.05,\r\n    shininess: 0.0,\r\n  });\r\n  ATMO.scale.multiplyScalar(SPH_SCALE * .9);\r\n  ATMO.matrixAutoUpdate = false;\r\n\r\n  ////////////////////////////////\r\n  // ALL TOGHETHER\r\n  ////////////////////////////////\r\n  SCENE.add(PHYS, ATMO, AMB, SUN);\r\n\r\n  setInterval(updateSunPosition, 180000); // 3m\r\n  setInitDone();\r\n}\r\n\r\nfunction updateSunPosition() {\r\n  setSunPosition(SUN);\r\n}\r\n\r\nfunction setSunPosition(sun) {\r\n  const HH = new Date().getUTCHours();\r\n  const MM = new Date().getUTCMonth();\r\n  const MATRIX = new Matrix4();\r\n  let rotY = 0;\r\n  let rotX = 0;\r\n  // X axis 'inclination' (for months)\r\n  if (MM <= 6) rotX = -(8 * MM) + 24; // y = -8x+24\r\n  else rotX = 8 * MM - 72; // y = 8x-72\r\n  // Y axis rotation (for hours)\r\n  rotY = 180 - (HH / 24) * 360;\r\n  MATRIX.makeRotationFromEuler(new Euler(\r\n    THREE_MATH.degToRad(rotX),\r\n    THREE_MATH.degToRad(rotY),\r\n    0, 'YXZ'));\r\n  sun.position.set(0, 0, Z_OFF * 10); // reset the position with just a Z axis displacement\r\n  sun.position.applyMatrix4(MATRIX); // Rotation\r\n  sun.lookAt(0, 0, 0);\r\n}\r\n\r\n/**\r\n * Launch the process of downloading mercator projection (tiles)\r\n * and convert them into a single equirectangular projection (map)\r\n * @param {Number} i Weather map option (index)\r\n */\r\nexport function createWeatherMap(i) {\r\n  const MERCATOR_CANVAS = document.createElement('canvas');\r\n  // 512x512\r\n  MERCATOR_CANVAS.width = RES;\r\n  MERCATOR_CANVAS.height = RES;\r\n  const MERCATOR_CTX = MERCATOR_CANVAS.getContext('2d');\r\n  let cont = 0;\r\n  // merc. proj. images (2x2) to generate a single eqr. proj.\r\n  let X00 = new Image(T_SIZE, T_SIZE);\r\n  let X10 = new Image(T_SIZE, T_SIZE);\r\n  let X01 = new Image(T_SIZE, T_SIZE);\r\n  let X11 = new Image(T_SIZE, T_SIZE);\r\n  X00.crossOrigin = 'Anonymous';\r\n  X10.crossOrigin = 'Anonymous';\r\n  X01.crossOrigin = 'Anonymous';\r\n  X11.crossOrigin = 'Anonymous';\r\n  X00.src = URL.base + MAP[i] + '/1/0/0' + URL.last1;\r\n  X10.src = URL.base + MAP[i] + '/1/1/0' + URL.last1;\r\n  X01.src = URL.base + MAP[i] + '/1/0/1' + URL.last2;\r\n  X11.src = URL.base + MAP[i] + '/1/1/1' + URL.last2;\r\n  X00.onload = async () => await drawMapTiles(X00, T_SIZE * 0, T_SIZE * 0);\r\n  X10.onload = async () => await drawMapTiles(X10, T_SIZE * 1, T_SIZE * 0);\r\n  X01.onload = async () => await drawMapTiles(X01, T_SIZE * 0, T_SIZE * 1);\r\n  X11.onload = async () => await drawMapTiles(X11, T_SIZE * 1, T_SIZE * 1);\r\n  async function drawMapTiles(img, x, y) {\r\n    MERCATOR_CTX.drawImage(img, x, y);\r\n    const T_DATA = MERCATOR_CTX.getImageData(x, y, T_SIZE, T_SIZE);\r\n    const L = T_DATA.data.length;\r\n    // Alpha and color adjust\r\n    if (i === 0) { // Clouds\r\n      for (let i = 0; i < L; i += 4) {\r\n        let A = T_DATA.data[i + 3];\r\n        A = (A - (255 * 0.6)) / 0.4; // range displacement and scale\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] = A * 1.8;\r\n      }\r\n    } else if (i === 1) { // Precipitation\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    } else if (i === 2) { // Pressure\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 3) { // Wind\r\n      for (let i = 0; i < L; i += 4) {\r\n        const R = T_DATA.data[i + 0];\r\n        const G = T_DATA.data[i + 1];\r\n        //const B = TILE.data[i + 2];\r\n        T_DATA.data[i + 0] = 255 - G * 0.75; // R\r\n        T_DATA.data[i + 1] = 255 - R * 0.75; // G\r\n        T_DATA.data[i + 2] = 255 - 255; // B\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 4) { // Temp\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    }\r\n    MERCATOR_CTX.putImageData(T_DATA, x, y);\r\n    cont++;\r\n    if (cont === T * T) { // When all tiles are done: convert Mer. to Eqr.\r\n      for (let y = 0; y < RES; y++) { // Take each line to get his new position\r\n        const LINE = MERCATOR_CTX.getImageData(0, y, RES, 1);\r\n        merToEqrWorker.postMessage([LINE, y, RES, RES / 2, i]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nlet messageCount = 0;\r\nmerToEqrWorker.onmessage = (e) => {\r\n  const I = e.data[0];\r\n  e.data[1].forEach(async merY => {\r\n    await WEATHER_CTX_MAT[I][0].putImageData(merY.content, 0, merY.newY);\r\n  });\r\n  /* for (let i = 0; i < 512; i++) {\r\n    weatherPack[I][0].putImageData(e.data[1][i].content, 0, e.data[1][i].newY);\r\n  } */\r\n  dbg('Mapa equirectangular \"' + MAP[I] + '\": Creado...');\r\n  WEATHER_CTX_MAT[I][1].map.needsUpdate = true;\r\n  // Put data on map master canvas (from first/default map)\r\n  if (I === 0)\r\n    document.getElementById('map_canvas')\r\n      .getContext('2d')\r\n      .putImageData(WEATHER_CTX_MAT[0][0].getImageData(0, 0, RES, RES * .5), 0, 0);\r\n  messageCount++;\r\n  if (messageCount === 5) suc('Mapas equirectangulares: Finalizados (5 de 5)');\r\n}\r\n\r\n/*\r\n\r\nLAYERS | NAME\r\n---\r\n0 phisic globe\r\n1 clouds\r\n2 pressipitation\r\n3 pressure\r\n4 wind\r\n5 temperature\r\n\r\n*/\r\n","const FORMAT = '%c%s';\r\nconst RAD = 'border-radius: 99px;';\r\nconst DD = ' » ';\r\n\r\n// SUCCESS\r\nexport const suc = console.suc = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: GreenYellow; background-color: DarkGreen; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ALERT\r\nexport const alt = console.alt = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: Black; background-color: Gold; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// ERROR\r\nexport const err = console.err = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: MistyRose; background-color: DarkRed; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// NOTIFICATION\r\nexport const not = console.not = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: LightCyan; background-color: DarkSlateGray; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// DEBUG\r\nexport const dbg = console.dbg = function (msg) {\r\n  console.log(FORMAT,\r\n    'color: SkyBlue; background-color: MidnightBlue; ' + RAD,\r\n    DD + msg + ' ');\r\n}\r\n// FANCY\r\nexport const fcy = console.fcy = function (msg) {\r\n  console.log('%c%s',\r\n    'color: #33cfff;' +\r\n    'background-color: rgba(51, 207, 255, .1);' +\r\n    'border: 1px solid #33cfff;' +\r\n    'border-radius: 2px; padding: 6px 9px;' +\r\n    'text-shadow: 0 0 2px rgba(255, 255, 255, .8);' +\r\n    '',\r\n    msg);\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  SphereBufferGeometry, MeshBasicMaterial, LineBasicMaterial, Matrix4,\r\n  Euler, Math as THREE_MATH, Vector3, Geometry, Line, Mesh\r\n} from 'three';\r\nimport Icon from './Icon';\r\nimport { SCENE, SPH_RAD, RES } from '../js/threeStuff';\r\nimport { city_labels, removeFromCityLabels } from '../js/utils';\r\n//import { not } from '../js/customConsole';\r\n\r\n//const TIME_TO_UPDATE = 20 * 60000; // ms\r\nconst H = RES / 2;\r\nconst DOT_GEO = new SphereBufferGeometry(0.001, 3, 2);\r\nconst DOT_MAT = new MeshBasicMaterial({ transparent: true, opacity: 0, precision: \"lowp\" });\r\nconst LINE_MAT = new LineBasicMaterial({ fog: false, color: '#b4b4b4' });\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: '',\r\n      timeTimer: undefined,\r\n      updateTimer: undefined,\r\n    };\r\n    this.id = this.props.data.id; // city id\r\n    this.iconId = this.props.data.icon; // icon code\r\n    this.weatherId = this.props.data.weatherId; // weather code (more speciffic than icon code)\r\n    /* if (\r\n      (this.props.data.weatherId > 701 &&\r\n        this.props.data.weatherId < 741) ||\r\n      (this.props.data.weatherId > 741 &&\r\n        this.props.data.weatherId < 781)\r\n    ) {\r\n      this.iconId = '50'; // neither sun nor moon\r\n    } else */\r\n    if (this.props.data.weatherId === 781) this.iconId = '50tornado'; //tornado\r\n    this.update = this.update.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.createTag = this.createTag.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTime();\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    if (I < 0) this.createTag();\r\n    this.setState({\r\n      timeTimer: setInterval(() => {\r\n        this.getTime()\r\n      }, 60000),\r\n      /* updateTimer: setInterval(() => {\r\n        not(this.props.fullName + ': Actualización automática...');\r\n        this.update();\r\n      }, TIME_TO_UPDATE) */\r\n    });\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.updateTimer);\r\n    clearInterval(this.state.timeTimer);\r\n  }\r\n\r\n  getTime() {\r\n    const OFFSET = ((this.props.data.timezone / 60) / 60); // timezone = seconds --> OFFSET hours\r\n    const OFFSET_F = Math.floor(OFFSET); // Integer from OFFSET (the offset can be XX hours AND 30 minutes in some cases)\r\n    let mm_off = 0;\r\n    if (OFFSET_F !== OFFSET) mm_off = Math.floor((OFFSET - OFFSET_F) * 60);\r\n    let hh = new Date().getUTCHours() + OFFSET_F;\r\n    let mm = new Date().getUTCMinutes() + mm_off;\r\n    if (mm > 59) { hh++; mm -= 60; }\r\n    if (hh > 23) hh -= 24;\r\n    if (hh < 0) hh = 24 + hh;\r\n    if (hh < 10 && hh >= 0) hh = '0' + hh;\r\n    if (mm < 10) mm = '0' + mm;\r\n    this.setState({ time: (hh + ':' + mm) });\r\n  }\r\n\r\n  createTag() {\r\n    // Rotation matrix\r\n    const MTX = new Matrix4();\r\n    const { lat, lon } = this.props.data.coord;\r\n    MTX.makeRotationFromEuler(new Euler(\r\n      THREE_MATH.degToRad(-lat), // X axe, horizontal rotation\r\n      THREE_MATH.degToRad(+lon), // Y axe, Vectical rotation\r\n      0, 'YXZ'));\r\n    // Invisible dot to hold the label position\r\n    const DOT = new Mesh(DOT_GEO, DOT_MAT);\r\n    DOT.name = this.id;\r\n    DOT.position.set(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX);\r\n    const LINE_GEO = new Geometry();\r\n    LINE_GEO.vertices.push(\r\n      new Vector3(0, 0, 0),\r\n      new Vector3(0, 0, SPH_RAD * 1.4).applyMatrix4(MTX));\r\n    const LINE = new Line(LINE_GEO, LINE_MAT);\r\n\r\n    // Add line and dot to global scene\r\n    SCENE.add(DOT, LINE);\r\n    // Coordinates to print the label on \"flat\" map\r\n    const X = (180 + lon) / 360 * RES;\r\n    const Y = -(lat * (H / 180)) + H * 0.5;\r\n    // Add a city name label to labels public container\r\n    city_labels.push({\r\n      id: this.id, // 'city_label_' + card id\r\n      cityName: this.props.data.cityName, // label text content\r\n      label: undefined,\r\n      dot: DOT,  // the 3D position holder object\r\n      line: LINE, // a line from the center of the earth to the dot\r\n      x: X, // 2D map X coordinate\r\n      y: Y // 2D map Y coordinate\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.props.update(this.id, this.props.fullName);\r\n  }\r\n\r\n  remove() {\r\n    const I = city_labels.map(item => item.id).indexOf(this.id);\r\n    const DOT = city_labels[I].dot;\r\n    const LINE = city_labels[I].line;\r\n    SCENE.remove(DOT, LINE); // remove it from the scene\r\n    removeFromCityLabels(this.id);\r\n    //document.getElementById('city_label_' + this.id).remove(); // remove it from the DOM\r\n    this.props.remove(this.id, this.props.fullName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id={'card_' + this.id}\r\n        className=\"card\"\r\n        rotated={this.state.rotated} >\r\n        <div className=\"card_header\"\r\n          title={\r\n            this.props.fullName + ' (' +\r\n            this.props.extras.countryNameNative + ')'}>\r\n          <h2 className=\"name\"><em>{this.props.fullName}</em></h2>\r\n          <div className=\"icon_small\">\r\n            <span>\r\n              <img\r\n                src={'https://www.countryflags.io/' + this.props.data.countryCode + '/shiny/16.png'}\r\n                alt={'Bandera de ' + this.props.extras.countryName}\r\n                title={'Bandera de ' + this.props.extras.countryName} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"temp\">\r\n          <p className=\"temp_current\">{this.props.data.temp}°</p>\r\n          <p className=\"temp_max\"><span>Máx</span>{this.props.data.tempMax}°</p>\r\n          <p className=\"temp_min\"><span>Mín</span>{this.props.data.tempMin}°</p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"desc\">\r\n          <p className=\"desc\">{this.props.data.desc}</p>\r\n          <Icon name={this.iconId} classes={['perma_active']} />\r\n        </div>\r\n        <hr />\r\n        <div className=\"card_control\">\r\n          <button className=\"loading_box\" onClick={this.update} title=\"Actualizar\">\r\n            <Icon name=\"refresh\" classes={['btn']} />\r\n            <Icon name=\"loading_loop\" />\r\n          </button>\r\n          <span className=\"time\">\r\n            {this.state.time}\r\n          </span>\r\n          <button onClick={this.remove} title=\"Cerrar\" >\r\n            <Icon name=\"close\" classes={['btn']} />\r\n          </button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  fullName: PropTypes.string.isRequired,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    //cloud: PropTypes.number.isRequired, // unused\r\n    coord: PropTypes.shape({\r\n      lat: PropTypes.number.isRequired,\r\n      lon: PropTypes.number.isRequired\r\n    }).isRequired,\r\n    countryCode: PropTypes.string.isRequired,\r\n    weatherId: PropTypes.number.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n    //hum: PropTypes.number.isRequired, // unused\r\n    icon: PropTypes.string.isRequired,\r\n    cityName: PropTypes.string.isRequired,\r\n    temp: PropTypes.number.isRequired,\r\n    tempMax: PropTypes.number.isRequired,\r\n    tempMin: PropTypes.number.isRequired,\r\n    timezone: PropTypes.number.isRequired,\r\n    //wind: PropTypes.number.isRequired // m/s to km/h // unused\r\n  }).isRequired,\r\n  extras: PropTypes.shape({\r\n    countryName: PropTypes.string.isRequired,\r\n    countryNameNative: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  update: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Prediction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.predictionClicked = this.predictionClicked.bind(this);\r\n  }\r\n\r\n  predictionClicked() {\r\n    this.props.clickHandler(this.props.data.id);\r\n  }\r\n\r\n  render() {\r\n    const { start, match, finish, country, id } = this.props.data;\r\n    return (\r\n      <div className=\"prediction\" onClick={this.predictionClicked}>\r\n        <span>\r\n          <p><strong>{start}</strong>{match}<strong>{finish}</strong><em> ({country})</em></p>\r\n        </span>\r\n        <input type=\"hidden\"\r\n          value={id}\r\n          style={{ display: 'none' }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPrediction.propTypes = {\r\n  data: PropTypes.shape({\r\n    start: PropTypes.string.isRequired,\r\n    match: PropTypes.string.isRequired,\r\n    finish: PropTypes.string.isRequired,\r\n    country: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  clickHandler: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.iconWord = 'not_' + this.props.data.type;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitAndRemove();\r\n  }\r\n\r\n  waitAndRemove() {\r\n    setTimeout(() => {\r\n      this.props.remove(this.props.data.id);\r\n    }, 4000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'notification ' + this.props.data.type}>\r\n        <Icon name={this.iconWord} />\r\n        <p>{this.props.data.msg}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  data: PropTypes.shape({\r\n    msg: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  remove: PropTypes.func.isRequired\r\n}\r\n","let intervalHandler = 0;\r\nlet target = 0;\r\nlet currentScroll = 0;\r\nlet step = 0;\r\nlet cont = 0;\r\n\r\n/**\r\n * Init Smooth Scroll\r\n */\r\nexport function initSS(newTarget) {\r\n  clearInterval(intervalHandler);\r\n  cont = 0;\r\n  target = newTarget;\r\n  currentScroll = document.documentElement.scrollTop;\r\n  step = (currentScroll - target) / 60;\r\n  intervalHandler = setInterval(runSS, 0);\r\n}\r\n\r\n/**\r\n * Cancel Smooth Scroll\r\n */\r\nexport function cancelSS() {\r\n  clearInterval(intervalHandler);\r\n}\r\n\r\nfunction runSS() {\r\n  let diff = step * cont;\r\n  window.scrollTo(0, currentScroll - diff);\r\n  if (cont === 60) clearInterval(intervalHandler);\r\n  cont++;\r\n}","import React from 'react'\r\nimport Icon from './Icon';\r\nimport { initSS } from '../js/smoothScroll';\r\n\r\nexport default function ToTopBtn() {\r\n  return (\r\n    <button id=\"to_top_btn\" onClick={() => initSS(0)} title=\"Volver arriba\">\r\n      <Icon name=\"top_arrow\" classes={['btn']} />\r\n    </button>\r\n  )\r\n}\r\n","import CITY_LIST from '../apis/city.list.min.json';\r\nimport ALL_LIST from '../apis/all.json';\r\n\r\nconst API = 'https://api.openweathermap.org/data/2.5/weather?';\r\nconst API_CITY_NAME_PREFIX = 'q=';\r\nconst API_CITY_ID_PREFIX = 'id=';\r\nconst API_OPTIONS = '&appid=b280c897878592322aafe56701248929&units=metric&lang=es';\r\n\r\nexport async function getPredictions(inputName) {\r\n  return await (() => {\r\n    let city = undefined;\r\n    let newList = [];\r\n    // Create prediction list (minimum of 3 characters typed)\r\n    if (inputName.length > 2) {\r\n      inputName = inputName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n      const TEST = new RegExp(' ' + inputName, 'i');\r\n      const RE_A = new RegExp('(.*)' + inputName, 'i');\r\n      const RE_B = new RegExp(inputName, 'i');\r\n      const RE_C = new RegExp(inputName + '(.*)', 'i');\r\n      // Search on city list (local API) & Maximum of 6 predictions\r\n      for (let i = 0; (i < 209579) && (newList.length < 6); i++) {\r\n        city = CITY_LIST[i];\r\n        if (TEST.test(' ' + city.name)) {\r\n          if (inputName.length === city.name.length) // 100% match at the top\r\n            newList.unshift({\r\n              start: RE_A.exec(city.name)[1],\r\n              match: RE_B.exec(city.name)[0],\r\n              finish: RE_C.exec(city.name)[1],\r\n              country: city.country, id: city.id\r\n            });\r\n          else // partial match\r\n            newList.push({\r\n              start: RE_A.exec(city.name)[1],\r\n              match: RE_B.exec(city.name)[0],\r\n              finish: RE_C.exec(city.name)[1],\r\n              country: city.country, id: city.id\r\n            });\r\n        }\r\n      }\r\n      return newList;\r\n    } // else\r\n    return [];\r\n  })();\r\n}\r\n\r\nexport async function getExtras(countryCode) {\r\n  for (let i = 0; i < 250; i++) {\r\n    if (ALL_LIST[i].alpha2Code === countryCode) {\r\n      const ITEM = ALL_LIST[i];\r\n      return {\r\n        countryName: ITEM.translations.es,\r\n        countryNameNative: ITEM.nativeName\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getUserLocation() {\r\n  const RES = await fetch('https://api.ipgeolocation.io/ipgeo?apiKey=15d8e57eb4aa4015bb32a04d73b67b19');\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return `${RES_JSON.city}, ${RES_JSON.country_code2}`;\r\n  }\r\n}\r\n\r\nexport async function getWeather(inputName, option) {\r\n  let PREFIX = '';\r\n  if (option === 'name') PREFIX = API_CITY_NAME_PREFIX;\r\n  else if (option === 'id') PREFIX = API_CITY_ID_PREFIX;\r\n  const RES = await fetch(API + PREFIX + inputName + API_OPTIONS);\r\n  if (RES.status > 200) return RES.status;\r\n  else {\r\n    const RES_JSON = await RES.json();\r\n    return {\r\n      id: RES_JSON.id,\r\n      //cloud: RES_JSON.clouds.all,\r\n      coord: { lat: RES_JSON.coord.lat, lon: RES_JSON.coord.lon },\r\n      countryCode: RES_JSON.sys.country,\r\n      weatherId: RES_JSON.weather[0].id,\r\n      desc: RES_JSON.weather[0].description,\r\n      //hum: RES_JSON.main.humidity,\r\n      icon: RES_JSON.weather[0].icon,\r\n      cityName: RES_JSON.name,\r\n      temp: Math.round(RES_JSON.main.temp),\r\n      tempMax: Math.round(RES_JSON.main.temp_max),\r\n      tempMin: Math.round(RES_JSON.main.temp_min),\r\n      timezone: RES_JSON.timezone,\r\n      //wind: Math.round(RES_JSON.wind.speed * 3.6) // m/s to km/h\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\nkey: '&appid=b280c897878592322aafe56701248929',\r\nunits: '&units=metric',\r\nlang: '&lang=es'\r\n */\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Card from './components/Card';\r\nimport Icon from './components/Icon';\r\nimport Prediction from './components/Prediction';\r\nimport Notification from './components/Notification';\r\nimport ToTopBtn from './components/ToTopBtn';\r\nimport { getPredictions, getUserLocation, getExtras, getWeather } from './js/getFromAPIs';\r\nimport { cancelSS } from './js/smoothScroll';\r\nimport { suc, alt, err, dbg } from './js/customConsole';\r\n\r\n/* const PRELOAD_CITIES = [\r\n  'Cairo,EG',             // africa\r\n  'Kingston,JM',          // america c\r\n  'Alaska,US',            // america n\r\n  'Amazonas,BR',          // america s\r\n  'McMurdo Station,AQ',   // antartida\r\n  'Tokyo,JP',             // asia\r\n  'Berlin,DE',            // europa\r\n  'Sydney,AU',            // oceania\r\n  'Cape Town,ZA',         // -africa\r\n  'Panama,PA',            // -america c\r\n  'Ottawa,CA',            // -america n\r\n  'Montevideo,UY',        // -america s\r\n  'Busan,KR',             // -asia\r\n  'Moscow,RU',            // -europa\r\n  'Wellington,NZ',        //- oceania\r\n]; */\r\n\r\nconst About = (lazy(() => (import(/* webpackChunkName: \"About\" */ './components/About'))));\r\nconst WeatherMaps = (lazy(() => (import(/* webpackChunkName: \"WeatherMaps\" */ './components/WeatherMaps'))));\r\n\r\nexport default class ThisWeather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      cardList: [],\r\n      predictionList: [],\r\n      notificationList: [],\r\n    };\r\n    this.inputBox = undefined;\r\n    this.predictionListBox = undefined;\r\n    this.toTopBtn = undefined;\r\n    this.currentFocus = -1;\r\n    this.inputKeyDown = this.inputKeyDown.bind(this);\r\n    this.inputChanged = this.inputChanged.bind(this);\r\n    this.fireSearch = this.fireSearch.bind(this);\r\n    this.stopSearchingLoop = this.stopSearchingLoop.bind(this);\r\n    this.addCard = this.addCard.bind(this);\r\n    this.updateCard = this.updateCard.bind(this);\r\n    this.removeCard = this.removeCard.bind(this);\r\n    this.removeNotification = this.removeNotification.bind(this);\r\n    this.fireSearchFromPrediction = this.fireSearchFromPrediction.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    getUserLocation().then(res => {\r\n      if (res > 200)\r\n        err('Error al localizar el dispositivo (error ' + res + ')');\r\n      else {\r\n        dbg(`Dispositivo localizado...`);\r\n        this.addCard(res, 'name');\r\n      }\r\n    });\r\n    this.focusID('input_query');\r\n    this.inputBox = document.getElementById('input_query');\r\n    this.predictionListBox = document.getElementById('prediction_box');\r\n    this.toTopBtn = document.getElementById('to_top_btn');\r\n    document.addEventListener('click', e => {\r\n      if ((e.target !== this.inputBox) && (this.state.predictionList.length > 0))\r\n        this.resetPredictionList(e.target);\r\n    });\r\n    window.addEventListener('scroll', () => {\r\n      if (document.documentElement.scrollTop > 100) this.toTopBtn.style.transform = 'scale(1)';\r\n      else this.toTopBtn.style.transform = '';\r\n    });\r\n    window.addEventListener('wheel', () => cancelSS());\r\n  }\r\n\r\n  /**\r\n   * App functionality & utils\r\n   */\r\n\r\n  async inputKeyDown(e) {\r\n    // Current predictions displayed\r\n    let predListDOM = this.predictionListBox.getElementsByClassName('prediction');\r\n    if (e.keyCode === 40) { // key down\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction\r\n        this.currentFocus++;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 38) { // key up\r\n      e.preventDefault();\r\n      if (this.state.predictionList.length) {\r\n        // Change/add the active prediction        \r\n        this.currentFocus--;\r\n        this.addActivePrediction(predListDOM);\r\n      } else {\r\n        // Create a prediction list\r\n        const PREDS = await getPredictions(e.target.value);\r\n        this.setState({ predictionList: PREDS });\r\n      }\r\n    } else if (e.keyCode === 27) { // escape\r\n      // Clean the input\r\n      this.setState({ input: '', predictionList: [] });\r\n    } else if (e.keyCode === 13) { // enter\r\n      e.preventDefault();\r\n      this.resetPredictionList(e.target); // hide predlist while searching\r\n      if ((this.state.predictionList.length > 0) &&\r\n        (document.querySelector('.active_prediction') !== null)) {\r\n        // if there are predictions AND there is an active one, search that\r\n        const VAL = document.querySelector('.active_prediction input').value;\r\n        this.fireSearchFromPrediction(VAL);\r\n      } else {\r\n        // else, try to search based on input value\r\n        this.setState({ input: e.target.value });\r\n        this.fireSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  async inputChanged(e) {\r\n    this.resetPredictionList();\r\n    this.setState({\r\n      input: e.target.value,\r\n      predictionList: [],\r\n    });\r\n    const PREDS = await getPredictions(e.target.value);\r\n    this.setState({ predictionList: PREDS });\r\n  }\r\n\r\n  fireSearch(inputName, option) {\r\n    if (!this.isOnLine()) return; // if it's online, continue\r\n    if (inputName) // if there is an specific input (parameter)\r\n      this.addCard(inputName, option);\r\n    else if (this.state.input.length > 0) // else, if there is text in the input box\r\n      this.addCard(this.state.input, 'name');\r\n    this.focusID('input_query'); // if not, return focus to the input box\r\n  }\r\n\r\n  isOnLine() {\r\n    if (window.navigator.onLine) return true;\r\n    const MSG = 'Equipo offline';\r\n    this.addNotification(MSG, 'error');\r\n    err(MSG);\r\n    return false;\r\n  }\r\n\r\n  focusID(id) {\r\n    document.getElementById(id).focus();\r\n  }\r\n\r\n  stopSearchingLoop() {\r\n    document.getElementById('search_btn').classList.remove('loading');\r\n  }\r\n\r\n  stopUpdatingLoop(id) {\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.remove('loading');\r\n  }\r\n\r\n  /**\r\n   * Weather Card functionality\r\n   */\r\n\r\n  async addCard(inputName, option) {\r\n    document.getElementById('search_btn').classList.add('loading');\r\n    dbg(inputName + ': Consultando API...');\r\n    const DATA = await getWeather(inputName, option).catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = 'No se encontraron resulados';\r\n      this.addNotification(MSG, 'alert');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopSearchingLoop();\r\n      err(inputName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n    const FULL_NAME = DATA.cityName + ', ' + DATA.countryCode; // Complete name used for the card title\r\n\r\n    // Check if it already exists\r\n    if (this.state.cardList.length > 0) {\r\n      let exist = false;\r\n      this.state.cardList.forEach(card => {\r\n        // id correspondant to 'weather station id',\r\n        // city and country name can be the same\r\n        if (DATA.id === card.data.id) return exist = true;\r\n      });\r\n      if (exist) {\r\n        const MSG = 'Resultado ya incluido';\r\n        this.addNotification(MSG, 'info');\r\n        alt(FULL_NAME + ': ' + MSG);\r\n        this.stopSearchingLoop();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add the card\r\n    const EXTRAS = await getExtras(DATA.countryCode); // get extra data\r\n    this.setState({\r\n      cardList: [...this.state.cardList, { fullName: FULL_NAME, data: DATA, extras: EXTRAS }],\r\n      input: '', // Clean input box\r\n      predictionList: [] // Clean predictions\r\n    });\r\n    this.stopSearchingLoop();\r\n    dbg(inputName + ' --> ' + FULL_NAME + '...');\r\n    suc(FULL_NAME + ': Agregado');\r\n  }\r\n\r\n  async updateCard(id, fullName) {\r\n    if (!this.isOnLine()) return;\r\n    document.querySelector('#card_' + id + ' > .card_control .loading_box')\r\n      .classList.add('loading');\r\n    dbg(fullName + ': Actualizando...');\r\n    const DATA = await getWeather(fullName, 'name').catch(() => 0);\r\n\r\n    // Manual catch error\r\n    if (DATA > 200) {\r\n      const MSG = fullName + ': Error al actualizar';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    } else if (DATA === 0) {\r\n      const MSG = 'Error al consultar API';\r\n      this.addNotification(MSG, 'error');\r\n      this.stopUpdatingLoop(id);\r\n      err(fullName + ': ' + MSG + ' (error ' + DATA + ')');\r\n      return;\r\n    }\r\n\r\n    // Find card index in list\r\n    let i = undefined;\r\n    this.state.cardList.forEach(card => {\r\n      if (card.data.id === id) i = this.state.cardList.indexOf(card);\r\n    });\r\n\r\n    // Update card\r\n    let newCardList = this.state.cardList;\r\n    newCardList[i].data = DATA;\r\n    this.setState({ cardList: newCardList });\r\n    const MSG = fullName + ': Actualizado';\r\n    this.addNotification(MSG, 'success');\r\n    this.stopUpdatingLoop(id);\r\n    suc(MSG);\r\n  }\r\n\r\n  removeCard(id, fullName) {\r\n    this.setState(prevState => ({\r\n      cardList: prevState.cardList.filter(item => item.data.id !== id)\r\n    }));\r\n    suc(fullName + ': Eliminado');\r\n  }\r\n\r\n  /**\r\n   * Notification functionality\r\n   */\r\n\r\n  addNotification(msg, type) {\r\n    let newNotList = this.state.notificationList;\r\n    if (newNotList.length >= 6) newNotList.shift();\r\n    this.setState({\r\n      notificationList: [...newNotList, { msg: msg, type: type, id: new Date().getTime() }]\r\n    });\r\n  }\r\n\r\n  removeNotification(id) {\r\n    this.setState(prevState => ({\r\n      notificationList: prevState.notificationList.filter(item => item.id !== id)\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Prediction functionality\r\n   */\r\n\r\n  fireSearchFromPrediction(value) {\r\n    this.resetPredictionList();\r\n    this.fireSearch(value, 'id');\r\n  }\r\n\r\n  addActivePrediction(predListDOM) {\r\n    // Actually add/set\r\n    this.removeActivePrediction(predListDOM);\r\n    if (this.currentFocus >= predListDOM.length) this.currentFocus = 0;\r\n    if (this.currentFocus < 0) this.currentFocus = (predListDOM.length - 1);\r\n    if (predListDOM.length) predListDOM[this.currentFocus].classList.add('active_prediction');\r\n  }\r\n\r\n  removeActivePrediction(predListDOM) {\r\n    for (var i = 0; i < predListDOM.length; i++)\r\n      predListDOM[i].classList.remove('active_prediction');\r\n  }\r\n\r\n  resetPredictionList() {\r\n    this.currentFocus = -1;\r\n    this.setState({ predictionList: [] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <header>\r\n          <div id=\"search_box\" predvisible={this.state.predictionList.length > 0 ? 'true' : 'false'}>\r\n            <button id=\"search_btn\"\r\n              className=\"loading_box loading\"\r\n              title=\"Buscar\"\r\n              onClick={this.fireSearch} >\r\n              <Icon name=\"search\" classes={['btn', 'perma_active']} viewbox=\"0 0 48 48\" />\r\n              <Icon name=\"loading_loop\" />\r\n            </button>\r\n            <input id=\"input_query\"\r\n              type=\"text\"\r\n              value={this.state.input}\r\n              placeholder=\"Buscar una cuidad\"\r\n              onKeyDown={e => this.inputKeyDown(e)}\r\n              onChange={e => this.inputChanged(e)}\r\n              onFocus={e => this.inputChanged(e)}\r\n              autoComplete=\"off\"\r\n              alt=\"Buscar una cuidad\" />\r\n            <div id=\"prediction_box\" >\r\n              {this.state.predictionList.map(item => (\r\n                <Prediction\r\n                  data={item}\r\n                  clickHandler={this.fireSearchFromPrediction}\r\n                  key={item.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/this.weather/\">Inicio</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/weathermaps\">Mapas meteorologicos</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/this.weather/about\">Acerca de</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <Route exact path=\"/this.weather/\" render={props => (\r\n            <div id=\"main_content\">\r\n              <div id=\"card_box\">\r\n                {this.state.cardList.map(item => (\r\n                  <Card\r\n                    fullName={item.fullName}\r\n                    data={item.data}\r\n                    extras={item.extras}\r\n                    update={this.updateCard}\r\n                    remove={this.removeCard}\r\n                    key={item.data.id} />\r\n                ))}\r\n              </div>\r\n              <div id=\"notification_box\">\r\n                <div id=\"notification_content\">\r\n                  {this.state.notificationList.map(item => (\r\n                    <Notification\r\n                      data={item}\r\n                      remove={this.removeNotification}\r\n                      key={item.id} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )} />\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/weathermaps\" component={WeatherMaps} />\r\n          </Suspense>\r\n          <Suspense fallback={''}>\r\n            <Route path=\"/this.weather/about\" component={About} />\r\n          </Suspense>\r\n          <div id=\"to_top_btn_box\">\r\n            <ToTopBtn />\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div id=\"footer_content\">\r\n            <div id=\"brand_box\">\r\n              <a id=\"imagotipo\" href=\"http://wikarot.github.io/this.weather\" title=\"this.weather\">\r\n                <div className=\"isotipo icon_small\">\r\n                  <span>\r\n                    <img src=\"favicon-16x16.png\" alt=\"Icono de this.weather\" />\r\n                  </span>\r\n                </div>\r\n                <h1 id=\"logotipo\"><em>this</em>.weather</h1>\r\n              </a>\r\n            </div>\r\n            <div id=\"cc\">\r\n              <span>\r\n                <p>Copyright 2019 <a href=\"https://github.com/Wikarot\">Leo de S.L.F</a></p>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n        <div id=\"weather_maps_container\" style={{ display: 'none' }} >\r\n          <canvas id=\"weather_map_0\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_1\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_2\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_3\" width=\"512\" height=\"256\" />\r\n          <canvas id=\"weather_map_4\" width=\"512\" height=\"256\" />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// MS_ACC b280c897878592322aafe56701248929\r\n// GG_Acc cdd659df7dc048884575b9451ddf1330\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport ThisWeather from './ThisWeather';\nimport './sass/main.css';\nimport { fcy } from './js/customConsole';\n\nfcy('Welcome to this.weather!');\n\nrender(<ThisWeather />, document.getElementById('root'));\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Icon(props) {\r\n  let classes = ['icon'];\r\n  let viewbox = '0 0 24 24';\r\n\r\n  if (props.size !== undefined) classes.push('icon_' + props.size);\r\n  else classes.push('icon_small');\r\n  if (props.classes !== undefined) classes.push(...props.classes);\r\n  if (props.viewbox !== undefined) viewbox = props.viewbox;\r\n\r\n  // Special case for \"loading loop\"\r\n  if (props.name === 'loading_loop') classes.push('icon_loading');\r\n\r\n\r\n  return (\r\n    <div className={classes.join(' ')} >\r\n      <span>\r\n        <svg viewBox={viewbox} >\r\n          <use xlinkHref={'#' + props.name}></use>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  classes: PropTypes.arrayOf(PropTypes.string),\r\n  viewbox: PropTypes.string,\r\n  size: PropTypes.string,\r\n}\r\n","export const NEAR = 1, FAR = 5, Z_OFF = 3;\r\nexport let city_labels = []; // id, cityName, label, dot, line, x, y\r\n\r\nexport function removeFromCityLabels(id) {\r\n  city_labels = city_labels.filter(item => item.id !== id); // remove it from the \"list\"\r\n}\r\n\r\nexport let initDone = false;\r\nexport function setInitDone() {\r\n  // init makes a callback when run the last line\r\n  // and calls for initWeatherMapsObj (camera, renderer and controls)\r\n  initDone = true;\r\n}"],"sourceRoot":""}