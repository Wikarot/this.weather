{"version":3,"sources":["components/CustomRadio.js","components/CustomChk.js","js/threeStuff.js","components/WeatherMaps.js"],"names":["CustomRadio","props","iconClasses","undefined","push","apply","Object","toConsumableArray","react_default","a","createElement","className","id","idWord","name","groupWord","type","defaultChecked","defaultChk","title","titleWord","htmlFor","Icon","iconWord","classes","concat","CustomChk","customChkClasses","iconWordB","join","iconWordA","merToEqrWorker","Worker","URL","base","last1","last2","MAP","SPH_SCALE","T","T_SIZE","RES","BASE_SPH_GEO","SphereBufferGeometry","SPH_RAD","rotateY","THREE_MATH","degToRad","AMB","AmbientLight","SUN","DirectionalLight","WEATHER_CTX_MAT","init","_init","this","arguments","_callee7","TEXTURE","SPECULAR","BUMP","PHYS","i","AUX","WEATHER","ATMO","regenerator_default","wrap","_context7","prev","next","TextureLoader","load","encoding","sRGBEncoding","SCENE","fog","Fog","Z_OFF","setSunPosition","Mesh","geometry","material","MeshPhongMaterial","map","specularMap","specular","Color","shininess","bumpMap","bumpScale","matrixAutoUpdate","document","getElementById","getContext","CanvasTexture","canvas","transparent","layers","set","scale","multiplyScalar","enable","add","color","side","DoubleSide","opacity","setInterval","updateSunPosition","setInitDone","stop","sun","rotY","HH","Date","getUTCHours","MM","getUTCMonth","MATRIX","Matrix4","rotX","makeRotationFromEuler","Euler","position","applyMatrix4","lookAt","createWeatherMap","MERCATOR_CANVAS","width","height","MERCATOR_CTX","cont","X00","Image","X10","X01","X11","drawMapTiles","_x","_x2","_x3","_drawMapTiles","asyncToGenerator","mark","_callee5","img","x","y","T_DATA","L","_i","A","_i2","_i3","_i4","R","G","_i5","_y","LINE","_context5","drawImage","getImageData","data","length","putImageData","postMessage","crossOrigin","src","onload","_callee","_context","abrupt","sent","_callee2","_context2","_callee3","_context3","_callee4","_context4","messageCount","onmessage","e","I","forEach","_ref5","_callee6","merY","_context6","content","newY","_x4","dbg","needsUpdate","suc","camera","renderer","controls","VEC","Vector3","RAY_CASTER","Raycaster","MAPS","label","ref","icon","DEFAULT_OPTION","SMALL_MEDIA","window","matchMedia","WeatherMaps","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","option","showContent","showGlobe","showMap","setGlobe","bind","assertThisInitialized","setMap","setWeatherOption","animateRaf","labelsRaf","animate","setCameraPosition","toggleLights","toggleRotation","resetRedererSize","updateLabels","mapCanvas","initDone","N_MAPS_TO_LOAD","PerspectiveCamera","NEAR","FAR","WebGLRenderer","antialias","alpha","powerPreference","stencil","setSize","setPixelRatio","gammaFactor","gammaOutput","domElement","OrbitControls","rotateSpeed","autoRotate","autoRotateSpeed","enablePan","enableZoom","enableKeys","minPolarAngle","Math","PI","maxPolarAngle","appendChild","style","overflowX","city_labels","item","addEventListener","_this2","_loop","W","matches","OFFSET","SCROLLABLE","SCROLLED","target","scrollLeft","addListener","dragscroll","reset","cancelAnimationFrame","setState","showMAp","disable","clearRect","requestAnimationFrame","update","render","theta","matrix","checked","intensity","currentSize","getSize","_this3","clientWidth","H","clientHeight","dot","updateWorldMatrix","getWorldPosition","project","setFromCamera","VEC_X","VEC_Y","transform","round","z","display","key","Label","cityName","String","Component"],"mappings":"kPAIe,SAASA,EAAYC,GAClC,IAAIC,EAAc,GAKlB,YAJ0BC,IAAtBF,EAAMC,aACRA,EAAYE,KAAZC,MAAAH,EAAWI,OAAAC,EAAA,EAAAD,CAASL,EAAMC,cAI1BM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,SAAOE,GAAI,gBAAkBX,EAAMY,OACjCF,UAAU,eACVG,KAAMb,EAAMc,UAAY,eACxBC,KAAK,QACLC,eAAgBhB,EAAMiB,aACxBV,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8BACfQ,MAAOlB,EAAMmB,UACbC,QAAS,gBAAkBpB,EAAMY,SACnCL,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMR,KAAMb,EAAMsB,SAAUC,QAAO,GAAAC,OAAMvB,MChBhC,SAASwB,EAAUzB,GAChC,IAAIC,EAAc,GACdyB,EAAmB,CAAC,uBAAwB,OAOhD,YANwBxB,IAApBF,EAAM2B,WACRD,EAAiBvB,KAAK,aACtBF,EAAYE,KAAK,iBACZuB,EAAiBvB,KAAK,oBACHD,IAAtBF,EAAMC,aAA2BA,EAAYE,KAAZC,MAAAH,EAAWI,OAAAC,EAAA,EAAAD,CAASL,EAAMC,cAG7DM,EAAAC,EAAAC,cAAA,OAAKC,UAAWgB,EAAiBE,KAAK,MACpCrB,EAAAC,EAAAC,cAAA,SAAOE,GAAI,cAAgBX,EAAMY,OAC/BF,UAAU,aACVK,KAAK,WACLC,eAAgBhB,EAAMiB,aACxBV,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBACfQ,MAAOlB,EAAMmB,UACbC,QAAS,cAAgBpB,EAAMY,SACjCL,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMR,KAAMb,EAAM6B,UAAWN,QAAO,GAAAC,OAAMvB,UACpBC,IAApBF,EAAM2B,UACLpB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMR,KAAMb,EAAM2B,UAAWJ,QAAO,GAAAC,OAAMvB,KAAoB,wBChBjE6B,EAAiB,IAAIC,OAAO,gCAC5BC,EAAM,CACVC,KAAM,uCACNC,MAAO,8CACPC,MAAO,+CAEHC,EAAM,CAAC,aAAc,oBAAqB,eAAgB,WAAY,YAEtEC,EAAY,MACZC,EAAI,EACJC,EAASC,IAAMF,EAGfG,EAAe,IAAIC,IAAqBC,IAN1B,OAOpBF,EAAaG,QAAQC,IAAWC,UAAU,KAEnC,IAAMC,EAAM,IAAIC,IAAa,SAJX,MAKZC,EAAM,IAAIC,IAAiB,SANhB,KAOXC,EAAkB,CAC7B,MAACjD,OAAWA,GACZ,MAACA,OAAWA,GACZ,MAACA,OAAWA,GACZ,MAACA,OAAWA,GACZ,MAACA,OAAWA,IAGP,SAAekD,IAAtB,OAAAC,EAAAjD,MAAAkD,KAAAC,sDAAO,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAzD,EAAA0D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAyBL,IAxBMZ,GAAU,IAAIa,KAAgBC,KAAK,wCACnCb,GAAW,IAAIY,KAAgBC,KAAK,qCACpCZ,GAAO,IAAIW,KAAgBC,KAAK,qCACtCd,EAAQe,SAAWC,IACnBf,EAASc,SAAWC,IACpBd,EAAKa,SAAWC,IAChBC,IAAMC,IAAM,IAAIC,IAAI,QAAUC,IAAkB,IAAVlC,IAAgBkC,KACtDC,EAAe7B,IAKTW,EAAO,IAAImB,KACZC,SAAWvC,EAChBmB,EAAKqB,SAAW,IAAIC,IAAkB,CACpCC,IAAK1B,EACL2B,YAAa1B,EACb2B,SAAU,IAAIC,IAAM,SACpBC,UAAW,GACXC,QAAS7B,EACT8B,UAAW,OAEb7B,EAAK8B,kBAAmB,EAEf7B,EAAI,EAAGA,EAAI,EAAGA,IACrBV,EAAgBU,GAAG,GAAK8B,SAASC,eAAe,eAAiB/B,GAAGgC,WAAW,MAC/E1C,EAAgBU,GAAG,GAAK,IAAIqB,KACtBpB,EAAM,IAAIgC,IAAc3C,EAAgBU,GAAG,GAAGkC,SAChDvB,SAAWC,IACftB,EAAgBU,GAAG,GAAGsB,IAAMrB,EAC5BX,EAAgBU,GAAG,GAAG0B,UAAY,EAClCpC,EAAgBU,GAAG,GAAGmC,aAAc,GAC9BjC,EAAU,IAAIgB,IAAKtC,EAAcU,EAAgBU,GAAG,KAClDoC,OAAOC,IAAIrC,EAAI,GACvBE,EAAQoC,MAAMC,eAAe/D,GAC7B0B,EAAQ2B,kBAAmB,EAC3B3C,EAAIkD,OAAOI,OAAOxC,EAAI,GACtBZ,EAAIgD,OAAOI,OAAOxC,EAAI,GACtBa,IAAM4B,IAAIvC,IAGNC,EAAO,IAAIe,KACZC,SAAWvC,EAChBuB,EAAKiB,SAAW,IAAIC,IAAkB,CACpCqB,MAAO,SACPC,KAAMC,IACNT,aAAa,EACbU,QAAS,IACTnB,UAAW,IAEbvB,EAAKmC,MAAMC,eAA2B,GAAZ/D,GAC1B2B,EAAK0B,kBAAmB,EAKxBhB,IAAM4B,IAAI1C,EAAMI,EAAMjB,EAAKE,GAE3B0D,YAAYC,EAAmB,MAC/BC,cA5DK,yBAAA1C,EAAA2C,SAAAtD,6BA+DP,SAASoD,IACP9B,EAAe7B,GAGjB,SAAS6B,EAAeiC,GACtB,IAGIC,EAHEC,GAAK,IAAIC,MAAOC,cAChBC,GAAK,IAAIF,MAAOG,cAChBC,EAAS,IAAIC,IAEfC,EAAO,EAEEA,EAATJ,GAAM,GAAY,EAAIA,EAAM,GACpB,EAAIA,EAAK,GAErBJ,EAAO,IAAOC,EAAK,GAAM,IACzBK,EAAOG,sBAAsB,IAAIC,IAC/B7E,IAAWC,SAAS0E,GACpB3E,IAAWC,SAASkE,GACpB,EAAG,QACLD,EAAIY,SAASzB,IAAI,EAAG,EAAW,GAARrB,KACvBkC,EAAIY,SAASC,aAAaN,GAC1BP,EAAIc,OAAO,EAAG,EAAG,GAQZ,SAASC,EAAiBjE,GAC/B,IAAMkE,EAAkBpC,SAASlF,cAAc,UAE/CsH,EAAgBC,MAAQxF,IACxBuF,EAAgBE,OAASzF,IACzB,IAAM0F,EAAeH,EAAgBlC,WAAW,MAC5CsC,EAAO,EAEPC,EAAM,IAAIC,MAAM9F,EAAQA,GACxB+F,EAAM,IAAID,MAAM9F,EAAQA,GACxBgG,EAAM,IAAIF,MAAM9F,EAAQA,GACxBiG,EAAM,IAAIH,MAAM9F,EAAQA,GAXM,SAwBnBkG,EAxBmBC,EAAAC,EAAAC,GAAA,OAAAC,EAAAzI,MAAAkD,KAAAC,WAAA,SAAAsF,IAAA,OAAAA,EAAAxI,OAAAyI,EAAA,EAAAzI,CAAA4D,EAAAzD,EAAAuI,KAwBlC,SAAAC,EAA4BC,EAAKC,EAAGC,GAApC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA9F,EAAAzD,EAAA0D,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,OAKE,GAJA6D,EAAa+B,UAAUhB,EAAKC,EAAGC,GACzBC,EAASlB,EAAagC,aAAahB,EAAGC,EAAG5G,EAAQA,GACjD8G,EAAID,EAAOe,KAAKC,OAEZ,IAANvG,EACF,IAASA,EAAI,EAAGA,EAAIwF,EAAGxF,GAAK,EAE1B0F,IADIA,EAAIH,EAAOe,KAAKtG,EAAI,IACd,KAAc,GACxBuF,EAAOe,KAAKtG,EAAI,GAAK,IACrBuF,EAAOe,KAAKtG,EAAI,GAAK,IACrBuF,EAAOe,KAAKtG,EAAI,GAAK,IACrBuF,EAAOe,KAAKtG,EAAI,GAAS,IAAJ0F,OAElB,GAAU,IAAN1F,EACT,IAASA,EAAI,EAAGA,EAAIwF,EAAGxF,GAAK,EAC1BuF,EAAOe,KAAKtG,EAAI,GAAK,IACrBuF,EAAOe,KAAKtG,EAAI,GAAK,IACrBuF,EAAOe,KAAKtG,EAAI,GAAK,IACrBuF,EAAOe,KAAKtG,EAAI,IAAM,SAEnB,GAAU,IAANA,EACT,IAASA,EAAI,EAAGA,EAAIwF,EAAGxF,GAAK,EAC1BuF,EAAOe,KAAKtG,EAAI,IAAM,SAEnB,GAAU,IAANA,EACT,IAASA,EAAI,EAAGA,EAAIwF,EAAGxF,GAAK,EACpB8F,EAAIP,EAAOe,KAAKtG,EAAI,GACpB+F,EAAIR,EAAOe,KAAKtG,EAAI,GAE1BuF,EAAOe,KAAKtG,EAAI,GAAK,IAAU,IAAJ+F,EAC3BR,EAAOe,KAAKtG,EAAI,GAAK,IAAU,IAAJ8F,EAC3BP,EAAOe,KAAKtG,EAAI,GAAK,EACrBuF,EAAOe,KAAKtG,EAAI,IAAM,SAEnB,GAAU,IAANA,EACT,IAASA,EAAI,EAAGA,EAAIwF,EAAGxF,GAAK,EAC1BuF,EAAOe,KAAKtG,EAAI,IAAM,IAK1B,GAFAqE,EAAamC,aAAajB,EAAQF,EAAGC,KACrChB,IACa7F,EAAIA,EACf,IAAS6G,EAAI,EAAGA,EAAI3G,IAAK2G,IACjBY,EAAO7B,EAAagC,aAAa,EAAGf,EAAG3G,IAAK,GAClDV,EAAewI,YAAY,CAACP,EAAMZ,EAAG3G,IAAKA,IAAM,EAAGqB,IA7CzD,wBAAAmG,EAAAlD,SAAAkC,OAxBkC5I,MAAAkD,KAAAC,WAYlC6E,EAAImC,YAAc,YAClBjC,EAAIiC,YAAc,YAClBhC,EAAIgC,YAAc,YAClB/B,EAAI+B,YAAc,YAClBnC,EAAIoC,IAAMxI,EAAIC,KAAOG,EAAIyB,GAAK,SAAW7B,EAAIE,MAC7CoG,EAAIkC,IAAMxI,EAAIC,KAAOG,EAAIyB,GAAK,SAAW7B,EAAIE,MAC7CqG,EAAIiC,IAAMxI,EAAIC,KAAOG,EAAIyB,GAAK,SAAW7B,EAAIG,MAC7CqG,EAAIgC,IAAMxI,EAAIC,KAAOG,EAAIyB,GAAK,SAAW7B,EAAIG,MAC7CiG,EAAIqC,OAAJpK,OAAAyI,EAAA,EAAAzI,CAAA4D,EAAAzD,EAAAuI,KAAa,SAAA2B,IAAA,OAAAzG,EAAAzD,EAAA0D,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,cAAAsG,EAAAtG,KAAA,EAAkBoE,EAAaL,EAAc,EAAT7F,EAAqB,EAATA,GAAhD,cAAAoI,EAAAC,OAAA,SAAAD,EAAAE,MAAA,wBAAAF,EAAA7D,SAAA4D,MACbpC,EAAImC,OAAJpK,OAAAyI,EAAA,EAAAzI,CAAA4D,EAAAzD,EAAAuI,KAAa,SAAA+B,IAAA,OAAA7G,EAAAzD,EAAA0D,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAA1G,KAAA,EAAkBoE,EAAaH,EAAc,EAAT/F,EAAqB,EAATA,GAAhD,cAAAwI,EAAAH,OAAA,SAAAG,EAAAF,MAAA,wBAAAE,EAAAjE,SAAAgE,MACbvC,EAAIkC,OAAJpK,OAAAyI,EAAA,EAAAzI,CAAA4D,EAAAzD,EAAAuI,KAAa,SAAAiC,IAAA,OAAA/G,EAAAzD,EAAA0D,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cAAA4G,EAAA5G,KAAA,EAAkBoE,EAAaF,EAAc,EAAThG,EAAqB,EAATA,GAAhD,cAAA0I,EAAAL,OAAA,SAAAK,EAAAJ,MAAA,wBAAAI,EAAAnE,SAAAkE,MACbxC,EAAIiC,OAAJpK,OAAAyI,EAAA,EAAAzI,CAAA4D,EAAAzD,EAAAuI,KAAa,SAAAmC,IAAA,OAAAjH,EAAAzD,EAAA0D,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA9G,KAAA,EAAkBoE,EAAaD,EAAc,EAATjG,EAAqB,EAATA,GAAhD,cAAA4I,EAAAP,OAAA,SAAAO,EAAAN,MAAA,wBAAAM,EAAArE,SAAAoE,MAoDf,IAAIE,EAAe,EACnBtJ,EAAeuJ,UAAY,SAACC,GAC1B,IAAMC,EAAID,EAAEnB,KAAK,GACjBmB,EAAEnB,KAAK,GAAGqB,QAAV,eAAAC,EAAApL,OAAAyI,EAAA,EAAAzI,CAAA4D,EAAAzD,EAAAuI,KAAkB,SAAA2C,EAAMC,GAAN,OAAA1H,EAAAzD,EAAA0D,KAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,cAAAuH,EAAAvH,KAAA,EACVlB,EAAgBoI,GAAG,GAAGlB,aAAasB,EAAKE,QAAS,EAAGF,EAAKG,MAD/C,wBAAAF,EAAA9E,SAAA4E,MAAlB,gBAAAK,GAAA,OAAAN,EAAArL,MAAAkD,KAAAC,YAAA,IAMAyI,YAAI,yBAA2B5J,EAAImJ,GAAK,gBACxCpI,EAAgBoI,GAAG,GAAGpG,IAAI8G,aAAc,EAE9B,IAANV,GACF5F,SAASC,eAAe,cACrBC,WAAW,MACXwE,aAAalH,EAAgB,GAAG,GAAG+G,aAAa,EAAG,EAAG1H,IAAW,GAANA,KAAW,EAAG,GAEzD,MADrB4I,GACwBc,YAAI,wFCjN9B,IAcIC,EAAQC,EAAUC,EAdhBC,EAAM,IAAIC,IACVC,EAAa,IAAIC,IACjBC,EAAO,CACX,CAAE/L,GAAI,EAAGgM,MAAO,UAAWC,IAAK,CAAC,IAAKC,KAAM,WAC5C,CAAElM,GAAI,EAAGgM,MAAO,YAAaC,IAAK,CAAC,KAAM,QAASC,KAAM,SACxD,CAAElM,GAAI,EAAGgM,MAAO,mBAAiBC,IAAK,CAAC,MAAO,SAAUC,KAAM,iBAC9D,CAAElM,GAAI,EAAGgM,MAAO,aAAWC,IAAK,CAAC,SAAU,WAAYC,KAAM,cAC7D,CAAElM,GAAI,EAAGgM,MAAO,SAAUC,IAAK,CAAC,OAAQ,UAAWC,KAAM,QACzD,CAAElM,GAAI,EAAGgM,MAAO,cAAeC,IAAK,CAAC,WAAS,SAAO,WAASC,KAAM,gBAGhEC,EAAiB,EACjBC,EAAcC,OAAOC,WAAW,sBAIjBC,cACnB,SAAAA,EAAYlN,GAAO,IAAAmN,EAAA,OAAA9M,OAAA+M,EAAA,EAAA/M,CAAAiD,KAAA4J,IACjBC,EAAA9M,OAAAgN,EAAA,EAAAhN,CAAAiD,KAAAjD,OAAAiN,EAAA,EAAAjN,CAAA6M,GAAAK,KAAAjK,KAAMtD,KACDwN,MAAQ,CACXC,OAAQX,EACRH,MAAOD,EAAKI,GAAgBH,MAC5BC,IAAKF,EAAKI,GAAgBF,IAC1Bc,YAAa,eACbC,UAAW,OACXC,QAAS,QAEXT,EAAKU,SAAWV,EAAKU,SAASC,KAAdzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IAChBA,EAAKa,OAASb,EAAKa,OAAOF,KAAZzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IACdA,EAAKc,iBAAmBd,EAAKc,iBAAiBH,KAAtBzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IACxBA,EAAKe,WAAa,EAClBf,EAAKgB,UAAY,EAGjBhB,EAAKiB,QAAUjB,EAAKiB,QAAQN,KAAbzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IACfA,EAAKkB,kBAAoBlB,EAAKkB,kBAAkBP,KAAvBzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IACzBA,EAAKmB,aAAenB,EAAKmB,aAAaR,KAAlBzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IACpBA,EAAKoB,eAAiBpB,EAAKoB,eAAeT,KAApBzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IACtBA,EAAKqB,iBAAmBrB,EAAKqB,iBAAiBV,KAAtBzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IAExBA,EAAKsB,aAAetB,EAAKsB,aAAaX,KAAlBzN,OAAA0N,EAAA,EAAA1N,CAAA8M,IAGpBA,EAAKuB,eAAYxO,EA1BAiN,+MA+BZwB,qCAEGvL,WAEN,IAASS,EAAI,EAAGA,EAAI+K,EAAoB/K,IAAKiE,EAAiBjE,IAE9DsI,EAAS,IAAI0C,IAAkB,GAAIrM,IAAMA,IAAKsM,IAAMC,MAC7C9I,OAAOI,OAAOyG,IACrBV,EAAW,IAAI4C,IAAc,CAC3BC,WAAW,EACXC,OAAO,EACPC,gBAAiB,mBACjBC,SAAS,KAEFC,QAAQ7M,IAAKA,KACtB4J,EAASkD,cAAc,GACvBlD,EAASmD,YAAc,IACvBnD,EAASoD,aAAc,EACvBpD,EAASqD,WAAW9O,GAAK,gBACzB0L,EAAW,IAAIqD,IAAcvD,EAAQC,EAASqD,aACrCE,YAAc,GACvBtD,EAASuD,YAAa,EACtBvD,EAASwD,gBAAkB,EAC3BxD,EAASyD,WAAY,EACrBzD,EAAS0D,YAAa,EACtB1D,EAAS2D,YAAa,EACtB3D,EAAS4D,cAAgBC,KAAKC,GAAe,GAAVD,KAAKC,GACxC9D,EAAS+D,cAA0B,GAAVF,KAAKC,WAYhC,IATAxK,SAASC,eAAe,aAAayK,YAAYjE,EAASqD,YAC1D9J,SAASC,eAAe,qBAAqB0K,MAAMC,UAAY,UAC/DjN,KAAKoL,UAAY/I,SAASC,eAAe,cACzCtC,KAAK+K,kBAAkB,EAAG,GAC1B/K,KAAKkL,mBACLlL,KAAK8K,UACLoC,IAAYhF,QAAQ,SAAAiF,GAAI,OAAIA,EAAK9D,MAAQhH,SAASC,eAAe,cAAgB6K,EAAK9P,MACtF2C,KAAKmL,0BAEI5K,GACP8B,SAASC,eAAe,gBAAkB/B,GAAG6M,iBAAiB,SAAU,WAAQC,EAAK1C,iBAAiBpK,MAD/FA,EAAI,EAAGA,EAAI,EAAGA,IAAvB+M,EAAS/M,GAGT8B,SAASC,eAAe,4BAA4B8K,iBAAiB,SAAU,WAAQC,EAAK9C,aAC5FlI,SAASC,eAAe,0BAA0B8K,iBAAiB,SAAU,WAAQC,EAAK3C,WAC1FrI,SAASC,eAAe,2BAA2B8K,iBAAiB,SAAU,SAAApF,GAAOqF,EAAKpC,eAAejD,KACzG3F,SAASC,eAAe,gCAAgC8K,iBAAiB,SAAU,SAAApF,GAAOqF,EAAKrC,aAAahD,KAE5G3F,SAASC,eAAe,qBAAqB8K,iBAAiB,SAAU,SAAApF,GACtE,IAAMuF,EAAI9D,EAAY+D,QAAU,IAAM,KAChCC,EAA0C,GAAhChE,EAAY+D,QAAU,EAAI,IACpCE,EAAiC,IAAlBH,EAAa,EAATE,GAAoBA,EACvCE,EAAW3F,EAAE4F,OAAOC,WAAaH,EACvCrL,SAASC,eAAe,aAAa0K,MAAMtI,MAAS,GAAKiJ,EAAY,KACrEtL,SAASC,eAAe,cAAc0K,MAAMtI,MAAQ,GAAM,GAAKiJ,EAAY,OAE7ElE,EAAYqE,YAAY9N,KAAKkL,kBAC7B6C,IAAWC,0JAKXC,qBAAqBjO,KAAK4K,YAC1BqD,qBAAqBjO,KAAK6K,8CAQ1BxI,SAASC,eAAe,qBAAqB0K,MAAMC,UAAY,UAClC,SAAzBjN,KAAKkK,MAAMG,WAAsBrK,KAAKkO,SAAS,CAAE5D,QAAS,OAAQD,UAAW,0CAIjFhI,SAASC,eAAe,qBAAqB0K,MAAMC,UAAY,SACpC,SAAvBjN,KAAKkK,MAAMiE,SAAoBnO,KAAKkO,SAAS,CAAE7D,UAAW,OAAQC,QAAS,kDAGhEH,GACfnK,KAAKkO,SAAS,CACZ/D,OAAQA,EACRd,MAAOD,EAAKe,GAAQd,MACpBC,IAAKF,EAAKe,GAAQb,MAEpB,IAAI/I,EAAI,EACR,GACM4J,IAAWf,EAAK7I,GAAGlD,GAAIwL,EAAOlG,OAAOI,OAAOxC,GAC3CsI,EAAOlG,OAAOyL,QAAQ7N,GAC3BA,UACOA,EAAI,GACE,IAAX4J,EAAcnK,KAAKoL,UAAU7I,WAAW,MAAM8L,UAAU,EAAG,EAAGnP,IAAW,GAANA,KAClEc,KAAKoL,UAAU7I,WAAW,MAAMwE,aACnClH,EAAgBsK,EAAS,GAAG,GAAGvD,aAAa,EAAG,EAAG1H,IAAW,GAANA,KAAW,EAAG,qCAQvEc,KAAK4K,WAAa0D,sBAAsBtO,KAAK8K,SAC7C/B,EAASwF,SACTzF,EAAS0F,OAAOpN,IAAOyH,6CAGP+C,EAAO6C,GACvB,IAAIC,EAAS,IAAIzK,IACjByK,EAAOvK,sBAAsB,IAAIC,IAAMwH,EAAO6C,EAAO,EAAG,QACxD5F,EAAOxE,SAASzB,IAAI,EAAG,EAAGrB,KAAO+C,aAAaoK,GAC9C7F,EAAOtE,OAAO,EAAG,EAAG,wCAUTyD,IACc,IAArBA,EAAE4F,OAAOe,SACXlP,EAAImP,UDhKc,ICiKlBjP,EAAIiP,UAAY,IAGhBnP,EAAImP,UDnKe,KCoKnBjP,EAAIiP,UDrKc,4CC0KP5G,GACbe,EAASuD,WAAatE,EAAE4F,OAAOe,mDAI/B,IAAME,EAAc/F,EAASgG,QAAQlJ,EACjC6D,EAAY+D,SAAWqB,IAAsB,GAAN3P,IAAU4J,EAASiD,QAAc,GAAN7M,IAAgB,GAANA,KACtEuK,EAAY+D,SAAWqB,IAAgB3P,KAAK4J,EAASiD,QAAQ7M,IAAKA,4CAG/D,IAAA6P,EAAA/O,KACbA,KAAK6K,UAAYyD,sBAAsBtO,KAAKmL,cAC5C,IAAMoC,EAAIzE,EAASqD,WAAW6C,YACxBC,EAAInG,EAASqD,WAAW+C,aAE9BhC,IAAYhF,QAAQ,SAAAiF,GAAQ,IACpB9D,EAAqB8D,EAArB9D,MAAO8F,EAAchC,EAAdgC,IAAKvJ,EAASuH,EAATvH,EAAGC,EAAMsH,EAANtH,EACrB,GAA6B,SAAzBkJ,EAAK7E,MAAMG,UAAsB,CACnC8E,EAAIC,mBAAkB,GAAM,GAC5BD,EAAIE,iBAAiBrG,GACrBA,EAAIsG,QAAQzG,GACZK,EAAWqG,cAAcvG,EAAKH,GAC9B,IAAM2G,GAAiB,GAARxG,EAAIpD,EAAS,IAAM2H,EAC5BkC,IAAkB,GAATzG,EAAInD,EAAU,IAAMoJ,EACnC5F,EAAM2D,MAAM0C,UAAY,mCAAqC9C,KAAK+C,MAAMH,GAAS,OAAS5C,KAAK+C,MAAMF,GAAS,MAC1GzG,EAAI4G,EAAI,GAAIvG,EAAM2D,MAAM6C,QAAU,OACjCxG,EAAM2D,MAAM6C,QAAU,QAE3BxG,EAAM2D,MAAM6C,QAAU,GACjBpG,EAAY+D,UAAW5H,GAAK,EAAGC,GAAK,GACzCwD,EAAM2D,MAAM0C,UAAY,mCAAqC9C,KAAK+C,MAAM/J,GAAK,OAASgH,KAAK+C,MAAM9J,GAAK,yCAM1G,OACE5I,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBACNJ,EAAAC,EAAAC,cAAA,WAASE,GAAG,gBACVJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,uBACNJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK6C,KAAKkK,MAAMb,QAElBpM,EAAAC,EAAAC,cAACV,EAAD,CACEa,OAAO,cACPU,SAAS,QACTR,UAAU,eACVK,UAAU,QACVF,YAAY,EACZmS,IAAI,iCACN7S,EAAAC,EAAAC,cAACV,EAAD,CACEa,OAAO,YACPU,SAAS,MACTR,UAAU,eACVK,UAAU,OACVF,YAAY,EACZmS,IAAI,gCAER7S,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBAAoBD,UAAU,cACpCH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YAAY2P,MAAO,CAAE6C,QAAS7P,KAAKkK,MAAMG,YAC/CpN,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBAAeJ,EAAAC,EAAAC,cAAA,eAGzBF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UAAU2P,MAAO,CAAE6C,QAAS7P,KAAKkK,MAAMI,UAC7CrN,EAAAC,EAAAC,cAAA,OAAKE,GAAG,wBACNJ,EAAAC,EAAAC,cAAA,UAAQE,GAAG,aAAaqH,MAAOxF,IAAKyF,OAAc,GAANzF,QAGhDjC,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UACL6P,IAAYrL,IAAI,SAAAsL,GAAI,OACnBlQ,EAAAC,EAAAC,cAAC4S,EAAD,CACE1S,GAAI8P,EAAK9P,GACT2S,SAAU7C,EAAK6C,SACfF,IAAK,cAAgB3C,EAAK9P,SAIlCJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,OACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACL+L,EAAKpJ,KAAKkK,MAAMC,QAAQb,IAAIzH,IAAI,SAAAsL,GAAI,OACnClQ,EAAAC,EAAAC,cAAA,KAAG2S,IAAK,YAAc3C,GAAOA,MAGjClQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBACRJ,EAAAC,EAAAC,cAAA,OAAKC,UAAW,6BAA+BgM,EAAKpJ,KAAKkK,MAAMC,QAAQ9M,MAGzEJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,wBACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,iBAAiB2P,MAAO,CAAE6C,QAAS7P,KAAKkK,MAAMG,YACpDpN,EAAAC,EAAAC,cAACgB,EAAD,CACEb,OAAO,eACPiB,UAAU,eACVV,UAAU,uBACVF,YAAY,IACdV,EAAAC,EAAAC,cAACgB,EAAD,CACEb,OAAO,oBACPiB,UAAU,YACVF,UAAU,MACVR,UAAU,0BACVF,YAAY,KAEhBV,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBACL+L,EAAKvH,IAAI,SAAAsI,GAAM,OACdlN,EAAAC,EAAAC,cAACV,EAAD,CACEa,OAAQ2S,OAAO9F,EAAO9M,IACtBW,SAAUmM,EAAOZ,KACjB/L,UAAW,aACXK,UAAWsM,EAAOd,MAClB1L,WAA0B,IAAdwM,EAAO9M,GACnByS,IAAK,oBAAsB3F,EAAO9M,SAI1CJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,WAAW2P,MAAO,CAAE6C,QAAS7P,KAAKkK,MAAMI,UAC9CrN,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,cACRJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,0BA5RmB6S,aAqSzC,SAASH,EAAMrT,GACb,OACEO,EAAAC,EAAAC,cAAA,OAAKE,GAAI,cAAgBX,EAAMW,GAAID,UAAW,cAC3CV,EAAMsT","file":"static/js/WeatherMaps.1ee18e05.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default function CustomRadio(props) {\r\n  let iconClasses = [];\r\n  if (props.iconClasses !== undefined) {\r\n    iconClasses.push(...props.iconClasses);\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom_radio_container\">\r\n      <input id={'custom_radio_' + props.idWord}\r\n        className=\"custom_radio\"\r\n        name={props.groupWord + '_radio_group'}\r\n        type=\"radio\"\r\n        defaultChecked={props.defaultChk} />\r\n      <label className=\"custom_radio_lbl icon_small\"\r\n        title={props.titleWord}\r\n        htmlFor={'custom_radio_' + props.idWord} />\r\n      <Icon name={props.iconWord} classes={[...iconClasses]} />\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomRadio.propTypes = {\r\n  idWord: PropTypes.string.isRequired,\r\n  iconWord: PropTypes.string.isRequired,\r\n  groupWord: PropTypes.string.isRequired,\r\n  iconClasses: PropTypes.arrayOf(PropTypes.string),\r\n  titleWord: PropTypes.string.isRequired,\r\n  defaultChk: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon';\r\n\r\nexport default function CustomChk(props) {\r\n  let iconClasses = [];\r\n  let customChkClasses = ['custom_chk_container', 'btn'];\r\n  if (props.iconWordB !== undefined) {\r\n    customChkClasses.push('dual_icon');\r\n    iconClasses.push('perma_active');\r\n  } else customChkClasses.push('single_icon');\r\n  if (props.iconClasses !== undefined) iconClasses.push(...props.iconClasses);\r\n\r\n  return (\r\n    <div className={customChkClasses.join(' ')}>\r\n      <input id={'custom_chk_' + props.idWord}\r\n        className=\"custom_chk\"\r\n        type=\"checkbox\"\r\n        defaultChecked={props.defaultChk} />\r\n      <label className=\"custom_chk_lbl\"\r\n        title={props.titleWord}\r\n        htmlFor={'custom_chk_' + props.idWord} />\r\n      <Icon name={props.iconWordA} classes={[...iconClasses]} />\r\n      {(props.iconWordB !== undefined) ?\r\n        (<Icon name={props.iconWordB} classes={[...iconClasses]} />) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomChk.propTypes = {\r\n  idWord: PropTypes.string.isRequired,\r\n  iconWordA: PropTypes.string.isRequired,\r\n  iconWordB: PropTypes.string,\r\n  iconClasses: PropTypes.arrayOf(PropTypes.string),\r\n  titleWord: PropTypes.string.isRequired,\r\n  defaultChk: PropTypes.bool.isRequired\r\n}\r\n","import {\r\n  TextureLoader, sRGBEncoding, SphereBufferGeometry, Math as THREE_MATH,\r\n  AmbientLight, DirectionalLight, Fog, Mesh, Euler, MeshPhongMaterial,\r\n  Color, Matrix4, CanvasTexture, DoubleSide\r\n} from 'three';\r\nimport SCENE, { Z_OFF, setInitDone, SPH_RAD, RES } from './threeStuffUtils';\r\nimport { suc, dbg } from './customConsole';\r\n\r\nconst merToEqrWorker = new Worker('mercatorToEquirectangular.js');\r\nconst URL = {\r\n  base: 'https://tile.openweathermap.org/map/',\r\n  last1: '.png?appid=b280c897878592322aafe56701248929',\r\n  last2: '.png?appid=cdd659df7dc048884575b9451ddf1330'\r\n};\r\nconst MAP = ['clouds_new', 'precipitation_new', 'pressure_new', 'wind_new', 'temp_new'];\r\nconst SPH_SUB_DIV = 64; // sphere sub divisions\r\nconst SPH_SCALE = 1.006; // for atmosphere and weather\r\nconst T = 2; // tiles by side (total tiles = T * T)\r\nconst T_SIZE = RES / T;\r\nexport const LIGHT_ON = 0.78;\r\nexport const LIGHT_OFF = 0.015;\r\nconst BASE_SPH_GEO = new SphereBufferGeometry(SPH_RAD, SPH_SUB_DIV, SPH_SUB_DIV);\r\nBASE_SPH_GEO.rotateY(THREE_MATH.degToRad(-90)); // horizontal rotation offset correction\r\n\r\nexport const AMB = new AmbientLight(0xffffff, LIGHT_OFF);\r\nexport const SUN = new DirectionalLight(0xffffff, LIGHT_ON);\r\nexport const WEATHER_CTX_MAT = [ // context, material\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined],\r\n  [undefined, undefined]\r\n];\r\n\r\nexport async function init() {\r\n  const TEXTURE = new TextureLoader().load('/this.weather/images/texture-512.png');\r\n  const SPECULAR = new TextureLoader().load('/this.weather/images/spec-512.png');\r\n  const BUMP = new TextureLoader().load('/this.weather/images/bump-512.jpg');\r\n  TEXTURE.encoding = sRGBEncoding;\r\n  SPECULAR.encoding = sRGBEncoding;\r\n  BUMP.encoding = sRGBEncoding;\r\n  SCENE.fog = new Fog(0x74c0ff, Z_OFF - SPH_RAD * 0.82, Z_OFF);\r\n  setSunPosition(SUN);\r\n\r\n  ////////////////////////////////\r\n  // MODELS\r\n  ////////////////////////////////\r\n  const PHYS = new Mesh(); // physic earth globe\r\n  PHYS.geometry = BASE_SPH_GEO;\r\n  PHYS.material = new MeshPhongMaterial({\r\n    map: TEXTURE,\r\n    specularMap: SPECULAR,\r\n    specular: new Color(0x1a1a1a),\r\n    shininess: 55.0,\r\n    bumpMap: BUMP,\r\n    bumpScale: 0.008,\r\n  });\r\n  PHYS.matrixAutoUpdate = false;\r\n  //\r\n  for (let i = 0; i < 5; i++) {\r\n    WEATHER_CTX_MAT[i][0] = document.getElementById('weather_map_' + i).getContext('2d');\r\n    WEATHER_CTX_MAT[i][1] = new MeshPhongMaterial();\r\n    const AUX = new CanvasTexture(WEATHER_CTX_MAT[i][0].canvas);\r\n    AUX.encoding = sRGBEncoding;\r\n    WEATHER_CTX_MAT[i][1].map = AUX;\r\n    WEATHER_CTX_MAT[i][1].shininess = 0.0;\r\n    WEATHER_CTX_MAT[i][1].transparent = true;\r\n    const WEATHER = new Mesh(BASE_SPH_GEO, WEATHER_CTX_MAT[i][1]); // wether map\r\n    WEATHER.layers.set(i + 1);\r\n    WEATHER.scale.multiplyScalar(SPH_SCALE);\r\n    WEATHER.matrixAutoUpdate = false;\r\n    AMB.layers.enable(i + 1);\r\n    SUN.layers.enable(i + 1);\r\n    SCENE.add(WEATHER);\r\n  }\r\n  //\r\n  const ATMO = new Mesh(); // atmosphere\r\n  ATMO.geometry = BASE_SPH_GEO;\r\n  ATMO.material = new MeshPhongMaterial({\r\n    color: 0xffffff,\r\n    side: DoubleSide,\r\n    transparent: true,\r\n    opacity: 0.05,\r\n    shininess: 0.0,\r\n  });\r\n  ATMO.scale.multiplyScalar(SPH_SCALE * .9);\r\n  ATMO.matrixAutoUpdate = false;\r\n\r\n  ////////////////////////////////\r\n  // ALL TOGHETHER\r\n  ////////////////////////////////\r\n  SCENE.add(PHYS, ATMO, AMB, SUN);\r\n\r\n  setInterval(updateSunPosition, 180000); // 3m\r\n  setInitDone();\r\n}\r\n\r\nfunction updateSunPosition() {\r\n  setSunPosition(SUN);\r\n}\r\n\r\nfunction setSunPosition(sun) {\r\n  const HH = new Date().getUTCHours();\r\n  const MM = new Date().getUTCMonth();\r\n  const MATRIX = new Matrix4();\r\n  let rotY = 0;\r\n  let rotX = 0;\r\n  // X axis 'inclination' (for months)\r\n  if (MM <= 6) rotX = -(8 * MM) + 24; // y = -8x+24\r\n  else rotX = 8 * MM - 72; // y = 8x-72\r\n  // Y axis rotation (for hours)\r\n  rotY = 180 - (HH / 24) * 360;\r\n  MATRIX.makeRotationFromEuler(new Euler(\r\n    THREE_MATH.degToRad(rotX),\r\n    THREE_MATH.degToRad(rotY),\r\n    0, 'YXZ'));\r\n  sun.position.set(0, 0, Z_OFF * 10); // reset the position with just a Z axis displacement\r\n  sun.position.applyMatrix4(MATRIX); // Rotation\r\n  sun.lookAt(0, 0, 0);\r\n}\r\n\r\n/**\r\n * Launch the process of downloading mercator projection (tiles)\r\n * and convert them into a single equirectangular projection (map)\r\n * @param {Number} i Weather map option (index)\r\n */\r\nexport function createWeatherMap(i) {\r\n  const MERCATOR_CANVAS = document.createElement('canvas');\r\n  // 512x512\r\n  MERCATOR_CANVAS.width = RES;\r\n  MERCATOR_CANVAS.height = RES;\r\n  const MERCATOR_CTX = MERCATOR_CANVAS.getContext('2d');\r\n  let cont = 0;\r\n  // merc. proj. images (2x2) to generate a single eqr. proj.\r\n  let X00 = new Image(T_SIZE, T_SIZE);\r\n  let X10 = new Image(T_SIZE, T_SIZE);\r\n  let X01 = new Image(T_SIZE, T_SIZE);\r\n  let X11 = new Image(T_SIZE, T_SIZE);\r\n  X00.crossOrigin = 'Anonymous';\r\n  X10.crossOrigin = 'Anonymous';\r\n  X01.crossOrigin = 'Anonymous';\r\n  X11.crossOrigin = 'Anonymous';\r\n  X00.src = URL.base + MAP[i] + '/1/0/0' + URL.last1;\r\n  X10.src = URL.base + MAP[i] + '/1/1/0' + URL.last1;\r\n  X01.src = URL.base + MAP[i] + '/1/0/1' + URL.last2;\r\n  X11.src = URL.base + MAP[i] + '/1/1/1' + URL.last2;\r\n  X00.onload = async () => await drawMapTiles(X00, T_SIZE * 0, T_SIZE * 0);\r\n  X10.onload = async () => await drawMapTiles(X10, T_SIZE * 1, T_SIZE * 0);\r\n  X01.onload = async () => await drawMapTiles(X01, T_SIZE * 0, T_SIZE * 1);\r\n  X11.onload = async () => await drawMapTiles(X11, T_SIZE * 1, T_SIZE * 1);\r\n  async function drawMapTiles(img, x, y) {\r\n    MERCATOR_CTX.drawImage(img, x, y);\r\n    const T_DATA = MERCATOR_CTX.getImageData(x, y, T_SIZE, T_SIZE);\r\n    const L = T_DATA.data.length;\r\n    // Alpha and color adjust\r\n    if (i === 0) { // Clouds\r\n      for (let i = 0; i < L; i += 4) {\r\n        let A = T_DATA.data[i + 3];\r\n        A = (A - (255 * 0.6)) / 0.4; // range displacement and scale\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] = A * 1.8;\r\n      }\r\n    } else if (i === 1) { // Precipitation\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 0] = 255; // R\r\n        T_DATA.data[i + 1] = 255; // G\r\n        T_DATA.data[i + 2] = 255; // B\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    } else if (i === 2) { // Pressure\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 3) { // Wind\r\n      for (let i = 0; i < L; i += 4) {\r\n        const R = T_DATA.data[i + 0];\r\n        const G = T_DATA.data[i + 1];\r\n        //const B = TILE.data[i + 2];\r\n        T_DATA.data[i + 0] = 255 - G * 0.75; // R\r\n        T_DATA.data[i + 1] = 255 - R * 0.75; // G\r\n        T_DATA.data[i + 2] = 255 - 255; // B\r\n        T_DATA.data[i + 3] *= 1.5;\r\n      }\r\n    } else if (i === 4) { // Temp\r\n      for (let i = 0; i < L; i += 4) {\r\n        T_DATA.data[i + 3] *= 1.8;\r\n      }\r\n    }\r\n    MERCATOR_CTX.putImageData(T_DATA, x, y);\r\n    cont++;\r\n    if (cont === T * T) { // When all tiles are done: convert Mer. to Eqr.\r\n      for (let y = 0; y < RES; y++) { // Take each line to get his new position\r\n        const LINE = MERCATOR_CTX.getImageData(0, y, RES, 1);\r\n        merToEqrWorker.postMessage([LINE, y, RES, RES / 2, i]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nlet messageCount = 0;\r\nmerToEqrWorker.onmessage = (e) => {\r\n  const I = e.data[0];\r\n  e.data[1].forEach(async merY => {\r\n    await WEATHER_CTX_MAT[I][0].putImageData(merY.content, 0, merY.newY);\r\n  });\r\n  /* for (let i = 0; i < 512; i++) {\r\n    weatherPack[I][0].putImageData(e.data[1][i].content, 0, e.data[1][i].newY);\r\n  } */\r\n  dbg('Mapa equirectangular \"' + MAP[I] + '\": Creado...');\r\n  WEATHER_CTX_MAT[I][1].map.needsUpdate = true;\r\n  // Put data on map master canvas (from first/default map)\r\n  if (I === 0)\r\n    document.getElementById('map_canvas')\r\n      .getContext('2d')\r\n      .putImageData(WEATHER_CTX_MAT[0][0].getImageData(0, 0, RES, RES * .5), 0, 0);\r\n  messageCount++;\r\n  if (messageCount === 5) suc('Mapas equirectangulares: Finalizados (5 de 5)');\r\n}\r\n\r\n/*\r\n\r\nLAYERS | NAME\r\n---\r\n0 phisic globe\r\n1 clouds\r\n2 pressipitation\r\n3 pressure\r\n4 wind\r\n5 temperature\r\n\r\n*/\r\n","import React, { Component } from 'react'\r\nimport { Vector3, Raycaster, PerspectiveCamera, WebGLRenderer, Matrix4, Euler } from 'three';\r\nimport OrbitControls from 'orbit-controls-es6';\r\nimport dragscroll from 'dragscroll';\r\nimport CustomRadio from './CustomRadio';\r\nimport CustomChk from './CustomChk';\r\nimport { AMB, createWeatherMap, init, SUN, WEATHER_CTX_MAT, LIGHT_ON, LIGHT_OFF } from '../js/threeStuff';\r\nimport SCENE, { NEAR, FAR, Z_OFF, city_labels, initDone, RES } from '../js/threeStuffUtils';\r\n\r\nconst VEC = new Vector3();\r\nconst RAY_CASTER = new Raycaster();\r\nconst MAPS = [\r\n  { id: 0, label: 'Terreno', ref: [''], icon: 'terrain' },\r\n  { id: 1, label: 'Nubosidad', ref: ['0%', '100%'], icon: 'cloud' },\r\n  { id: 2, label: 'Precipitación', ref: ['0mm', '200mm'], icon: 'precipitation' },\r\n  { id: 3, label: 'Presión', ref: ['950hPa', '1070hPa'], icon: 'tachometer' },\r\n  { id: 4, label: 'Viento', ref: ['0m/s', '200m/s'], icon: 'wind' },\r\n  { id: 5, label: 'Temperatura', ref: ['-40°C', '0°C', '40°C'], icon: 'thermometer' }\r\n];\r\nconst N_MAPS_TO_LOAD = 1; // 1 to 6\r\nconst DEFAULT_OPTION = 1;\r\nconst SMALL_MEDIA = window.matchMedia('(max-width: 679px)');\r\n\r\nlet camera, renderer, controls;\r\n\r\nexport default class WeatherMaps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option: DEFAULT_OPTION,\r\n      label: MAPS[DEFAULT_OPTION].label,\r\n      ref: MAPS[DEFAULT_OPTION].ref,\r\n      showContent: 'inline-block',\r\n      showGlobe: 'flex',\r\n      showMap: 'none'\r\n    }\r\n    this.setGlobe = this.setGlobe.bind(this);\r\n    this.setMap = this.setMap.bind(this);\r\n    this.setWeatherOption = this.setWeatherOption.bind(this);\r\n    this.animateRaf = 0;\r\n    this.labelsRaf = 0;\r\n\r\n    // Globe stuff\r\n    this.animate = this.animate.bind(this);\r\n    this.setCameraPosition = this.setCameraPosition.bind(this);\r\n    this.toggleLights = this.toggleLights.bind(this);\r\n    this.toggleRotation = this.toggleRotation.bind(this);\r\n    this.resetRedererSize = this.resetRedererSize.bind(this);\r\n    //this.resetRendererPixelRatio = this.resetRendererPixelRatio.bind(this);\r\n    this.updateLabels = this.updateLabels.bind(this);\r\n\r\n    // Map stuff\r\n    this.mapCanvas = undefined;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // most be done only one time\r\n    if (!initDone) {\r\n      // wait for three stuff (globe, weather map, and atmosphere '3D objects')\r\n      await init();\r\n      // launch weather maps requests (2D images from OpenWeatherMaps)\r\n      for (let i = 0; i < N_MAPS_TO_LOAD - 1; i++) createWeatherMap(i);\r\n      // init local three staff\r\n      camera = new PerspectiveCamera(45, RES / RES, NEAR, FAR);\r\n      camera.layers.enable(DEFAULT_OPTION);\r\n      renderer = new WebGLRenderer({\r\n        antialias: true,\r\n        alpha: true,\r\n        powerPreference: 'high-performance',\r\n        stencil: false,\r\n      });\r\n      renderer.setSize(RES, RES);\r\n      renderer.setPixelRatio(2);\r\n      renderer.gammaFactor = 2.2;\r\n      renderer.gammaOutput = true;\r\n      renderer.domElement.id = 'globe_canvas';\r\n      controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.rotateSpeed = 0.3;\r\n      controls.autoRotate = false;\r\n      controls.autoRotateSpeed = 2.0;\r\n      controls.enablePan = false;\r\n      controls.enableZoom = false;\r\n      controls.enableKeys = false;\r\n      controls.minPolarAngle = Math.PI - Math.PI * .90;\r\n      controls.maxPolarAngle = Math.PI * .90;\r\n    }\r\n    // every time it mounts...\r\n    document.getElementById('globe_box').appendChild(renderer.domElement); // add renderer canvas to dom\r\n    document.getElementById('weather_maps_body').style.overflowX = 'visible';\r\n    this.mapCanvas = document.getElementById('map_canvas'); // identify map canvas\r\n    this.setCameraPosition(0, 0);\r\n    this.resetRedererSize(); // resize renderer based on media queries\r\n    this.animate(); // init three stuff animation loop\r\n    city_labels.forEach(item => item.label = document.getElementById('city_label_' + item.id));\r\n    this.updateLabels(); // init labels updating loop\r\n    //window.addEventListener('resize', this.resetRendererPixelRatio, false); // listen for window resize\r\n    for (let i = 0; i < 6; i++)  // listen to each weather map option\r\n      document.getElementById('custom_radio_' + i).addEventListener('change', () => { this.setWeatherOption(i); });\r\n    // listen to 'toggle buttons' (actually checkbox and radio)\r\n    document.getElementById('custom_radio_globe_radio').addEventListener('change', () => { this.setGlobe(); });\r\n    document.getElementById('custom_radio_map_radio').addEventListener('change', () => { this.setMap(); });\r\n    document.getElementById('custom_chk_rotation_chk').addEventListener('change', e => { this.toggleRotation(e); });\r\n    document.getElementById('custom_chk_day_night_day_chk').addEventListener('change', e => { this.toggleLights(e); });\r\n    // listen for scroll on map to resize 'progress marks'\r\n    document.getElementById('weather_maps_body').addEventListener('scroll', e => {\r\n      const W = SMALL_MEDIA.matches ? 512 : 1024;\r\n      const OFFSET = (SMALL_MEDIA.matches ? 7 : 14) + 1; // margin + border\r\n      const SCROLLABLE = ((W + OFFSET * 2) * .5) + OFFSET; // expected 272 or 542\r\n      const SCROLLED = e.target.scrollLeft / SCROLLABLE;\r\n      document.getElementById('mark_left').style.width = (32 * SCROLLED) + 'px';\r\n      document.getElementById('mark_right').style.width = 32 - (32 * SCROLLED) + 'px';\r\n    });\r\n    SMALL_MEDIA.addListener(this.resetRedererSize);\r\n    dragscroll.reset(); // update dragscroll listeners\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // stop all lops\r\n    cancelAnimationFrame(this.animateRaf);\r\n    cancelAnimationFrame(this.labelsRaf);\r\n  }\r\n\r\n  /**\r\n   * Basic\r\n   */\r\n\r\n  setGlobe() {\r\n    document.getElementById('weather_maps_body').style.overflowX = 'visible';\r\n    if (this.state.showGlobe !== 'flex') this.setState({ showMap: 'none', showGlobe: 'flex' });\r\n  }\r\n\r\n  setMap() {\r\n    document.getElementById('weather_maps_body').style.overflowX = 'hidden';\r\n    if (this.state.showMAp !== 'flex') this.setState({ showGlobe: 'none', showMap: 'flex' });\r\n  }\r\n\r\n  setWeatherOption(option) {\r\n    this.setState({\r\n      option: option,\r\n      label: MAPS[option].label,\r\n      ref: MAPS[option].ref\r\n    });\r\n    let i = 1; // layer 0 = globe\r\n    do {\r\n      if (option === MAPS[i].id) camera.layers.enable(i);\r\n      else camera.layers.disable(i);\r\n      i++;\r\n    } while (i < 6);\r\n    if (option === 0) this.mapCanvas.getContext('2d').clearRect(0, 0, RES, RES * .5);\r\n    else this.mapCanvas.getContext('2d').putImageData(\r\n      WEATHER_CTX_MAT[option - 1][0].getImageData(0, 0, RES, RES * .5), 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Globe functionality\r\n   */\r\n\r\n  animate() {\r\n    this.animateRaf = requestAnimationFrame(this.animate);\r\n    controls.update();\r\n    renderer.render(SCENE, camera);\r\n  }\r\n\r\n  setCameraPosition(alpha, theta) {\r\n    let matrix = new Matrix4();\r\n    matrix.makeRotationFromEuler(new Euler(alpha, theta, 0, 'YXZ'));\r\n    camera.position.set(0, 0, Z_OFF).applyMatrix4(matrix);\r\n    camera.lookAt(0, 0, 0);\r\n  }\r\n\r\n  /* resetRendererPixelRatio() {\r\n    const DPR = window.devicePixelRatio || 1;\r\n    if (DPR < 0.5) { renderer.setPixelRatio(0.5); return; }\r\n    if (DPR > 3) { renderer.setPixelRatio(3); return; }\r\n    // renderer.setPixelRatio(window.devicePixelRatio); // Performance in danger :c\r\n  } */\r\n\r\n  toggleLights(e) {\r\n    if (e.target.checked === true) {\r\n      AMB.intensity = LIGHT_ON;\r\n      SUN.intensity = 0.0;\r\n      //scene.fog.color = new THREE.Color(0x686868);\r\n    } else {\r\n      AMB.intensity = LIGHT_OFF;\r\n      SUN.intensity = LIGHT_ON;\r\n      //scene.fog.color = new THREE.Color(0x80bfff);\r\n    }\r\n  }\r\n\r\n  toggleRotation(e) {\r\n    controls.autoRotate = e.target.checked;\r\n  }\r\n\r\n  resetRedererSize() {\r\n    const currentSize = renderer.getSize.x;\r\n    if (SMALL_MEDIA.matches && currentSize !== RES * .5) renderer.setSize(RES * .5, RES * .5);\r\n    else if (!SMALL_MEDIA.matches && currentSize !== RES) renderer.setSize(RES, RES);\r\n  }\r\n\r\n  updateLabels() {\r\n    this.labelsRaf = requestAnimationFrame(this.updateLabels);\r\n    const W = renderer.domElement.clientWidth;\r\n    const H = renderer.domElement.clientHeight;\r\n    // iterate on each label object (THREE & DOM stuff)\r\n    city_labels.forEach(item => {\r\n      let { label, dot, x, y } = item;\r\n      if (this.state.showGlobe === 'flex') { // Move & show/hide label over the globe canvas\r\n        dot.updateWorldMatrix(true, false);\r\n        dot.getWorldPosition(VEC);\r\n        VEC.project(camera);\r\n        RAY_CASTER.setFromCamera(VEC, camera);\r\n        const VEC_X = (VEC.x * .5 + .5) * W;\r\n        const VEC_Y = (VEC.y * -.5 + .5) * H;\r\n        label.style.transform = 'translate(-50%, -50%) translate(' + Math.round(VEC_X) + 'px, ' + Math.round(VEC_Y) + 'px)';\r\n        if (VEC.z > .8) label.style.display = 'none';\r\n        else label.style.display = '';\r\n      } else { // Print labels on map\r\n        label.style.display = '';\r\n        if (!SMALL_MEDIA.matches) { x *= 2; y *= 2; }\r\n        label.style.transform = 'translate(-50%, -50%) translate(' + Math.round(x) + 'px, ' + Math.round(y) + 'px)';\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"weather_maps_box\">\r\n        <article id=\"weather_maps\">\r\n          <div id=\"weather_maps_header\">\r\n            <h3>\r\n              <em>{this.state.label}</em>\r\n            </h3>\r\n            <CustomRadio\r\n              idWord=\"globe_radio\"\r\n              iconWord=\"globe\"\r\n              groupWord=\"weather_maps\"\r\n              titleWord=\"Globo\"\r\n              defaultChk={true}\r\n              key=\"custom_radio_key_globe_radio\" />\r\n            <CustomRadio\r\n              idWord=\"map_radio\"\r\n              iconWord=\"map\"\r\n              groupWord=\"weather_maps\"\r\n              titleWord=\"Mapa\"\r\n              defaultChk={false}\r\n              key=\"custom_radio_key_map_radio\" />\r\n          </div>\r\n          <hr />\r\n          <div id=\"weather_maps_body\" className=\"dragscroll\">\r\n            <div id=\"globe_box\" style={{ display: this.state.showGlobe }} >\r\n              <div id=\"globe_shadow\"><span></span></div>\r\n              {/* renderer canvas here */}\r\n            </div>\r\n            <div id=\"map_box\" style={{ display: this.state.showMap }} >\r\n              <div id=\"map_canvas_container\">\r\n                <canvas id=\"map_canvas\" width={RES} height={RES * .5} />\r\n              </div>\r\n            </div>\r\n            <div id=\"labels\">\r\n              {city_labels.map(item => (\r\n                <Label\r\n                  id={item.id}\r\n                  cityName={item.cityName}\r\n                  key={'city_label_' + item.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div id=\"ref\">\r\n            <div id=\"ref_data\">\r\n              {MAPS[this.state.option].ref.map(item => (\r\n                <p key={'ref_data_' + item}>{item}</p>\r\n              ))}\r\n            </div>\r\n            <hr />\r\n            <div id=\"ref_gradient_bg\"></div>\r\n            <div className={'ref_gradient ref_gradient_' + MAPS[this.state.option].id} >\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div id=\"weather_maps_control\">\r\n            <div id=\"globe_controls\" style={{ display: this.state.showGlobe }} >\r\n              <CustomChk\r\n                idWord=\"rotation_chk\"\r\n                iconWordA=\"rotation_360\"\r\n                titleWord=\"Alternar rotación\"\r\n                defaultChk={false} />\r\n              <CustomChk\r\n                idWord=\"day_night_day_chk\"\r\n                iconWordA=\"day_night\"\r\n                iconWordB=\"day\"\r\n                titleWord=\"Alternar iluminación\"\r\n                defaultChk={false} />\r\n            </div>\r\n            <div id=\"generic_controls\">\r\n              {MAPS.map(option => (\r\n                <CustomRadio\r\n                  idWord={String(option.id)}\r\n                  iconWord={option.icon}\r\n                  groupWord={'map_option'}\r\n                  titleWord={option.label}\r\n                  defaultChk={option.id === 1 ? true : false}\r\n                  key={'custom_radio_key_' + option.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div id=\"mark_box\" style={{ display: this.state.showMap }} >\r\n            <div id=\"mark_content\">\r\n              <div id=\"mark_left\"></div>\r\n              <div id=\"mark_right\"></div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Label(props) {\r\n  return (\r\n    <div id={'city_label_' + props.id} className={'city_label'} >\r\n      {props.cityName}\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}